{"version":3,"sources":["components/FindModal/FindModal.module.css","pages/Admin/ManageUsers/ManageUsers.module.css","components/EditableField/EditableField.module.css","components/FindProject/FindProject.module.css","pages/Common/MainView/MainView.module.css","components/Header/Header.module.css","pages/Admin/ManageReferenceProject/ManageReferenceProject.module.css","components/ReusableGoBack/ReusableGoBack.module.css","pages/Admin/CreateTeam/CreateTeam.module.css","pages/Admin/ReferenceProjects/ReferenceProjects.module.css","components/NameValuePair/NameValuePair.module.css","components/PrivateRoute/PrivateRoute.module.css","pages/Common/HomePage/HomePage.module.css","pages/Admin/CourseList/CourseList.module.css","components/HeaderRegistration/HeaderRegistration.module.css","components/SelectSortBy/SelectSortBy.module.css","hooks/useMultipleSelect/useMultipleSelect.module.css","components/PageHeader/PageHeader.module.css","models/User.model.ts","components/ReusableTable/ReusableTable.module.css","components/SearchInput/SearchInput.module.css","components/EditGradeModal/EditGrade.module.css","pages/Admin/TeamProjects/TeamProjects.module.css","pages/Admin/ManageUser/ManageUser.module.css","components/Menu/Menu.module.css","pages/Admin/ManageSheet/ManageSheet.module.css","pages/Common/MyProfile/MyProfile.module.css","app/utils.ts","components/Menu/MenuAdmin/MenuAdmin.tsx","hooks/hooks.ts","components/Menu/MenuSlice.ts","components/Header/Header.tsx","components/ListItemLink/ListItemLink.tsx","components/Menu/MenuParticipant/MenuParticipant.tsx","components/Menu/MenuMentor/MenuMentor.tsx","hooks/useMultipleSelect/useMultipleSelect.tsx","hooks/useDidUpdateEffect.ts","components/Snackbar/SnackbarSlice.ts","components/Snackbar/Snackbar.tsx","hooks/useSnackbar.ts","hooks/useMutationWithConfirm.ts","api/api.service.ts","api/gradesProcessing.ts","api/Section.api.ts","api/User.api.ts","QueryClient.ts","hooks/useQuery/useGenericQuery.ts","hooks/useQuery/useUsers.ts","hooks/useQuery/useUser.ts","api/Course.api.ts","hooks/useQuery/useCourses.ts","hooks/useQuery/useCourse.ts","api/ReferenceProject.api.ts","hooks/useQuery/useProjects.ts","hooks/useQuery/useProject.ts","api/Sheet.api.ts","hooks/useQuery/useSheets.ts","hooks/useQuery/useSheet.ts","api/Grade.api.ts","api/Project.api.ts","api/Team.api.ts","hooks/useQuery/useTeams.ts","hooks/useQuery/useTeam.ts","hooks/useQuery/useSections.ts","hooks/useQuery/useSection.ts","hooks/useQuery/useGrades.ts","components/Menu/Menu.tsx","components/PrivateRoute/PrivateRoute.tsx","components/PageHeader/PageHeader.tsx","pages/Common/HomePage/HomePage.tsx","theme/customMaterialTheme.ts","pages/Admin/CourseCreate/CourseCreate.tsx","components/ConfirmationDialog/ConfirmationDialog.tsx","components/UButton/UButton.tsx","components/ConfirmButton/ConfirmButton.tsx","components/DeleteButton/DeleteButton.tsx","pages/Admin/Course/CourseDetailsSlice.ts","pages/Admin/Course/CourseSectionListElement.tsx","components/ReusableGoBack/ReusableGoBack.tsx","pages/Admin/Course/CourseDetails.tsx","pages/Admin/CourseList/CourseListSlice.ts","pages/Admin/CourseList/CourseListElement.tsx","pages/Admin/CourseList/CourseList.tsx","components/StyledTextField/StyledTextField.style.ts","components/StyledTextField/StyledTextField.tsx","pages/Common/LogIn/LogIn.style.ts","components/HeaderRegistration/HeaderRegistration.tsx","pages/Common/LogIn/LogIn.tsx","pages/Common/Registration/Registration.style.ts","pages/Common/Registration/Registration.tsx","components/AddButton/AddButton.tsx","components/ReusableTable/ReusableTable.tsx","components/SearchInput/SearchInput.tsx","components/FindModal/FindModal.tsx","pages/Admin/ManageTeam/ManageTeam.tsx","components/SelectSortBy/SelectSortBy.tsx","pages/Admin/ManageSheets/ManageSheets.tsx","components/EditGradeModal/EditGrade.tsx","api/TeamProjects.api.ts","hooks/useQuery/useTeamProjects.ts","pages/Admin/ManageSheet/ManageSheet.tsx","components/ReusableTable/ReusableTableSlice.ts","pages/Admin/TeamProjects/TeamProjects.tsx","pages/Admin/CreateTeam/CreateTeam.tsx","pages/Admin/ManageTeams/ManageTeams.tsx","pages/Admin/ManageUsers/ManageUsers.tsx","pages/Participant/UserGrades/UserGrades.tsx","app/constants.ts","pages/Admin/ManageGrades/ManageGrades.tsx","pages/Admin/ManageUser/ManageUser.tsx","pages/Common/ResetPassword/ResetPasswordStyles.ts","pages/Common/ResetPassword/SuccessfulResetPasswordInfo.tsx","pages/Common/ResetPassword/ResetPasswordFromLink.tsx","pages/Admin/ManageSections/ManageSections.tsx","pages/Admin/SectionView/SectionView.tsx","pages/Common/MyProfile/MyProfile.tsx","pages/Admin/ReferenceProjects/ReferenceProjects.tsx","components/EditableField/EditableField.tsx","components/DetailPage/DetailPage.tsx","pages/Admin/ManageReferenceProject/ManageReferenceProject.tsx","components/FindProject/FindProject.tsx","components/NameValuePair/NameValuePair.tsx","Redux/EditingSlice.ts","pages/Admin/TeamProject/TeamProject.tsx","pages/Common/ResetPassword/ResetPasswordRequest.tsx","pages/Common/MainView/MainView.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","pages/Admin/SectionView/SectionView.module.css","pages/Admin/ManageGrades/ManageGrades.module.css","pages/Admin/ManageTeam/ManageTeam.module.css","pages/Participant/UserGrades/UserGrades.module.css","pages/Admin/TeamProject/TeamProject.module.css","models/index.ts","components/ListItemLink/ListItemLink.module.css","pages/Admin/ManageSheets/ManageSheets.module.css","pages/Admin/ManageTeams/ManageTeams.module.css","pages/Admin/ManageSections/ManageSections.module.css"],"names":["module","exports","UserType","UserStatus","userStatusDict","Active","Archived","Resigned","userTypeDict","Candidate","Participant","Mentor","Admin","invUserStatusDict","invUserTypeDict","convertUserToIUser","user","name","surname","email","type","status","getUserFromLocalStorage","userId","localStorage","getItem","userType","removeUserFromLocalStorage","removeItem","MenuAdminOption","useAppDispatch","useDispatch","useAppSelector","useSelector","menuSlice","createSlice","initialState","showSmallMenu","showSmallMenuUserAction","reducers","toggleMenu","state","setMenu","clearMenu","selectMenu","menuReducer","actions","Header","props","activeCourse","courseList","dispatch","history","useHistory","className","styles","header","style","display","alignItems","marginLeft","onClick","cursor","logo","push","activeCourseBox","logout","onLogout","color","ListItemLink","path","icon","text","selected","ListItem","button","component","Link","to","ListItemSmall","ListItemSelected","ListItemIcon","ListItemInsideSelected","ListItemTextSmall","ListItemText","MenuParticipantOption","MenuAdmin","smallMenu","useState","setSelected","location","useLocation","useEffect","option","pathname","replace","navSmall","nav","borderBottom","paddingTop","fontSize","fontWeight","Users","Courses","Sections","GradeSheets","Projects","TeamProjects","Teams","settings","MyProfile","MenuMentorOption","MenuParticipant","Grades","Team","MenuMentor","menuProps","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","theme","indexOf","typography","fontWeightRegular","fontWeightMedium","useMultipleSelect","options","label","labels","useTheme","Container","FormControl","select","InputLabel","Select","multiple","value","onChange","event","target","input","Input","renderValue","items","length","MenuProps","map","MenuItem","useDidUpdateEffect","fn","inputs","didMountRef","useRef","current","snackbarSlice","message","severity","isOpen","showSnackbar","action","payload","hideSnackbar","selectSnackbarInfo","snackbarDetails","Alert","elevation","variant","Snackbar","close","_event","reason","open","autoHideDuration","onClose","useSnackbar","show","showSuccess","showError","showInfo","showWarning","useMutationWithConfirm","request","successMessage","errorMessage","invalidate","onSuccess","onError","onSettled","newData","queryClient","useQueryClient","useMutation","onMutate","reqParam","a","cancelQueries","previousData","getQueryData","nextData","setQueryData","data","invalidateQueries","axios","defaults","baseURL","process","headers","common","withCredentials","interceptors","response","use","error","_redirect","window","href","config","get","method","url","Promise","reject","api","post","getMany","course","courseId","JSON","parse","_id","params","delete","patch","put","sumPoints","grades","numbers","Object","values","grade","points","reduce","acc","x","calcProjectGrade","sheet","mentorPoints","mentorGrades","maxPoints","mentorReviewerGrades","forEach","reviewer","revPooints","revMaxPoints","calcUserProjectGrade","projectPoints","participants","find","participantID","engagement","rolePoints","calcUserTasksGrade","taskPoints","taskMaxPoints","calcUserTestsGrade","testPoints","testMaxPoints","calcAvgGrade","taskGrade","taskMax","calcTaskGrade","testGrade","testMax","calcTestGrade","getSections","coursesResponse","courses","sections","section","id","startDate","Date","getTime","undefined","endDate","courseName","getSectionsByCourseId","courseResponse","getCourses","getProjectForSection","projects","project","sectionId","projectName","getSection","sectionRes","getOneSection","description","patchSection","addSection","deleteSection","displayFormattedDate","date","dateObject","toLocaleDateString","endpoint","transformUserData","averageGrade","b","getUsers","getUser","console","log","userID","getUsersOfType","users","filter","getParticipantsNotInTeam","courseRes","teams","result","every","team","u","getUserMe","deleteUser","updateUser","fetchUserMe","userDataLS","userData","all","Error","gradesExtended","QueryClient","defaultOptions","queries","retry","refetchOnWindowFocus","refetchOnMount","notifyOnChangeProps","genericSearch","queryKey","column","search","refetchQueries","active","item","match","genericSort","itemsArr","sort","localeCompare","useUsers","useQuery","searchUser","sortUsers","filterUsers","filters","some","useUser","useUserMe","useUsersOfType","getCourse","createCourse","fetchCourses","updateCourse","deleteCourse","fetchCourseSections","fetchCoursesAndSort","courseListElement1","courseListElement2","courseListElementStartDate1","useCourses","fetchCourseAsync","courseDto","sectionsResponse","useCourse","updateCourseAsync","sectionsIdToDelete","sectionsApi","getRefProjects","d","getRefProject","projectID","sectionName","createRefProject","deleteRefProject","updateRefProject","useProjects","useProject","getSheets","sheetsData","sheets","i","getSheetInfo","mentorID","mentorRes","mentor","mentorName","mentorSurname","projectRes","projectUrl","projectDescription","userRes","reviewers","reviewersInfo","_","omit","getSheet","createSheet","deleteSheet","getMentorSheets","mentorId","gradeSheetsRes","setMentor","setProject","projectId","addParticipant","participantId","deleteParticipant","addReviewer","setReviewers","setMentorGrade","patchMentorGrade","useSheets","searchSheet","sortSheets","useSheet","createGrade","updateGrade","gradeID","deleteGrade","getSectionNames","tmpSections","index","sectionService","res","err","sectionsIds","getProject","getTeamProjects","projectsRes","projectsData","parentProjectId","parentProject","overallGrade","idx","findIndex","getTeams","getTeam","teamRes","teamInfo","teamAvgGrade","tasksPoints","tasksMaxPoints","testsPoints","testsMaxPoints","projectsPoints","projectsMaxPoints","maxGrade","teamId","reqBody","addUserToTeam","deleteUserFromTeam","createTeam","deleteTeam","useTeams","searchTeam","sortTeams","useTeam","useSections","searchSection","sortSections","useSection","useGrades","enabled","Menu","addEventListener","handleResize","removeEventListener","debounce","innerWidth","parseInt","PrivateRoute","container","content","PageHeader","headerContainer","children","HomePage","setCourse","paddingRight","textAlign","marginTop","createMuiTheme","palette","background","default","paper","primary","mainTheme","main","secondary","fontFamily","addBtnTheme","UButtonTheme","CourseCreate","classes","makeStyles","createStyles","root","margin","spacing","nameInput","paddingBottom","backgroundColor","border","flexDirection","borderTop","paddingLeft","dateContainer","justifyContent","datePicker","marginRight","buttonAlignment","useStyles","changeCourseName","changeDescription","changeStartDate","changeEndDate","handleSaveButtonClick","then","createdCourse","TextField","e","multiline","utils","DateFnsUtils","DatePicker","disableToolbar","format","inputVariant","ThemeProvider","Button","disabled","Transition","React","forwardRef","ref","Slide","direction","ConfirmationDialog","Dialog","aria-labelledby","aria-describedby","TransitionComponent","DialogTitle","title","DialogContent","DialogContentText","DialogActions","handleCancel","handleConfirm","autoFocus","UButton","ConfirmButton","confirmTitle","confirmContent","onConfirm","isConfirmOpen","setIsConfirmOpen","handleCancelConfirm","DeleteButton","courseSlice","resetSectionsToDelete","CourseSectionElement","isEdit","Box","ReusableGoBack","pageName","elementName","container_goback","Breadcrumbs","aria-label","breadcrumbs","goBack","breadcrumbs_link","icon_back","Typography","CourseComponent","courseDetails","setIsEdit","isLoading","vars","mutate","LinearProgress","pageLink","alignContent","courseToSave","toISOString","activeCourseItem","ActiveCourse","courseListSlice","setActiveCourse","setItem","stringify","CourseListElement","isActive","courseApi","boxClasses","box","boxActive","stopPropagation","data-testid","padding","borderColor","outlineStyle","outlineColor","marginBottom","buttonEdit","buttonDelete","CourseList","isFetching","listElements","courseListElement","CircularProgress","manageCourseBar","listContainer","cssLabel","cssFocused","notchedOutline","borderWidth","outlinedInput","StyledTextField","required","fullWidth","InputLabelProps","focused","InputProps","form","submit","errorStyle","HeaderRegistration","SignIn","appDispatch","setEmail","password","setPassword","setResponseDataToLocalStorage","handleSignInClick","mostRecentCourse","onLogin","maxWidth","CssBaseline","noValidate","autoComplete","Grid","xs","buttonDisabled","Registration","loading","setLoading","invalidName","setInvalidName","invalidSurname","setInvalidSurname","invalidEmail","setInvalidEmail","invalidPasswd","setInvalidPasswd","invalidConfirmPasswd","setInvalidConfirmPasswd","confirmPassword","setForm","validateForm","isValidName","flag","validateName","isValidSurname","validateSurname","isValidEmail","validateEmail","isValidPasswd","test","validatePasswd","isValidConfirmPasswd","validateConfirmPasswd","handleFormChange","prevState","handleSubmit","preventDefault","areAllFieldsFilled","onSubmit","sm","helperText","justify","AddButton","restOfProps","ReusableTableFC","columns","tableName","trace","rows","pageSize","autoHeight","disableSelectionOnClick","memo","SearchInput","placeholder","setValue","inputRef","createRef","searchInput","OutlinedInput","onKeyPress","key","startAdornment","InputAdornment","position","SearchRounded","endAdornment","IconButton","edge","ArrowForwardOutlined","FindModal","setSearch","handleOpen","searchBy","Modal","modal","handleClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","container__header","container__body","container__body__search","searchPlaceholder","container__body__table","ReusableTable","query","onRowClick","onRowSelection","row","ManageTeam","openMentorsModal","setOpenMentorsModal","openUsersModal","setOpenUsersModal","selectedUsers","setSelectedUsers","useParams","participantsNotInTeamQuery","mentorsQuery","manageTeams","Paper","manageHeader","field","headerName","teamInfoRow","test-id","manageContainer","buttons","table","sortable","checkboxSelection","onSelectionModelChange","selectionModel","SelectSortBy","initialValue","ManageSheets","selectedSheets","useCreateSheet","useDeleteSheet","manageSheets","sheetId","selectSortBy","EditGrade","quality","changeQualty","initPoints","changePoints","initDescription","initComment","comment","changeComment","onClickSave","getTeamProject","deleteTeamProject","updateTeamProject","TEAM_PROJECTS","useTeamProjects","ManageSheet","Name","setMentorGrades","selectedParticipants","selectedGrades","openProjectsModal","setOpenProjectsModal","openReviewersModal","setOpenReviewersModal","editedGrade","setEditedGrade","setMentorForSheet","useSetMentorForSheet","setProjectForSheet","useSetProjectForSheet","useAddUserToSheet","useDeleteUserFromSheet","useAddReviewer","setReviewersForSheet","participantsIds","useSetReviewersForSheet","usePatchMentorGrade","useSetMentorGrade","participantsQuery","teamProjectsQuery","reviewersArr","rev","mentorColumns","participantColumns","manageSheet","reviewerInfoRow","newReviewers","deleteReviewer","newGrades","keys","addMentorGrade","newMentorGrades","entries","reusableTableSlice","initTable","displayedRows","dataLoading","dataReceived","filterData","includes","searchData","sortData","info","CreateTeam","setIsCreateTeam","selectedMentor","setSelectedMentor","mentors","labelId","ManageTeams","selectedTeams","setSelectedTeams","isCreateTeam","ManageUsers","statusSelect","statusFilters","typeSelect","typeFilters","tableContainer","filtersContainer","UserGrades","finalResult","getColor","percentage","testPointsPer","taskPointsPer","projectPointsPer","weight","average","table__percentage","toFixed","table__points","height","borderRadius","top","left","ManageGrades","setGrades","setSections","isOpenSectionsModal","setIsOpenSectionsModal","gradesData","sectionsQuery","sectionColumns","toggleEdit","edits","openSectionsModal","closeSectionsModal","handleInputChangeGrade","tabIndex","tmpGrades","handleSectionSelection","sectionRow","flexWrap","gradeContainer","gradeContainer__header","gradeContainer__body","gradeContainer__body__row","gradeContainer__body__row__key","htmlFor","gradeContainer__body__row__value","toString","Math","round","onClickDelete","saveGrade","ManageUser","userToSave","setUserToSave","newUser","useDeleteUser","handleInputChange","isNaN","container__header__button","manageUserForm","manageUserForm__row","manageUserForm__row__key","manageUserForm__row__value","status_radio_button","status_radio_button__edit","Status","checked","status_radio_button__blue","status_radio_button__red","status_radio_button__green","Role","SuccessfulResetPasswordInfo","ResetPasswordFromLink","setConfirmPassword","beenSent","setBeenSent","urlParams","URLSearchParams","token","ManageSections","valueFormatter","manageSections","addButton","SectionView","setSectionName","setCourseName","setCourseId","setDescription","setStartDate","setEndDate","referenceProject","setReferenceProject","coursesQuery","isInEditMode","setIsInEditMode","projectQuery","useProjectForSection","saveSection","sectionData","handleDeleteClick","handleChangeCourse","newCourseId","newCourse","newCourseName","displayedError","buttonContainer","deleteButton","saveButton","editButton","manageDescription","textFieldSectionName","section_title","textFieldCourse","course_title","renderCourse","textFieldDescription","manageSectionInfo","manageSectionMaterial","manageSectionDates","textFieldDateContainerOnEdit","autoOk","manageSectionRefPro","oldPassword","setOldPassword","newPassword","setNewPassword","isPasswordChange","setIsPasswordChange","passwordChanged","setPasswordChanged","modalContent","passwordInput","buttonEditPassword","buttonAbort","buttonConfirm","myProfileContainer","teamProjectDetailsContainer","attributeNamesContainer","attributeValuesContainer","StatusLabel","PermissionLabel","ReferenceProjects","refProjects","projectsTable","sectionID","EditableField","manageForm__row","textArea","manageForm__row__key__desc","manageForm__row__key","fieldName","manageForm__row__value","manageForm__row__value__desc","modalAction","fieldID","fieldValue","isAdding","DetailPage","restProps","initialValues","ManageReferenceProject","setIsAdding","cachedData","Array","isArray","updateProject","isUpdatedSuccessfully","isSuccess","deleteProject","addProject","isCreatedSuccessfully","fetchedProject","currentTarget","queryData","manageForm","FindProject","restData","searchedName","setSearchedName","displayedProjects","p","toLowerCase","onSectionSelection","NameValuePair","EditingSlice","isEditMode","switchEditMode","selectTeamProjects","editingInfo","useEditing","TeamProject","teamProjectId","setHeaderName","setHeader","TeamProjectContent","isError","TeamProjectDetailsEdit","deleteRequest","updateRequest","useUpdateTeamProject","setProjectName","setProjectUrl","setProjectDescription","teamProjectContainer","teamProjectHeader","teamProjectHeaderName","textarea","selectedProjectId","TeamProjectDetailView","ResetPasswordRequest","LoggedOut","mainContainer","exact","Course","MyTeam","MainView","Boolean","isLogged","setIsLogged","useCookies","removeCookie","removeQueries","handleLogout","MainContent","App","store","configureStore","reducer","editingReducer","tables","reusableTableReducer","SnackbarReducer","hostname","ReactDOM","render","QueryClientProvider","client","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,UAAY,6BAA6B,kBAAoB,qCAAqC,wBAA0B,2CAA2C,uBAAyB,4C,oBCAnPD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,WAAa,gCAAgC,gBAAkB,qCAAqC,iBAAmB,sCAAsC,eAAiB,oCAAoC,aAAe,kCAAkC,aAAe,oC,oBCA/UD,EAAOC,QAAU,CAAC,gBAAkB,uCAAuC,qBAAuB,4CAA4C,2BAA6B,kDAAkD,uBAAyB,8CAA8C,6BAA+B,sD,oBCAnUD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,UAAY,+BAA+B,kBAAoB,uCAAuC,wBAA0B,6CAA6C,uBAAyB,8C,oBCA3PD,EAAOC,QAAU,CAAC,cAAgB,kC,oBCAlCD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,uBAAuB,gBAAkB,gCAAgC,aAAe,+B,oBCA/KD,EAAOC,QAAU,CAAC,MAAQ,sCAAsC,QAAU,wCAAwC,YAAc,4CAA4C,UAAY,0CAA0C,kBAAoB,kDAAkD,0BAA4B,0DAA0D,gBAAkB,gDAAgD,WAAa,6C,oBCA7cD,EAAOC,QAAU,CAAC,YAAc,oCAAoC,iBAAmB,yCAAyC,iBAAmB,yCAAyC,UAAY,oC,oBCAxMD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,2BAA2B,QAAU,8B,oBCA1GD,EAAOC,QAAU,CAAC,MAAQ,iCAAiC,QAAU,mCAAmC,YAAc,uCAAuC,OAAS,kCAAkC,UAAY,qCAAqC,kBAAoB,6CAA6C,0BAA4B,qDAAqD,gBAAkB,6C,oBCA7ZD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,KAAO,4BAA4B,MAAQ,+B,oBCA1GD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,QAAU,gC,oBCAxED,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,YAAc,gC,oBCA1GD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,gBAAkB,sC,oBCAtFD,EAAOC,QAAU,CAAC,OAAS,mCAAmC,KAAO,mC,oBCArED,EAAOC,QAAU,CAAC,OAAS,+B,4ICA3BD,EAAOC,QAAU,CAAC,OAAS,oC,oBCA3BD,EAAOC,QAAU,CAAC,gBAAkB,sC,sRCDxBC,EASAC,E,kBATAD,O,yBAAAA,I,6BAAAA,I,mBAAAA,I,kBAAAA,M,cASAC,O,mBAAAA,I,uBAAAA,I,wBAAAA,M,KA0DL,IAAMC,GAAc,mBACxBD,EAAWE,OAAS,UADI,cAExBF,EAAWG,SAAW,YAFE,cAGxBH,EAAWI,SAAW,YAHE,GAMdC,GAAY,mBACtBN,EAASO,UAAY,aADC,cAEtBP,EAASQ,YAAc,eAFD,cAGtBR,EAASS,OAAS,UAHI,cAItBT,EAASU,MAAQ,SAJK,GAOZC,EAAoB,CAC/BR,OAAQF,EAAWE,OACnBC,SAAUH,EAAWG,SACrBC,SAAUJ,EAAWI,UAGVO,EAAkB,CAC7BL,UAAWP,EAASO,UACpBC,YAAaR,EAASQ,YACtBC,OAAQT,EAASS,OACjBC,MAAOV,EAASU,OAQLG,EAAqB,SAACC,GAAgB,IAAD,MAChD,MAAO,CACLC,KAAMD,EAAKC,KACXC,QAASF,EAAKE,QACdC,MAAK,UAAEH,EAAKG,aAAP,QAAgB,MAErBC,KAAMN,EAAe,UAACE,EAAKI,YAAN,QAAc,aAEnCC,OAAQR,EAAiB,UAACG,EAAKK,cAAN,QAAgB,e,oBCzG7CrB,EAAOC,QAAU,CAAC,UAAY,iCAAiC,2BAA2B,gDAAgD,8BAA8B,qD,oBCAxKD,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,MAAQ,2B,oBCA1BD,EAAOC,QAAU,CAAC,KAAO,6B,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,QAAU,4BAA4B,YAAc,gCAAgC,UAAY,8BAA8B,kBAAoB,sCAAsC,0BAA4B,8CAA8C,gBAAkB,oCAAoC,eAAiB,mCAAmC,oBAAsB,wCAAwC,yBAA2B,6CAA6C,2BAA6B,+CAA+C,oBAAsB,wCAAwC,0BAA4B,8CAA8C,0BAA4B,8CAA8C,yBAA2B,6CAA6C,2BAA6B,iD,+DCAz6BD,EAAOC,QAAU,CAAC,IAAM,kBAAkB,SAAW,uBAAuB,SAAW,yB,mBCAvFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,YAAc,iCAAiC,UAAY,+BAA+B,WAAa,gCAAgC,SAAW,8BAA8B,YAAc,iCAAiC,cAAgB,mCAAmC,gBAAkB,qCAAqC,UAAY,+BAA+B,gBAAkB,qCAAqC,aAAe,kCAAkC,QAAU,6BAA6B,MAAQ,6B,mBCApkBD,EAAOC,QAAU,CAAC,mBAAqB,sCAAsC,kBAAoB,qCAAqC,sBAAwB,yCAAyC,4BAA8B,+CAA+C,wBAA0B,2CAA2C,yBAA2B,4CAA4C,0BAA4B,6CAA6C,yBAA2B,4CAA4C,2BAA6B,8CAA8C,WAAa,8BAA8B,mBAAqB,sCAAsC,YAAc,+BAA+B,cAAgB,iCAAiC,MAAQ,yBAAyB,aAAe,gCAAgC,cAAgB,mC,m/BCCl5BqB,EAA0B,WAIrC,MAAO,CAAEC,OAHMC,aAAaC,QAAQ,MAGnBC,SAFAF,aAAaC,QAAQ,UAK3BE,EAA6B,WACxCH,aAAaI,WAAW,MACxBJ,aAAaI,WAAW,S,ICQrBC,E,gBCfQC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,QCSlDC,EAAYC,YAAY,CACnClB,KAAM,OACNmB,aAP0B,CAC1BC,eAAe,EACfC,yBAAyB,GAMzBC,SAAU,CACRC,WADQ,SACGC,GACTA,EAAMH,yBAA2BG,EAAMH,yBAEzCI,QAJQ,SAIAD,GACNA,EAAMJ,eAAgB,GAExBM,UAPQ,SAOEF,GACRA,EAAMJ,eAAgB,MAKfO,EAAa,SAACH,GAAD,OAAsBA,EAAMI,a,EAEJX,EAAUY,QAA7CN,E,EAAAA,WAAYE,E,EAAAA,QAASC,E,EAAAA,UAErBT,IAAf,Q,yBCoCea,EAvDA,SAACC,GAAwB,IAC9BC,EAAiBjB,GAAe,SAACS,GAAD,OAAWA,EAAMS,cAAjDD,aACFE,EAAWpB,cAMXqB,EAAUC,cAehB,OACE,sBAAKC,UAAWC,IAAOC,OAAvB,UACE,sBACEC,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,WAAY,UAD9D,UAGE,cAAC,IAAD,CAAUC,QATY,WAC1BV,EAASX,MAQmCiB,MAAO,CAACK,OAAQ,aACxD,sBACER,UAAWC,IAAOQ,KAClBF,QAjBS,WAEfT,EAAQY,KADA,UAiBFP,MAAO,CAAEK,OAAQ,WAHnB,UAKE,qCALF,SAKsB,8CAGxB,sBAAKR,UAAWC,IAAOU,gBAAvB,UACE,mBAAGX,UAAWC,IAAON,aAArB,gBAAoCA,QAApC,IAAoCA,OAApC,EAAoCA,EAAchC,OAClD,sBACEqC,UAAWC,IAAOW,OAClBL,QAAS,WApCflC,IAMAyB,EAAQY,KADA,KAkCIhB,EAAMmB,UAAUnB,EAAMmB,YAL9B,UAQE,cAAC,IAAD,CAAsBV,MAAO,CAAEW,MAAO,8BACtC,sD,qNCTKC,GAvCM,SAAC,GAKI,IAJxBC,EAIuB,EAJvBA,KACAC,EAGuB,EAHvBA,KACAC,EAEuB,EAFvBA,KACAC,EACuB,EADvBA,SAEQpC,EAAkBJ,YAAYW,GAA9BP,cAER,OACE,eAACqC,GAAA,EAAD,CACEC,QAAM,EACNC,UAAWC,KACXC,GAAIR,EACJhB,UACGjB,EAEGkB,KAAOwB,cAFX,UACOxB,KAAOmB,SADd,YAC0BD,GAAYlB,KAAOyB,kBANjD,UAUE,8BACE,cAACC,GAAA,EAAD,CACE3B,UAAS,UAAKC,KAAO0B,aAAZ,YACPR,GAAYlB,KAAO2B,wBAFvB,SAKGX,MAGL,oBACEjB,UAAS,UAAMjB,EAAgBkB,KAAO4B,kBAAoB5B,KAAO6B,aAAxD,YACPX,GAAYlB,KAAO2B,wBAFvB,UAKGV,EAAM,W,8BJ7BV3C,K,cAAAA,E,kBAAAA,E,oBAAAA,E,0BAAAA,E,oBAAAA,E,4BAAAA,E,cAAAA,E,uBAAAA,M,KAWL,IKdKwD,GLyFUC,GA3EwB,SAAC,GAAkC,IAAhCrE,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASqE,EAAgB,EAAhBA,UAAgB,EACvCC,mBAAiC,MADM,mBAChEf,EADgE,KACtDgB,EADsD,KAEjEC,EAAWC,cAUjB,OARAC,qBAAU,WACR,IAAMC,EAA0BH,EAASI,SAASC,QAChD,IACA,IAEFN,EAAYI,KACX,CAACH,IAGF,sBAAKpC,UAAWiC,EAAYhC,KAAOyC,SAAWzC,KAAO0C,IAArD,WACIV,GACA,sBAAK9B,MAAO,CAAEyC,aAAc,kBAA5B,UACE,cAAC,KAAD,CAAmBzC,MAAO,CAAE0C,WAAY,GAAIC,SAAU,MACtD,mBAAG3C,MAAO,CAAE4C,WAAY,KAAxB,mBAAmCpF,GAAQ,GAA3C,YAAiDC,GAAW,MAC5D,yCAIJ,cAAC,GAAD,CACEoD,KAAK,SACLC,KAAM,cAAC,IAAD,CAAYjB,UAAWC,KAAOgB,OACpCC,KAAK,QACLC,SAAUA,IAAa5C,EAAgByE,QAEzC,cAAC,GAAD,CACEhC,KAAK,WACLC,KAAM,cAAC,IAAD,CAAmBjB,UAAWC,KAAOgB,OAC3CC,KAAK,UACLC,SAAUA,IAAa5C,EAAgB0E,UAEzC,cAAC,GAAD,CACEjC,KAAK,YACLC,KAAM,cAAC,IAAD,CAAUjB,UAAWC,KAAOgB,OAClCC,KAAK,WACLC,SAAUA,IAAa5C,EAAgB2E,WAEzC,cAAC,GAAD,CACElC,KAAK,eACLC,KAAM,cAAC,IAAD,CAAgBjB,UAAWC,KAAOgB,OACxCC,KAAK,eACLC,SAAUA,IAAa5C,EAAgB4E,cAEzC,cAAC,GAAD,CACEnC,KAAK,YACLC,KAAM,cAAC,IAAD,CAAkBjB,UAAWC,KAAOgB,OAC1CC,KAAK,WACLC,SAAUA,IAAa5C,EAAgB6E,WAEzC,cAAC,GAAD,CACEpC,KAAK,gBACLC,KAAM,cAAC,IAAD,CAAkBjB,UAAWC,KAAOgB,OAC1CC,KAAK,gBACLC,SAAUA,IAAa5C,EAAgB8E,eAEzC,cAAC,GAAD,CACErC,KAAK,SACLC,KAAM,cAAC,IAAD,CAAYjB,UAAWC,KAAOgB,OACpCC,KAAK,QACLC,SAAUA,IAAa5C,EAAgB+E,SAEvCrB,GAAa,sBAAMjC,UAAWC,KAAOsD,SAAxB,sBACf,cAAC,GAAD,CACEvC,KAAK,aACLC,KAAM,cAAC,KAAD,CAAcjB,UAAWC,KAAOgB,OACtCC,KAAK,aACLC,SAAUA,IAAa5C,EAAgBiF,gB,+BKnF1CzB,K,gBAAAA,E,YAAAA,E,uBAAAA,Q,KAML,ICPK0B,GDqDUC,GA9C8B,SAAC,GAAkC,IAAhC/F,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASqE,EAAgB,EAAhBA,UAAgB,EAC7CC,mBAAuC,MADM,mBACtEf,EADsE,KAC5DgB,EAD4D,KAEvEC,EAAWC,cAUjB,OARAC,qBAAU,WACR,IAAMC,EAAgCH,EAASI,SAASC,QACtD,IACA,IAEFN,EAAYI,KACX,CAACH,IAGF,sBAAKpC,UAAWiC,EAAYhC,KAAOyC,SAAWzC,KAAO0C,IAArD,WACIV,GACA,sBAAK9B,MAAO,CAAEyC,aAAc,kBAA5B,UACE,cAAC,KAAD,CAAmBzC,MAAO,CAAE0C,WAAY,GAAIC,SAAU,MACtD,mBAAG3C,MAAO,CAAE4C,WAAY,KAAxB,mBAAmCpF,GAAQ,GAA3C,YAAiDC,GAAW,MAC5D,+CAIJ,cAAC,GAAD,CACEoD,KAAK,UACLC,KAAM,cAAC,IAAD,CAAgBjB,UAAWC,KAAOgB,OACxCC,KAAK,SACLC,SAAUA,IAAaY,GAAsB4B,SAG/C,cAAC,GAAD,CACE3C,KAAK,QACLC,KAAM,cAAC,IAAD,CAAmBjB,UAAWC,KAAOgB,OAC3CC,KAAK,OACLC,SAAUA,IAAaY,GAAsB6B,QAE7C3B,GAAa,sBAAMjC,UAAWC,KAAOsD,SAAxB,sBACf,cAAC,GAAD,CACEvC,KAAK,aACLC,KAAM,cAAC,KAAD,CAAcjB,UAAWC,KAAOgB,OACtCC,KAAK,aACLC,SAAUA,IAAaY,GAAsByB,iB,SC/ChDC,K,0BAAAA,E,uBAAAA,Q,KAKL,IAwCeI,GAxCyB,SAAC,GAAkC,IAAhClG,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,QAASqE,EAAgB,EAAhBA,UAAgB,EACxCC,mBAAkC,MADM,mBACjEf,EADiE,KACvDgB,EADuD,KAElEC,EAAWC,cAUjB,OARAC,qBAAU,WACR,IAAMC,EAA2BH,EAASI,SAASC,QACjD,IACA,IAEFN,EAAYI,KACX,CAACH,IAGF,sBAAKpC,UAAWiC,EAAYhC,KAAOyC,SAAWzC,KAAO0C,IAArD,WACIV,GACA,sBAAK9B,MAAO,CAAEyC,aAAc,kBAA5B,UACE,cAAC,KAAD,CAAmBzC,MAAO,CAAE0C,WAAY,GAAIC,SAAU,MACtD,mBAAG3C,MAAO,CAAE4C,WAAY,KAAxB,mBAAmCpF,GAAQ,GAA3C,YAAiDC,GAAW,MAC5D,0CAIJ,cAAC,GAAD,CACEoD,KAAK,cACLC,KAAM,cAAC,IAAD,CAAgBjB,UAAWC,KAAOgB,OACxCC,KAAK,eACLC,SAAUA,IAAasC,GAAiBN,eAGxClB,GAAa,sBAAMjC,UAAWC,KAAOsD,SAAxB,sBACf,cAAC,GAAD,CACEvC,KAAK,aACLC,KAAM,cAAC,KAAD,CAAcjB,UAAWC,KAAOgB,OACtCC,KAAK,aACLC,SAAUA,IAAasC,GAAiBD,gB,yFCtC1CM,GAAuB,CAC3BC,mBAAoB,KACpBC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAChDC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,UAChDE,WAAY,CACVjE,MAAO,CACLkE,UAAWC,IACXC,MAAO,OAKb,SAASC,GAAU7G,EAAcwD,EAAoBsD,GACnD,MAAO,CACL1B,YAC8B,IAA5B5B,EAASuD,QAAQ/G,GACb8G,EAAME,WAAWC,kBACjBH,EAAME,WAAWE,kBAUZ,SAASC,GAAT,GAIgC,IAH7CC,EAG4C,EAH5CA,QACAC,EAE4C,EAF5CA,MAE4C,IAD5CC,cAC4C,MADnC,GACmC,EACtCR,EAAQS,eAD8B,EAEZhD,mBAAc,IAFF,mBAErCf,EAFqC,KAE3BgB,EAF2B,KA0C5C,MAAO,CA7BL,cAACgD,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAapF,UAAWC,KAAOoF,OAA/B,UACE,cAACC,GAAA,EAAD,UAAaN,IACb,cAACO,GAAA,EAAD,CACEC,UAAQ,EACRC,MAAOtE,EACPuE,SAfa,SACnBC,GAKAxD,EAAYwD,EAAMC,OAAOH,QAUnBI,MAAO,cAACC,GAAA,EAAD,IACPC,YAAa,SAAC5E,GACZ,IAAM6E,EAAS7E,EAAsB8E,OACrC,OACE,iDAAkBD,EAAlB,gBAAyC,IAAVA,EAAc,IAAM,OAGvDE,UAAWpC,GAXb,SAaGiB,EAAQoB,KAAI,SAAC5D,GAAD,aACX,cAAC6D,GAAA,EAAD,CAEEX,MAAOlD,EACPpC,MAAOqE,GAAUjC,EAAQpB,EAAUsD,GAHrC,mBAKGQ,EAAO1C,UALV,QAKqBA,GAJdA,aAWgBpB,GCvFpB,SAASkF,GACtBC,EACAC,GAEA,IAAMC,EAAcC,kBAAO,GAE3BnE,qBAAU,WACJkE,EAAYE,QAASJ,IACpBE,EAAYE,SAAU,IAE1BH,G,4CCIQI,GAAgB9H,YAAY,CACvClB,KAAM,WACNmB,aARkC,CAClC8H,QAAS,GACTC,SAAU,UACVC,QAAQ,GAMR7H,SAAU,CACR8H,aAAc,SACZ5H,EACA6H,GAEA7H,EAAM2H,QAAS,EACf3H,EAAMyH,QAAUI,EAAOC,QAAQL,QAC/BzH,EAAM0H,SAAWG,EAAOC,QAAQJ,UAElCK,aAAc,SAAC/H,GACbA,EAAM2H,QAAS,M,GAKyBH,GAAcnH,QAA7CuH,G,GAAAA,aAAcG,G,GAAAA,aAEhBC,GAAqB,SAAChI,GAAD,OAAsBA,EAAMiI,iBAK/CT,MAAf,QCnCA,SAASU,GAAM3H,GACb,OAAO,cAAC,KAAD,aAAU4H,UAAW,EAAGC,QAAQ,UAAa7H,IAKtD,IAkBe8H,GAlB2B,WACxC,IAAM3H,EAAWpB,cAD6B,EAERE,YAAYwI,IAA1CL,EAFsC,EAEtCA,OAAQF,EAF8B,EAE9BA,QAASC,EAFqB,EAErBA,SAEnBY,EAAQ,SAACC,EAA+BC,GAC7B,cAAXA,GAEJ9H,EAASqH,OAEX,OACE,cAAC,KAAD,CAAkBU,KAAMd,EAAQe,iBAAkB,KAAMC,QAASL,EAAjE,SACE,cAAC,GAAD,CAAOK,QAASL,EAAOZ,SAAUA,EAAjC,SACGD,OCLMmB,GAdK,WAClB,IAAMlI,EAAWrB,IACXwJ,EAAO,SAACnB,GAAD,OAAqB,SAACD,GAAD,OAChC/G,EAASkH,GAAa,CAAEH,UAASC,gBASnC,MAAO,CAAEoB,YAPWD,EAAK,WAOHE,UANJF,EAAK,SAMUG,SAJhBH,EAAK,QAIqBI,YAFvBJ,EAAK,aC6CZK,GAhDgB,SAC7BC,EAD6B,GAWzB,IAAD,IARDC,sBAQC,MARgB,WAQhB,MAPDC,oBAOC,MAPc,uBAOd,EANDC,EAMC,EANDA,WACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,QAEC,EACgCd,KAA3BG,EADL,EACKA,UAAWD,EADhB,EACgBA,YACba,EAAcC,eAgCpB,OA/BiBC,aAAYV,EAAS,CAEpCW,SAAS,WAAD,4BAAE,WAAOC,GAAP,iBAAAC,EAAA,sEAEFL,EAAYM,cAAcX,GAFxB,cAKFY,EAAeP,EAAYQ,aAAgBb,KAE7BI,IACZU,EAAWV,EAAQK,EAAUG,GACnCP,EAAYU,aAAgBf,EAAYc,IATlC,kBAYD,CAAEF,iBAZD,2CAAF,mDAAC,GAcTX,UAAW,SAACe,GACVhB,GAAcK,EAAYY,kBAAkBjB,GAC5CF,GAAkBN,EAAYM,GAC9BG,GAAaA,EAAUe,IAEzBd,QAAS,WACPH,GAAgBN,EAAUM,GAC1BG,GAAWA,KAGbC,UAAW,WACTH,GAAcK,EAAYY,kBAAkBjB,GAC5CG,GAAaA,Q,oBCnDnBe,KAAMC,SAASC,QAAUC,oDACzBH,KAAMC,SAASG,QAAQC,OAAS,CAC9B,eAAgB9L,aAAaC,QAAQ,UAEvCwL,KAAMC,SAASK,iBAAkB,EAEjCN,KAAMO,aAAaC,SAASC,KAC1B,SAACD,GAAD,OAAcA,IADhB,+BAAAhB,EAAA,MAEE,WAAOkB,GAAP,YA4BWC,EA5BX,SAAAnB,EAAA,yDA4BWmB,EA5BX,WA6BI,IAEE,OADAjM,IACQkM,OAAOnI,SAASoI,KAAO,SAC/B,aA/BAH,EAAMF,SADZ,mBAE6BE,EAAMF,SAAvBpM,EAFZ,EAEYA,OAAQ0L,EAFpB,EAEoBA,KAFpB,KAGY1L,EAHZ,OAIW,MAJX,0BAK6B,iBAAjB0L,EAAK7C,QALjB,iCAOkB6D,EAASJ,EAAMI,OAPjC,UAQkBd,KAAMe,IAAI,kBAR5B,yBASyBf,KAAM,CACjBgB,OAAQF,EAAOE,OACfC,IAAKH,EAAOG,IACZnB,KAAMgB,EAAOhB,KACbQ,iBAAiB,IAb/B,oGAgBmBK,KAhBnB,yDAmBiBA,KAnBjB,iCAsBeO,QAAQC,OAAOT,IAtB9B,yDAyBWQ,QAAQC,OAAOT,IAzB1B,0DAFF,uDAuCA,IAuCeU,GAvCH,CACVC,KAAM,SACJhK,EACAyI,EACAgB,GAEA,OAAOd,KAAMqB,KAAQhK,EAAMyI,EAAMgB,IAEnCC,IAAK,SAAU1J,EAAcyJ,GAC3B,OAAOd,KAAMe,IAAO1J,EAAMyJ,IAE5BQ,QAAS,SAAIjK,EAAcyJ,GACzB,IAAMS,EAAShN,aAAaC,QAAQ,gBAC9BgN,EAAWD,EAASE,KAAKC,MAAMH,GAAQI,IAAM,KACnD,OAAO3B,KAAMe,IAAO1J,EAAb,aACLuK,OAAQ,CAAEJ,aACPV,KAGPe,OAAQ,SAAUxK,EAAcyJ,GAC9B,OAAOd,KAAM6B,OAAUxK,EAAMyJ,IAE/BgB,MAAO,SACLzK,EACAyI,EACAgB,GAEA,OAAOd,KAAM8B,MAASzK,EAAMyI,EAAMgB,IAEpCiB,IAAK,SAAiB1K,EAAcyI,GAMlC,OAAOE,KAAM+B,IAAO1K,EAAMyI,EALR,CAChBM,QAAS,CACP,eAAgB,sCC7ElB4B,GAAY,SAACC,GAAD,MAAoB,EADzBC,EAEPC,OAAOC,OAAOH,GAAQzF,KAAI,SAAC6F,GAAD,OAAWA,EAAMC,UAFdJ,EAAQK,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAMC,IAAG,IAGhC,IAApCN,OAAOC,OAAOH,GAAQ3F,OAAS,IAHtB,IAAC4F,GAMN,SAASQ,GAAiBC,GAC/B,IAAMC,EAAeZ,GAAUW,EAAME,cADiB,cAE5BD,EAF4B,GAEjDN,EAFiD,KAEzCQ,EAFyC,KAStD,OANAH,EAAMI,qBAAqBC,SAAQ,SAACC,GAClC,GAAKA,EAAShB,OAAd,CAD+C,MAEZD,GAAUiB,EAAShB,QAFP,mBAExCiB,EAFwC,KAE5BC,EAF4B,KAG/Cb,GAAUY,EACVJ,GAAaK,MAER,CAACb,EAAQQ,GAIX,SAASM,GAAqBT,EAAuBrO,GAAiB,IAAD,EACvCoO,GAAiBC,GADsB,mBACnEU,EADmE,KACpDP,EADoD,KAEpE/O,EAAO4O,EAAMW,aAAaC,MAAK,SAACxP,GAAD,OAAUA,EAAKyP,gBAAkBlP,KACtE,OAAMP,GAAQA,EAAK0P,YAAc1P,EAAK2P,WAG/B,CAFSL,EAAgBtP,EAAK0P,WAAc,IAAM1P,EAAK2P,WAClDZ,EANU,IAIoC,KAMrD,SAASa,GAAmB5P,GAAiB,IAC7CuO,EAAsB,EAAdQ,EAAiB,EAO9B,OANA/O,EAAKkO,OAAOe,SAAQ,SAACX,GACfA,EAAMuB,YAAcvB,EAAMwB,gBAC5BvB,GAAUD,EAAMuB,WAChBd,GAAaT,EAAMwB,kBAGhB,CAACvB,EAAQQ,GAGX,SAASgB,GAAmB/P,GAAiB,IAC7CuO,EAAsB,EAAdQ,EAAiB,EAO9B,OANA/O,EAAKkO,OAAOe,SAAQ,SAACX,GACfA,EAAM0B,YAAc1B,EAAM2B,gBAC5B1B,GAAUD,EAAM0B,WAChBjB,GAAaT,EAAM2B,kBAGhB,CAAC1B,EAAQQ,GAmBX,SAASmB,GAAa5B,GAAe,IAAD,EACnC6B,EAjBD,SAAuB7B,GAAe,IAAD,EACtC6B,EAAS,iBAAG7B,QAAH,IAAGA,OAAH,EAAGA,EAAOuB,kBAAV,QAAwB,EAC/BO,EAAO,OAAG9B,QAAH,IAAGA,OAAH,EAAGA,EAAOwB,cAGvB,OAFIM,EAASD,GAAwBC,EAChCD,EAAY,EACVA,EAYWE,CAAc/B,GAGhC,OAAO,EAZF,SAAuBA,GAAe,IAAD,EACtCgC,EAAS,iBAAGhC,QAAH,IAAGA,OAAH,EAAGA,EAAO0B,kBAAV,QAAwB,EAC/BO,EAAO,OAAGjC,QAAH,IAAGA,OAAH,EAAGA,EAAO2B,cAGvB,OAFIM,EAASD,GAAwBC,EAChCD,EAAY,EACVA,EAKWE,CAAclC,GAET,EAAI6B,EAAY,GADrB,iBAAG7B,QAAH,IAAGA,OAAH,EAAGA,EAAOgB,qBAAV,QAA2B,GCxDxC,IAAMmB,GAAW,uCAAG,gCAAAhF,EAAA,sEACK4B,GAAIL,IAAI,YADb,cACnB0D,EADmB,OAEnBC,EAAUD,EAAgB3E,KAFP,SAGDsB,GAAIL,IAAI,aAHP,cAGnB4D,EAHmB,OAGqB7E,KAHrB,kBAIlB6E,EAASnI,KAAI,SAACoI,GACnB,IAAMrD,EAASmD,EAAQnB,MAAK,SAAChC,GAAD,OAAYA,EAAOI,MAAQiD,EAAQrD,UAC/D,MAAO,CACLsD,GAAID,EAAQjD,IACZ3N,KAAM4Q,EAAQ5Q,KACd8Q,UAAWF,EAAQE,UACf,IAAIC,KAAKH,EAAQE,WAAWE,UAAY,SACxCC,EACJC,QAASN,EAAQM,QACb,IAAIH,KAAKH,EAAQM,SAASF,UAAY,SACtCC,EACJE,WAAY5D,EAASA,EAAOvN,KAAO,GACnCwN,UAAgB,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQI,MAAO,QAhBJ,2CAAH,qDAqBXyD,GAAqB,uCAAG,WACnCP,GADmC,mBAAArF,EAAA,sEAGN4B,GAAIL,IAAJ,mBAAoB8D,IAHd,cAG7BQ,EAH6B,OAI7B9D,EAAS8D,EAAevF,KAJK,SAKXsB,GAAIL,IAAJ,mBAAoB8D,EAApB,cALW,cAK7BF,EAL6B,OAMhC7E,KANgC,kBAO5B6E,EAASnI,KAAI,SAACoI,GACnB,MAAO,CACLC,GAAID,EAAQjD,IACZ3N,KAAM4Q,EAAQ5Q,KACd8Q,UAAWF,EAAQE,UACf,IAAIC,KAAKH,EAAQE,WAAWE,UAAY,SACxCC,EACJC,QAASN,EAAQM,QACb,IAAIH,KAAKH,EAAQM,SAASF,UAAY,SACtCC,EACJE,WAAY5D,EAASA,EAAOvN,KAAO,GACnCwN,UAAgB,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQI,MAAO,QAlBM,2CAAH,sDAuBrB2D,GAAU,uCAAG,4BAAA9F,EAAA,sEACD4B,GAAIL,IAAI,YADP,cAClB2D,EADkB,OACoB5E,KADpB,kBAEjB4E,EAAQlI,KAAI,SAAC+E,GAClB,MAAO,CACLsD,GAAItD,EAAOI,IACXwD,WAAY5D,EAAOvN,UALC,2CAAH,qDAUVuR,GAAoB,uCAAG,WAClCV,GADkC,iBAAArF,EAAA,sEAGV4B,GAAIL,IAAI,aAHE,cAG5ByE,EAH4B,OAGY1F,KACxC2F,EAAUD,EAASjC,MACvB,SAACkC,GAAD,OAAaA,EAAQC,WAAaD,EAAQC,YAAcb,KALxB,kBAO3B,CACLA,IAAW,OAAPY,QAAO,IAAPA,OAAA,EAAAA,EAAS9D,MAAO,GACpBgE,aAAoB,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASE,cAAe,KATL,2CAAH,sDAapBC,GAAU,uCAAG,WAAOf,GAAP,iBAAArF,EAAA,+EAIH4B,GAAIL,IAAJ,oBAAqB8D,IAJlB,OAItBgB,EAJsB,OAKtBjB,EAAUiB,EAAW/F,KALC,yEAOf,MAPe,iCASjB,CACL+E,GAAID,EAAQjD,IACZ3N,KAAM4Q,EAAQ5Q,OAXQ,yDAAH,sDAeV8R,GAAa,uCAAG,WAAOjB,GAAP,qBAAArF,EAAA,sEACJ4B,GAAIL,IAAJ,oBAAqB8D,IADjB,UACrBD,EADqB,OACwB9E,KAC/CyB,EAAS,MACTqD,EAAQrD,OAHe,0CAKOH,GAAIL,IAAJ,mBAAoB6D,EAAQrD,SALnC,OAKjBkD,EALiB,OAMvBlD,EAASkD,EAAgB3E,KANF,mFASpB,CACL+E,GAAID,EAAQjD,IACZ3N,KAAM4Q,EAAQ5Q,KACd8Q,UAAWF,EAAQE,UACf,IAAIC,KAAKH,EAAQE,WAAWE,UAAY,SACxCC,EACJC,QAASN,EAAQM,QACb,IAAIH,KAAKH,EAAQM,SAASF,UAAY,SACtCC,EACJc,YAAanB,EAAQmB,YACrBZ,WAAY5D,EAASA,EAAOvN,KAAO,GACnCwN,UAAgB,QAAN,EAAAD,SAAA,eAAQI,MAAO,KApBA,0DAAH,sDAwBbqE,GAAY,uCAAG,WAAOnB,EAAY/E,GAAnB,SAAAN,EAAA,sEACpB4B,GAAIW,IAAJ,oBAAqB8C,GAAM/E,GADP,2CAAH,wDAIZmG,GAAU,uCAAG,WAAOnG,GAAP,SAAAN,EAAA,sEAClB4B,GAAIC,KAAJ,YAAsBvB,GADJ,2CAAH,sDAIVoG,GAAa,uCAAG,WAAOrB,GAAP,SAAArF,EAAA,sEACrB4B,GAAIS,OAAJ,oBAAwBgD,IADH,2CAAH,sDAIbsB,GAAuB,SAACC,GACnC,IAAKA,EAAM,MAAO,GAClB,IAAMC,EAAa,IAAItB,KAAY,IAAPqB,GAE5B,MAAM,GAAN,OAAUC,EAAWC,uBC3HjBC,GAAW,SAEjB,SAASC,GAAkB1G,GACzB,OAAO,2BACFA,GADL,IAEE+E,GAAI/E,EAAK6B,IACTxN,KAAMZ,IAAauM,EAAK3L,MACxBC,OAAQjB,IAAe2M,EAAK1L,QAC5BqS,aAAc3G,EAAKmC,OAAO3F,OACtBwD,EAAKmC,OAAOzF,IAAIyH,IAAc1B,QAAO,SAAC/C,EAAGkH,GAAJ,OAAUlH,EAAIkH,IAAG,GACtD5G,EAAKmC,OAAO3F,OACZ,IAID,IAAMqK,GAAQ,uCAAG,4BAAAnH,EAAA,sEACC4B,GAAIL,IAAIwF,IADT,cAChB/F,EADgB,yBAEfA,EAASV,KAAKtD,IAAIgK,KAFH,2CAAH,qDAKRI,GAAO,uCAAG,WAAO/B,GAAP,iBAAArF,EAAA,sEACE4B,GAAIL,IAAJ,UAAWwF,GAAX,YAAuB1B,IADzB,cACfrE,EADe,OAEfzM,EAAOyM,EAASV,KACtB+G,QAAQC,IAAI,CAAEC,OAAQlC,IAHD,kBAId2B,GAAkBzS,IAJJ,2CAAH,sDAOPiT,GAAc,uCAAG,WAAO7S,GAAP,eAAAqL,EAAA,sEACRmH,KADQ,cACtBM,EADsB,yBAErBA,EAAMC,QAAO,SAACnT,GAAD,OAAgBA,EAAKI,OAASA,MAFtB,2CAAH,sDAadgT,GAAwB,uCAAG,wCAAA3H,EAAA,sEAClBwH,GAAe,eADG,cAChCC,EADgC,OAEhCjR,EAAezB,aAAaC,QAAQ,gBACpCgN,EAAmBxL,EAAeyL,KAAKC,MAAM1L,GAAc2L,IAAM,KAHjC,SAIdP,GAAIL,IAAI,oBAAeS,QAAf,IAAeA,IAAY,KAJrB,cAIhC4F,EAJgC,OAKhC7F,EAAS6F,EAAUtH,KALa,UAMjBsB,GAAIL,IAAJ,mBAAoBQ,EAAOI,IAA3B,WANiB,eAMhC0F,EANgC,OAOnCvH,KACGwH,EAASL,EAAMC,QAAO,SAACnT,GAC3B,OAAOsT,EAAME,OACX,SAACC,GAAD,OACGA,EAAKP,OACNO,EAAKP,MAAMM,OAAM,SAACE,GAEhB,OADIA,EAAE9F,MAAQ5N,EAAK8Q,IAAIgC,QAAQC,IAAI,OAC5BW,EAAE9F,MAAQ5N,EAAK8Q,YAdQ,kBAkB/ByC,GAlB+B,4CAAH,qDAqBxBI,GAAS,uCAAG,WAAOX,GAAP,SAAAvH,EAAA,+EAChB4B,GAAIL,IAAJ,UAAWwF,GAAX,eAA0BQ,KADV,2CAAH,sDAGTY,GAAU,uCAAG,WAAOZ,GAAP,SAAAvH,EAAA,+EACjB4B,GAAIS,OAAJ,UAAc0E,GAAd,YAA0BQ,KADT,2CAAH,sDAGVa,GAAU,uCAAG,WAAOb,EAAgBhT,GAAvB,SAAAyL,EAAA,+EACjB4B,GAAIU,MAAJ,UAAayE,GAAb,YAAyBQ,GAAUhT,IADlB,2CAAH,wDAIV8T,GAAW,uCAAG,sCAAArI,EAAA,6DACnBsI,EAAazT,IACb0S,EAFmB,UAEVe,EAAWxT,cAFD,QAEW,GAFX,SAGFoT,GAAUX,GAHR,cAGnBvG,EAHmB,OAInBuH,EAAWvH,EAASV,KAJD,SAMIoB,QAAQ8G,IACnCD,EAAS9F,OAAOzF,IAAhB,uCAAoB,WAAO6F,GAAP,eAAA7C,EAAA,yEAEX6C,QAFW,IAEXA,OAFW,EAEXA,EAAOqD,UAFI,sBAEauC,MAFb,uBAGMrC,GAAWvD,EAAMqD,WAHvB,cAGVd,EAHU,oDAKXvC,GALW,IAMd,gBAAuB,OAAPuC,QAAO,IAAPA,OAAA,EAAAA,EAAS5Q,OAAQ,MANnB,oFAUXqO,GAVW,IAWd,eAAgB,4BAXF,yDAApB,wDAPuB,cAMnB6F,EANmB,OAwBzBH,EAAS9F,OAASiG,EAxBO,kBAyBlBH,GAzBkB,4CAAH,qDClET5I,GAjBK,I,OAAIgJ,GAAY,CAClCC,eAAgB,CACdC,QAAS,CACPC,OAAO,EACPC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAqB,CACnB,OACA,QACA,aACA,YACA,e,kBCTKC,GAAgB,SAAIC,GAAJ,OAA2B,SACtDC,EACAC,GAEA,GAAe,KAAXA,EACF,OAAO1J,GAAY2J,eAAe,CAACH,GAAW,CAAEI,QAAQ,IAE1D5J,GAAYU,aAAa8I,GAAU,SAACtM,GAClC,OAAKA,EAEGA,EAAc6K,QAAO,SAAC8B,GAAD,MAAU,UAAGA,EAAKJ,IAAUK,MAAMJ,MAF5CxM,OAMV6M,GAAc,SAAIP,GAAJ,OAA2B,SAACC,GACrDzJ,GAAYU,aAAa8I,GAAU,SAACtM,GAClC,IAAKA,IAAWA,EAAcC,OAAQ,OAAOD,EAE7C,IAAM8M,EAAQ,aAAQ9M,GACtB,MAAmC,kBAAxB8M,EAAS,GAAGP,GAEdO,EAASC,MAAK,SAAC5J,EAAGkH,GAAJ,OAAUlH,EAAEoJ,GAAUlC,EAAEkC,MAExCO,EAASC,MAAK,SAAC5J,EAAGkH,GAAJ,MAAU,UAAGlH,EAAEoJ,IAAUS,cAAf,UAAgC3C,EAAEkC,a,UCnBtDU,GAFE,kBAAMC,aAAS,QAASnI,KAG5BoI,GAAad,GAAoB,SACjCe,GAAYP,GAAkB,SAE9BQ,GAAW,uCAAG,WAAOC,GAAP,SAAAnK,EAAA,sEACnBL,GAAY2J,eAAe,CAAC,SAAU,CAAEC,QAAQ,IAD7B,OAEzB5J,GAAYU,aAAa,SAAS,SAACoH,GACjC,OAAKA,EAEGA,EAAiBC,QACvB,SAACnT,GAAD,OAC2B,IAAxB4V,EAAQxV,KAAKmI,QACZqN,EAAQxV,KAAKyV,MAAK,SAACzV,GAAD,OAAUJ,EAAKI,OAASZ,gBAAaY,SAC9B,IAA1BwV,EAAQvV,OAAOkI,QACdqN,EAAQvV,OAAOwV,MACb,SAACxV,GAAD,OAAYL,EAAKK,SAAWjB,kBAAeiB,UARhC6S,KAHI,2CAAH,sDCPlB0B,GAAW,OAGFkB,GADC,SAAChF,GAAD,OAAgB0E,aAAS,CAACZ,GAAU9D,IAAK,kBAAMzD,GAAYyD,OAG9DiF,GAAY,SAAC1O,GAAD,OACvBmO,aAAS,CAACZ,GAAU,OAAO,kBAAMvH,OAAmBhG,IA0BzC2O,GAAiB,SAC5B5V,EACAiH,GAF4B,OAGzBmO,aAASpV,EAAO,KAAK,kBAAMiN,GAAmBjN,KAAOiH,ICzBpDmL,GAAmB,UAEZyD,GAAS,uCAAG,WAAOnF,GAAP,SAAArF,EAAA,+EAChB4B,GAAIL,IAAJ,UAAWwF,GAAX,YAAuB1B,KADP,2CAAH,sDAIToF,GAAY,uCAAG,WAAO1I,GAAP,SAAA/B,EAAA,+EACnB4B,GAAIC,KAAKkF,GAAUhF,IADA,2CAAH,sDAIZ2I,GAAY,uCAAG,sBAAA1K,EAAA,+EACnB4B,GAAIL,IAAIwF,KADW,2CAAH,qDAIZ4D,GAAY,uCAAG,WAAO5I,GAAP,SAAA/B,EAAA,+EACnB4B,GAAIW,IAAJ,UAAWwE,GAAX,YAAuBhF,EAAOI,KAAOJ,IADlB,2CAAH,sDAIZ6I,GAAY,uCAAG,WAAO5I,GAAP,SAAAhC,EAAA,+EACnB4B,GAAIS,OAAJ,UAAc0E,GAAd,YAA0B/E,KADP,2CAAH,sDAIZ6I,GAAmB,uCAAG,WAAO7I,GAAP,SAAAhC,EAAA,+EAC1B4B,GAAIL,IAAJ,UAAWwF,GAAX,YAAuB/E,EAAvB,eAD0B,2CAAH,sDCjCnB8I,GAAmB,uCAAG,8BAAA9K,EAAA,sEACV4B,KADU,cAC3BZ,EAD2B,QAE3BkE,EAAoClE,EAASV,MAC3CsJ,MAAK,SAAUmB,EAAoBC,GACzC,IAAMC,EAA8B,IAAI1F,KACtCwF,EAAmBzF,WACnBE,UAIF,OAHoC,IAAID,KACtCyF,EAAmB1F,WACnBE,UACmCyF,KAVN,kBAa1B/F,GAb0B,2CAAH,qDAiBjBgG,GADI,kBAAMnB,aAAS,UAAWe,KCXvCK,GAAgB,uCAAG,WAAOnJ,GAAP,qBAAAhC,EAAA,sEACM4B,GAAcI,GADpB,cACjB6D,EADiB,OAEjBuF,EAAuBvF,EAAevF,KAFrB,SAGQsB,GAAwBI,GAHhC,cAGjBqJ,EAHiB,OAIjBlG,EAAiCkG,EAAiB/K,KAJjC,6CAMlB8K,GANkB,IAOrBjG,SAAUA,KAPW,2CAAH,sDAaPmG,GAFG,SAACtJ,GAAD,OAChB+H,aAAS,CAAC,SAAU/H,IAAW,kBAAMmJ,GAAiBnJ,OAG3CuJ,GAAiB,uCAAG,WAC/BxJ,EACAyJ,GAF+B,SAAAxL,EAAA,6DAI/BwL,EAAmBhI,QAAnB,uCAA2B,WAAO0C,GAAP,SAAAlG,EAAA,sEACnByL,GAA0BvF,GADP,2CAA3B,uDAJ+B,SAOzBtE,GAAiBG,GAPQ,2CAAH,wDCpBxBgF,GAAQ,WAED2E,GAAc,uCAAG,sBAAA1L,EAAA,sEACd4B,GAAIE,QAAJ,UAA6BiF,KADf,uCAC4BzG,KAAKtD,KAAI,SAAC2O,GAAD,mBAAC,eAC7DA,GAD4D,IAE/DrG,UAAW,IAAIC,KAAKoG,EAAErG,WAAWwB,qBACjCpB,QAAS,IAAIH,KAAKoG,EAAEjG,SAASoB,2BAJH,2CAAH,qDAQd8E,GAAa,uCAAG,WAAOC,GAAP,iBAAA7L,EAAA,sEACJ4B,GAAIL,IAAJ,UAA6BwF,GAA7B,YAAyC8E,IADrC,uBACnBvL,EADmB,EACnBA,KADmB,6CAItBA,GAJsB,IAKzB+E,GAAI/E,EAAK6B,IACT+D,UAAW5F,EAAK4F,UAAU/D,IAC1B2J,YAAaxL,EAAK4F,UAAU1R,KAC5B8Q,UAAW,IAAIC,KAAKjF,EAAK4F,UAAUZ,WAAWwB,qBAC9CpB,QAAS,IAAIH,KAAKjF,EAAK4F,UAAUR,SAASoB,wBATjB,2CAAH,sDAabiF,GAAgB,uCAAG,WAAO9F,GAAP,SAAAjG,EAAA,+EACvB4B,GAAIC,KAAJ,UAA+CkF,IAAYd,IADpC,2CAAH,sDAIhB+F,GAAgB,uCAAG,WAAOH,GAAP,SAAA7L,EAAA,+EACvB4B,GAAIS,OAAJ,UAA+B0E,GAA/B,YAA2C8E,KADpB,2CAAH,sDAqBhBI,GAAgB,uCAAG,WAAOhG,GAAP,SAAAjG,EAAA,+EACvB4B,GAAIU,MAAJ,UACFyE,GADE,YACUd,EAAQ9D,KACvB8D,IAH4B,2CAAH,sDC/CdiG,GAFK,SAACtQ,GAAD,OAClBmO,aAAS,WAAYnI,GAAoBhG,ICMrCuN,GAAW,UAEJgD,GAAa,SACxB9G,EACAzJ,GAFwB,OAGrBmO,aAAS,CAACZ,GAAU9D,IAAK,kBAAMzD,GAAkByD,KAAKzJ,I,qBCH9CwQ,GAAS,uCAAG,oCAAApM,EAAA,sEACA4B,GAAIL,IAAI,iBADR,OACjBP,EADiB,OAEjBqL,EAAarL,EAASV,KACtBgM,EAAuB,GAHN,OAAAtM,EAAA,KAITqM,GAJS,qDAIdE,EAJc,qBAKDC,GAAaH,EAAWE,IALvB,QAKfpJ,EALe,OAMrBmJ,EAAO/U,KAAK4L,GANS,gDAShBmJ,GATgB,4CAAH,qDAYTE,GAAY,uCAAG,WAC1BrJ,GAD0B,yDAAAnD,EAAA,+EAKA4B,GAAIL,IAAI,UAAY4B,EAAMsJ,UAL1B,OAKlBC,EALkB,OAMlBC,EAASD,EAAUpM,KAND,EAOO,CAACqM,EAAOnY,KAAMmY,EAAOlY,SAAlDmY,EAPsB,KAOVC,EAPU,uDAStBD,EAA8B,MAAlBC,EAAyB,MATf,mCAcCjL,GAAIL,IAAI,mBAAqB4B,EAAM0I,WAdpC,QAclBiB,EAdkB,OAelB7G,EAA2B6G,EAAWxM,KAC5C6F,EAAcF,EAAQE,YACtB4G,EAAa9G,EAAQ8G,WACrBC,EAAqB/G,EAAQM,YAlBL,mDAoBxBJ,EAAc,MACZA,EAAgD,MAAnC4G,EAA0C,MAA9BC,EAAqC,MArBxC,QAwBpBlJ,EAxBoB,UAwBLX,EAAMW,oBAxBD,QAwBiB,GAxBjB,OAAA9D,EAAA,KAyBZ8D,GAzBY,sDAyBjByI,EAzBiB,WA0BlBhY,EAAOuP,EAAayI,GA1BF,oBA4BA3K,GAAIL,IAAI,UAAYhN,EAAKyP,eA5BzB,QA4BhBiJ,EA5BgB,OA6BhB1E,EAAW0E,EAAQ3M,KACzBwD,EAAayI,GAAG/X,KAAO+T,EAAS/T,KAChCsP,EAAayI,GAAG9X,QAAU8T,EAAS9T,QA/Bb,mDAiCtBqP,EAAayI,GAAG/X,KAAO,MACvBsP,EAAayI,GAAG9X,QAAU,MAlCJ,uCAsCpByY,EAtCoB,UAsCR/J,EAAM+J,iBAtCE,QAsCW,GAtCX,UAuCExL,QAAQ8G,IAClC0E,EAAUlQ,IAAV,uCAAc,WAAOlI,GAAP,mBAAAkL,EAAA,6DACNyD,EAAqB,CACzBtB,IAAKrN,EACLN,KAAM,MACNC,QAAS,MACTC,MAAO,OALG,kBAQYkN,GAAIL,IAAI,UAAYzM,GARhC,OAQJmY,EARI,OASJ1E,EAAW0E,EAAQ3M,KACzBmD,EAAStB,IAAMrN,EACf2O,EAASjP,KAAO+T,EAAS/T,KACzBiP,EAAShP,QAAU8T,EAAS9T,QAC5BgP,EAAS/O,MAAQ6T,EAAS9T,QAbhB,mFAeLgP,GAfK,0DAAd,wDAxCwB,eAuCpB0J,EAvCoB,oDA4DrBC,KAAEC,KAAKlK,EAAO,QA5DO,IA6DxBkC,GAAIlC,EAAMhB,IACV0J,UAAS,UAAE1I,EAAM0I,iBAAR,QAAqB,GAC9BY,SAAQ,UAAEtJ,EAAMsJ,gBAAR,QAAoB,GAC5B3I,eACAT,aAAY,UAAEF,EAAME,oBAAR,QAAwB,GACpCuJ,aACAC,gBACA1G,cACA4G,aACAC,qBACAE,UAAWC,KAvEa,0EAAH,sDA2EZG,GAAQ,uCAAG,WAAOjI,GAAP,eAAArF,EAAA,sEACC4B,GAAIL,IAAI,iBAAmB8D,GAD5B,cAChBrE,EADgB,yBAEfwL,GAAaxL,EAASV,OAFP,2CAAH,sDAKRiN,GAAW,uCAAG,sBAAAvN,EAAA,sEACnB4B,GAAIC,KAAK,gBAAiB,CAC9B4K,SAAU,2BACVZ,UAAW,6BAHY,2CAAH,qDAOX2B,GAAW,uCAAG,WAAOnI,GAAP,SAAArF,EAAA,sEACnB4B,GAAIS,OAAO,iBAAmBgD,GADX,2CAAH,sDAIXoI,GAAe,uCAAG,WAC7BC,GAD6B,eAAA1N,EAAA,+EAKJ4B,GAAIL,IAAJ,mBAAoBmM,EAApB,kBALI,OAK3BC,EAL2B,+EAOpB,MAPoB,gCAStBA,EAAerN,MATO,yDAAH,sDA2BfsN,GAAS,uCAAG,WAAOvI,EAAYqI,GAAnB,SAAA1N,EAAA,sEACjB4B,GAAIW,IAAJ,wBAAyB8C,EAAzB,uBAA0CqI,GAAY,IADrC,2CAAH,wDAITG,GAAU,uCAAG,WAAOxI,EAAYyI,GAAnB,SAAA9N,EAAA,sEAClB4B,GAAIW,IAAJ,wBAAyB8C,EAAzB,wBAA2CyI,GAAa,IADtC,2CAAH,wDAIVC,GAAc,uCAAG,WAAO1I,EAAY2I,GAAnB,SAAAhO,EAAA,sEACtB4B,GAAIC,KAAJ,wBAA0BwD,EAA1B,4BAAgD2I,GAAiB,IAD3C,2CAAH,wDAIdC,GAAiB,uCAAG,WAAO5I,EAAY2I,GAAnB,SAAAhO,EAAA,sEACzB4B,GAAIS,OAAJ,wBAA4BgD,EAA5B,yBAA+C2I,IADtB,2CAAH,wDAIjBE,GAAW,uCAAG,WAAO7I,EAAYqI,GAAnB,SAAA1N,EAAA,sEACnB4B,GAAIC,KAAJ,wBAA0BwD,EAA1B,yBAA6CqI,GAAY,IADtC,2CAAH,wDAIXS,GAAY,uCAAG,WAAO9I,EAAY6H,GAAnB,SAAAlN,EAAA,sEACpB4B,GAAIW,IAAJ,wBAAyB8C,EAAzB,cAAyC,CAAE6H,cADvB,2CAAH,wDAsBZkB,GAAc,uCAAG,WAAO/I,EAAY5C,GAAnB,SAAAzC,EAAA,sEACtB4B,GAAIW,IAAJ,wBAAyB8C,EAAzB,kBAA6C,CAAE5C,WADzB,2CAAH,wDAId4L,GAAgB,uCAAG,WAAOhJ,EAAY5C,GAAnB,SAAAzC,EAAA,sEACxB4B,GAAIU,MAAJ,wBAA2B+C,EAA3B,kBAA+C,CAAE5C,WADzB,2CAAH,wDCvLvB0G,GAAW,SAGFmF,GADG,kBAAMvE,aAASZ,IAAU,kBAAMvH,SAGpC2M,GAAcrF,GAA0BC,IACxCqF,GAAa9E,GAAwBP,ICN5CA,GAAW,QAIFsF,GAFE,SAACpJ,GAAD,OACf0E,aAAS,CAACZ,GAAU9D,IAAK,kBAAMzD,GAAayD,OCJxC0B,GAAmB,SAEZ2H,GAAW,uCAAG,WAAOnH,EAAgB1E,GAAvB,SAAA7C,EAAA,+EAClB4B,GAAIC,KAAJ,UAAYkF,GAAZ,YAAwBQ,GAAU1E,IADhB,2CAAH,wDAGX8L,GAAW,uCAAG,WAAOC,EAAiB/L,GAAxB,SAAA7C,EAAA,+EAClB4B,GAAIU,MAAJ,UAAayE,GAAb,YAAyB6H,GAAW/L,IADlB,2CAAH,wDAGXgM,GAAW,uCAAG,WAAOD,GAAP,SAAA5O,EAAA,+EAClB4B,GAAIS,OAAJ,UAAc0E,GAAd,YAA0B6H,KADR,2CAAH,sD,SASTE,G,iFAAf,WAA+B3J,GAA/B,qBAAAnF,EAAA,sDACQ+O,EADR,aAC8C5J,GAD9C,OAAAnF,EAAA,KAEmBmF,GAFnB,qDAEU6J,EAFV,WAGU5J,EAAUD,EAAS6J,GAH7B,SAIsBC,GAAA,OAA0B7J,QAA1B,IAA0BA,OAA1B,EAA0BA,EAASjD,KAJzD,OAIU+M,EAJV,OAKI,IAEEH,EAAYC,GAAS,CAAE7M,IAAK+M,EAAI/M,IAAK3N,KAAM0a,EAAI1a,MAC/C,MAAO2a,GACPJ,EAAYC,GAAS,CAAE7M,IAAG,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAASjD,IAAK3N,KAAM,cATtD,gDAYSua,GAZT,6C,oEAeO,WAAyBxH,GAAzB,qBAAAvH,EAAA,sEACkB4B,GAAIL,IAAJ,UAAWwF,GAAX,YAAuBQ,IADzC,cACCvG,EADD,OAECyB,EAFD,aAEczB,EAASV,MACtB8O,EAAkC3M,EAAOzF,KAAI,SAAC6F,GAAD,MAAoB,CACrEV,IAAKU,EAAMqD,cAJR,SAMkB4I,GAAgBM,GANlC,cAMCjK,EAND,yBAOE,CAAE1C,SAAQ0C,aAPZ,4C,sBC/BA,IAAMkK,GAAU,uCAAG,WAAOhK,GAAP,mBAAArF,EAAA,+EAIH4B,GAAIL,IAAJ,oBAAqB8D,IAJlB,OAItByH,EAJsB,OAKtB7G,EAAU6G,EAAWxM,KALC,yEAOf,MAPe,yBASF8F,GAAWH,EAAQC,WATjB,eASlBd,EATkB,yBAUjB,CACLC,GAAIY,EAAQ9D,IACZ3N,KAAMyR,EAAQE,YACd2F,aAAoB,OAAP1G,QAAO,IAAPA,OAAA,EAAAA,EAAS5Q,OAAQ,GAC9BiN,IAAKwE,EAAQ8G,WACbxG,YAAaN,EAAQM,cAfC,yDAAH,sD,SCiBR+I,G,mFAAf,WACEjK,EACAqI,GAFF,qBAAA1N,EAAA,sEAI4B4B,GAAIL,IAAJ,iBAAkB8D,EAAlB,cAJ5B,cAIQkK,EAJR,OAKQC,EAAeD,EAAYjP,KALnC,SAMyBoB,QAAQ8G,IAC7BgH,EAAaxS,IAAb,uCAAiB,WAAOiJ,GAAP,iBAAAjG,EAAA,sEACaqP,GAAWpJ,EAAQwJ,iBADhC,cACTC,EADS,yBAER,CACLrK,GAAIY,EAAQ9D,IACZ3N,KAAMyR,EAAQE,YACdwJ,aAAc,EACd7D,YAAW,iBAAE4D,QAAF,IAAEA,OAAF,EAAEA,EAAe5D,mBAAjB,QAAgC,MAC3CrK,IAAKwE,EAAQ8G,WACbxG,YAAaN,EAAQM,cARR,2CAAjB,wDAPJ,cAMQP,EANR,gBAmBuByH,GAAgBC,GAnBvC,cAoBQ,QADAjL,EAnBR,cAoBQ,IAANA,KAAQe,SAAQ,SAACL,GACf,IAAMyM,EAAM5J,EAAS6J,WAAU,SAAC5J,GAAD,OAAaA,EAAQZ,KAAOlC,EAAM0I,aAC7D+D,GAAO,IACT5J,EAAS4J,GAAKD,aAAezM,GAAiBC,GAAO,OAvB3D,kBA0BS6C,GA1BT,6C,sBA6BO,IAAM8J,GAAQ,uCAAG,WAAO9N,GAAP,mBAAAhC,EAAA,sEACE4B,GAAIL,IAAI,oBAAeS,QAAf,IAAeA,IAAY,KADrC,cAChB4F,EADgB,OAEhB7F,EAAS6F,EAAUtH,KAFH,SAGDsB,GAAIL,IAAJ,kBAAmBQ,EAAOI,IAA1B,WAHC,cAGhB0F,EAHgB,OAInBvH,KAJmB,kBAKfuH,EAAM7K,KAAI,SAACgL,GAAD,kBAAW,CAC1B3C,GAAI2C,EAAK7F,IACT3N,KAAI,iBAAEwT,QAAF,IAAEA,GAAF,UAAEA,EAAM2E,cAAR,aAAE,EAAcnY,YAAhB,QAAwB,MAC5BC,QAAO,iBAAEuT,QAAF,IAAEA,GAAF,UAAEA,EAAM2E,cAAR,aAAE,EAAclY,eAAhB,QAA2B,MAClCkR,WAAY5D,EAAOvN,KACnBiT,MAAOO,EAAKP,WAVQ,2CAAH,sDAcRsI,GAAO,uCAAG,WAAO1K,GAAP,uCAAArF,EAAA,sEACC4B,GAAIL,IAAI,UAAY8D,GADrB,cACf2K,EADe,OAEfhI,EAAOgI,EAAQ1P,KAFA,SAGEgP,GAAgBjK,EAAD,UAAK2C,EAAK2E,cAAV,aAAK,EAAaxK,KAHnC,cAGf6D,EAHe,gBAIAyH,GAAe,UAACzF,EAAK2E,cAAN,aAAC,EAAaxK,KAJ7B,cAIfmK,EAJe,QAKf2D,EAAqB,CACzB5K,GAAI2C,EAAK7F,IACTwK,OAAQ,CACNtH,GAAE,iBAAE2C,QAAF,IAAEA,GAAF,UAAEA,EAAM2E,cAAR,aAAE,EAAcxK,WAAhB,QAAuB,MACzB3N,KAAI,iBAAEwT,QAAF,IAAEA,GAAF,UAAEA,EAAM2E,cAAR,aAAE,EAAcnY,YAAhB,QAAwB,MAC5BC,QAAO,iBAAEuT,QAAF,IAAEA,GAAF,UAAEA,EAAM2E,cAAR,aAAE,EAAclY,eAAhB,QAA2B,OAEpCgT,MAAO,GACPzB,WACAkK,aAAc,IACd5M,UAAW,KAEJmE,MAAQO,EAAKP,MAAMzK,KAC1B,SAACzI,GAA0B,IAAD,EACc4P,GAAmB5P,GADjC,mBACjB4b,EADiB,KACJC,EADI,OAEc9L,GAAmB/P,GAFjC,mBAEjB8b,EAFiB,KAEJC,EAFI,KAGnBC,EAAsC,EAAtBC,EAAyB,EACxC,OAANlE,QAAM,IAANA,KAAQ9I,SAAQ,SAACL,GACf,IAAMN,EAAQe,GAAqBT,EAAO5O,EAAK4N,KAC3CU,IACF0N,GAAkB1N,EAAM,GACxB2N,GAAqB3N,EAAM,OAG/B,IAAMoE,EACJ,EAAIkJ,EAAc,EAAIE,EAAc,EAAIE,EACpCE,EACJ,EAAIL,EAAiB,EAAIE,EAAiB,EAAIE,EAChD,OAAO,2BACFjc,GADL,IAEE8Q,GAAI9Q,EAAK4N,IACT3N,KAAMD,EAAKC,KACXC,QAASF,EAAKE,QACdE,KAAMZ,gBAAaQ,EAAKI,MACxBC,OAAQjB,kBAAeY,EAAKK,QAC5BqS,eACAwJ,gBAINR,EAASC,aACPD,EAASxI,MAAM1E,QAAO,SAACC,EAAKzO,GAAN,uBAAeA,EAAK0S,oBAApB,QAAoC,EAAIjE,IAAK,GACnEiN,EAASxI,MAAM3K,OA/CI,kBAgDdmT,GAhDc,4CAAH,sDAmDPrC,GAAS,uCAAG,WAAO8C,EAAgBhD,GAAvB,eAAA1N,EAAA,6DACjB2Q,EAAU,CACdhE,OAAQe,GAFa,SAIjB9L,GAAIU,MAAJ,iBAAoBoO,GAAUC,GAJb,2CAAH,wDAOTC,GAAa,uCAAG,WAAOF,EAAgB5b,GAAvB,SAAAkL,EAAA,sEACrB4B,GAAIC,KAAJ,gBAAkB6O,EAAlB,UAAkC,CAAE5b,WADf,2CAAH,wDAIb+b,GAAkB,uCAAG,WAAOH,EAAgB5b,GAAvB,SAAAkL,EAAA,sEAC1B4B,GAAIS,OAAJ,gBAAoBqO,EAApB,kBAAoC5b,IADV,2CAAH,wDAIlBgc,GAAU,uCAAG,+BAAA9Q,EAAA,6DACxBgC,EADwB,EACxBA,SACA0L,EAFwB,EAExBA,SAFwB,SAOlB9L,GAAIC,KAAK,SAAU,CAAEE,OAAM,OAAEC,QAAF,IAAEA,IAAY,KAAM2K,OAAQe,IAPrC,2CAAH,sDAUVqD,GAAU,uCAAG,WAAO1L,GAAP,SAAArF,EAAA,sEAClB4B,GAAIS,OAAO,UAAYgD,GADL,2CAAH,sDCpIjB8D,GAAW,QAMF6H,GAJE,SACfhP,EACApG,GAFe,OAGZmO,aAASZ,IAAU,kBAAMvH,GAAaI,KAAWpG,IAGzCqV,GAAa/H,GAAoBC,IACjC+H,GAAYxH,GAAkBP,ICdrCA,GAAW,QAGFgI,GADC,SAAC9L,GAAD,OAAgB0E,aAAS,CAACZ,GAAU9D,IAAK,kBAAMzD,GAAYyD,OCDrE8D,GAAW,WAIFiI,GAFK,SAACxV,GAAD,OAClBmO,aAASZ,IAAU,kBAAMvH,OAAmBhG,IAGjCyV,GAAgBnI,GAA6BC,IAC7CmI,GAAe5H,GAA2BP,ICPjDA,GAAW,UAIFoI,GAFI,SAAClM,GAAD,OACjB0E,aAAS,CAACZ,GAAU9D,IAAK,kBAAMzD,GAAkByD,OCH7C8D,GAAW,SAMFqI,GAJG,SAACjK,GAAD,OAChBwC,aAASZ,IAAU,kBP4Bd,SAAP,mCO5B2BvH,CAAc2F,KAAS,CAC9CkK,UAAWlK,KC0DAmK,GAlDmB,SAACnb,GACjC,IAAMG,EAAWpB,cAD0B,EAGQE,YAAYW,GAAvDP,EAHmC,EAGnCA,cAAeC,EAHoB,EAGpBA,wBAHoB,EAKdhB,IAArBI,EALmC,EAKnCA,SAAUH,EALyB,EAKzBA,OACJyT,EAAa+B,GAAU,CACnCmH,UAAW3c,IADLwL,KANmC,SASjBiI,QATiB,IASjBA,IAAY,CAAE/T,KAAM,GAAIC,QAAS,IAAnDD,EATmC,EASnCA,KAAMC,EAT6B,EAS7BA,QAEd0E,qBAAU,WACkBzC,EAA1Bb,EAAmCI,IAAsBC,OAExD,CAACL,IAEJsD,qBAAU,WAER,OADAiI,OAAOuQ,iBAAiB,SAAUC,GAC3B,kBAAMxQ,OAAOyQ,oBAAoB,SAAUD,OAGpD,IAAMA,EAAeE,MAAS,WACxB1Q,OAAO2Q,YA3BuB,IA4BhCrb,EAAST,KAEJJ,GAAyBa,EAASR,OA7BX,KAkChC,OAAQ8b,SAAS/c,IACf,KAAKxB,IAASU,MACZ,OACE,cAAC,GAAD,CAAWK,KAAMA,EAAMC,QAASA,EAASqE,UAAWlD,IAExD,KAAKnC,IAASS,OACZ,OACE,cAAC,GAAD,CAAYM,KAAMA,EAAMC,QAASA,EAASqE,UAAWlD,IAEzD,QACE,OACE,cAAC,GAAD,CACEpB,KAAMA,EACNC,QAASA,EACTqE,UAAWlD,MC3CNqc,GAXmC,SAAC1b,GACjD,OACE,sBAAKM,UAAWC,IAAOob,UAAvB,UACE,cAAC,GAAD,IACA,qBAAKrb,UAAWC,IAAOqb,QAAvB,SACE,cAAC,IAAD,eAAW5b,U,0CCIJ6b,GAT+B,SAAC7b,GAC7C,OACE,sBAAKM,UAAWC,KAAOub,gBAAvB,UACG9b,EAAM/B,KACN+B,EAAM+b,aCgCEC,GApC2B,SAAChc,GAAW,IAAD,EACvBwC,mBAAc,MADS,mBAC5CgJ,EAD4C,KACpCyQ,EADoC,KAOnD,OAJArZ,qBAAU,WACRqZ,EAAUvQ,KAAKC,MAAMnN,aAAaC,QAAQ,oBACzC,IAGD,sBAAK6B,UAAWC,KAAOob,UAAvB,UACE,cAAC,GAAD,CAAY1d,KAAK,aACjB,sBAAKqC,UAAWC,KAAOyP,YAAvB,UACE,gCACE,cAAC,IAAD,CACE5M,SAAS,QACT3C,MAAO,CAAEyb,aAAc,UAEzB,gDAEF,8BACG1Q,EACC,sBAAK/K,MAAO,CAAEC,QAAS,QAASyb,UAAW,UAA3C,UACE,oCAAK3Q,QAAL,IAAKA,OAAL,EAAKA,EAAQvN,OACb,qBAAIwC,MAAO,CAAE2b,UAAW,QAAxB,yBACe,IAAIpN,KAAJ,OAASxD,QAAT,IAASA,OAAT,EAASA,EAAQuD,WAAWwB,wBAE3C,mBAAG9P,MAAO,CAAE2b,UAAW,QAAvB,gBAAkC5Q,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAQwE,iBAG5C,4D,wFCjCGqM,gBAAe,CAC5BC,QAAS,CACPle,KAAM,OACNme,WAAY,CACVC,QAAS,UACTC,MAAO,WAETjb,KAAM,CACJkb,QAAS,WAKFC,GAAYN,aAAe,CACtCC,QAAS,CACPle,KAAM,OACNse,QAAS,CACPE,KAAM,WAERC,UAAW,CACTD,KAAM,YAGV3X,WAAY,CACV6X,WAAY,gBAIHC,GAAcV,aAAe,CACxCC,QAAS,CACPI,QAAS,CACPE,KAAM,cAKCI,GAAeX,aAAe,CACzCC,QAAS,CACPI,QAAS,CACPE,KAAM,WAERC,UAAW,CACTD,KAAM,cCoIGK,GAhKmC,SAACjd,GACjD,IAuDMkd,EAvDYC,cAAW,SAACpY,GAAD,OAC3BqY,aAAa,CACXC,KAAM,CACJ,uBAAwB,CACtBC,OAAQvY,EAAMwY,QAAQ,GACtB1Y,MAAO,QAGX2Y,UAAW,CACT,sBAAuB,CACrB3Y,MAAO,MACP4Y,cAAe,OAGnB9B,UAAW,CACTQ,UAAW,OACXW,WAAY,aACZY,gBAAiB,UACjBC,OAAQ,qBAEV9W,OAAQ,CACNnG,QAAS,OACTkd,cAAe,SACfjd,WAAY,SACZkd,UAAW,oBACX1a,WAAY,MAEd3C,OAAQ,CACNsd,YAAa,MAEfC,cAAe,CACbrd,QAAS,OACTsd,eAAgB,gBAChBV,OAAQ,UAEVW,WAAY,CACVrd,WAAYmE,EAAMwY,QAAQ,GAC1BW,YAAanZ,EAAMwY,QAAQ,GAC3B1Y,MAAO,QAETlD,OAAQ,CACN+b,gBAAiB,UACjBJ,OAAQ,OACRzY,MAAO,QACP,UAAW,CACT6Y,gBAAiB,YAGrBS,gBAAiB,CACfzd,QAAS,OACTsd,eAAgB,cAKNI,GAxD2C,EA0DpB5b,mBAAS,IA1DW,mBA0DpD4M,EA1DoD,KA0DxCiP,EA1DwC,OA2DlB7b,mBAAS,IA3DS,mBA2DpDwN,EA3DoD,KA2DvCsO,EA3DuC,OA4DtB9b,mBAAsB,IAAIwM,MA5DJ,mBA4DpDD,EA5DoD,KA4DzCwP,EA5DyC,OA6D1B/b,mBAAsB,IAAIwM,MA7DA,mBA6DpDG,EA7DoD,KA6D3CqP,EA7D2C,KA8DrDpe,EAAUC,cAkBVoe,EAAqB,uCAAG,sBAAAhV,EAAA,sDAQ5ByK,GAPmC,CACjCjW,KAAMmR,EACNY,YAAaA,EACbjB,UAAWA,EACXI,QAASA,IAGUuP,MAAK,SAACjU,GACzB,IAAMkU,EAAwBlU,EAASV,KACvC3J,EAAQY,KAAK,YAAc2d,EAAc/S,QAVf,2CAAH,qDAc3B,OACE,sBAAKtL,UAAW4c,EAAQG,KAAxB,UACE,cAAC,GAAD,CAAYpf,KAAM,kBAClB,sBAAKqC,UAAW4c,EAAQvB,UAAxB,UACE,qBAAKrb,UAAW4c,EAAQ1c,OAAxB,SACE,iDAEF,sBAAKF,UAAW4c,EAAQrW,OAAxB,UACE,cAAC+X,GAAA,EAAD,CACEtZ,MAAM,cACNhF,UAAW4c,EAAQM,UACnBxX,SAzCqB,SAAC6Y,GAC9BR,EAAiBQ,EAAE3Y,OAAOH,QAyClB8B,QAAQ,aAEV,cAAC+W,GAAA,EAAD,CACEtZ,MAAM,qBACNuC,QAAQ,WACRiX,WAAS,EACT9Y,SA5CsB,SAAC6Y,GAC/BP,EAAkBO,EAAE3Y,OAAOH,aA8CvB,gCACE,qBAAKzF,UAAW4c,EAAQa,cAAxB,SACE,eAAC,KAAD,CAAyBgB,MAAOC,KAAhC,UACE,cAACC,GAAA,EAAD,CACEC,gBAAc,EACdrX,QAAQ,SACRsX,OAAO,aACP7B,OAAO,SACPxO,GAAG,sBACHxJ,MAAM,aACN8Z,aAAa,WACbrZ,MAAOgJ,EACP/I,SAvDgB,SAACqK,GAC7BkO,EAAgBlO,MAwDN,cAAC4O,GAAA,EAAD,CACEC,gBAAc,EACdrX,QAAQ,SACRsX,OAAO,aACP7B,OAAO,SACPxO,GAAG,sBACHxJ,MAAM,WACN8Z,aAAa,WACbrZ,MAAOoJ,EACPnJ,SA9Dc,SAACqK,GAC3BmO,EAAcnO,WAiER,cAACgP,GAAA,EAAD,CAAeta,MAAO4X,GAAtB,SACE,qBAAKrc,UAAW4c,EAAQiB,gBAAxB,SACE,cAACmB,GAAA,EAAD,CACEhf,UAAW4c,EAAQvb,OACnBd,QAAS4d,EACT5W,QAAQ,OACR0X,UAAWnQ,IAAeL,IAAcI,EAJ1C,gC,sECpJRqQ,GAAaC,IAAMC,YAAW,SAClC1f,EACA2f,GAEA,OAAO,cAACC,GAAA,EAAD,aAAOC,UAAU,KAAKF,IAAKA,GAAS3f,OAwC9B8f,GA3B+C,SAAC9f,GAC7D,OACE,eAAC+f,GAAA,EAAD,CACE7X,KAAMlI,EAAMoH,OACZgB,QAAS,kBAAMpI,EAAMoI,WACrB4X,kBAAgB,qBAChBC,mBAAiB,2BACjBC,oBAAqBV,GALvB,UAOE,cAACW,GAAA,EAAD,CAAarR,GAAG,qBAAhB,SAAsC9O,EAAMogB,QAC5C,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAmBxR,GAAG,2BAAtB,SACG9O,EAAM4b,YAGX,eAAC2E,GAAA,EAAD,WACE,cAACjB,GAAA,EAAD,CAAQze,QAASb,EAAMwgB,aAAcpf,MAAM,UAA3C,oBAGA,cAACke,GAAA,EAAD,CAAQze,QAASb,EAAMygB,cAAerf,MAAM,UAAUsf,WAAS,EAA/D,4BCrBOC,GAhByB,SAAC,GAIlC,IAHLnf,EAGI,EAHJA,KAGI,IAFJJ,aAEI,MAFI,UAEJ,EADJP,EACI,EADJA,QAEA,OACE,cAACwe,GAAA,EAAD,CAAeta,MAAOiY,GAAtB,SACE,qBAAKvc,MAAO,CAAE6c,OAAQ,SAAtB,SACE,cAACgC,GAAA,EAAD,CAAQzX,QAAQ,YAAYzG,MAAOA,EAAOP,QAASA,EAAnD,SACE,+BAAOW,WC6BFof,GApCqC,SAAC,GAM9C,IALLpf,EAKI,EALJA,KACAqf,EAII,EAJJA,aAII,IAHJC,sBAGI,MAHa,+BAGb,EAFJC,EAEI,EAFJA,UACA3Y,EACI,EADJA,QACI,EACsC5F,oBAAS,GAD/C,mBACGwe,EADH,KACkBC,EADlB,KAGEC,EAAsB,SAACrC,GAC3BoC,GAAiB,GACjB7Y,GAAWA,EAAQyW,IAMrB,OACE,qCACE,cAAC,GAAD,CACEuB,MAAOS,EACPjF,QAASkF,EACT1Z,OAAQ4Z,EACR5Y,QAAS8Y,EACTT,cAXgB,SAAC5B,GACrBkC,EAAUlC,GACVoC,GAAiB,IAUbT,aAAcU,IAEhB,cAAC,GAAD,CACE1f,KAAMA,EACNJ,MAAM,YACNP,QAAS,kBAAMogB,GAAiB,UC5BzBE,GAJmC,SAACnhB,GACjD,OAAO,cAAC,GAAD,2BAAmBA,GAAnB,IAA0BwB,KAAM,aCP5B4f,GAAcjiB,YAAY,CACrClB,KAAM,SACNmB,aAJgC,CAAE6V,mBAAoB,IAKtD1V,SAAU,CACR8hB,sBAAuB,SAAC5hB,GACtBA,EAAMwV,mBAAqB,IAE7B9E,cAAe,SAAC1Q,EAAO6H,GACrB,IAAMqI,EAAYrI,EAAOC,QACzB9H,EAAMwV,mBAAmBjU,KAAK2O,O,GAKoByR,GAAYthB,QAArDuhB,G,GAAAA,sBAAuBlR,G,GAAAA,cAEvBiR,MAAf,QCoBeE,GA7Bc,SAAC,GAGI,IAFhCzS,EAE+B,EAF/BA,QACA0S,EAC+B,EAD/BA,OAEMphB,EAAWpB,cAKjB,OACE,eAACyiB,GAAA,EAAD,CACE9gB,QAAQ,OACRC,WAAW,SACXqd,eAAe,gBACfnZ,MAAM,QAJR,UAME,cAAC2c,GAAA,EAAD,UACE,4BAAI3S,EAAQ5Q,SAEbsjB,GACC,cAAC,GAAD,CACEV,aAAa,gDACbE,UAjBwB,WAC9B5gB,EAASgQ,GAActB,EAAQjD,a,4FCgBpB6V,GAtBuC,SAAC,GAGhD,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,YAEMvhB,EAAUC,cAChB,OACE,qBAAKC,UAAWC,KAAOqhB,iBAAvB,SACE,eAACC,GAAA,EAAD,CAAaC,aAAW,aAAaxhB,UAAWC,KAAOwhB,YAAvD,UACE,eAAClgB,GAAA,EAAD,CACEhB,QAAS,kBAAMT,EAAQ4hB,UACvB5gB,MAAM,cACNd,UAAWC,KAAO0hB,iBAHpB,UAKE,cAAC,KAAD,CAAsB3hB,UAAWC,KAAO2hB,YACvCR,KAEH,cAACS,GAAA,EAAD,UAAaR,UCwNNS,GAjNS,SAAC,GAAiD,IAA/ClP,EAA8C,EAA9CA,MACnB9S,EAAUC,cACR4U,EAAuBjW,GAAe,SAACS,GAAD,OAAWA,EAAM4iB,iBAAvDpN,mBAF+D,EAGhCzS,mBAAS,IAHuB,mBAGhE4M,EAHgE,KAGpDiP,EAHoD,OAI9B7b,mBAAS,IAJqB,mBAIhEwN,EAJgE,KAInDsO,EAJmD,OAKlC9b,mBAAsB,IAAIwM,MALQ,mBAKhED,EALgE,KAKrDwP,EALqD,OAMtC/b,mBAAsB,IAAIwM,MANY,mBAMhEG,EANgE,KAMvDqP,EANuD,OAO3Chc,oBAAS,GAPkC,mBAOhE+e,EAPgE,KAOxDe,EAPwD,OAQpCvN,GAAU7B,EAAMrH,OAAOiD,IAAlDyT,EAR+D,EAQ/DA,UAAWxY,EARoD,EAQpDA,KAAMY,EAR8C,EAQ9CA,MACTyJ,EAAiBzL,IAC/B,SAAC6Z,GAAD,OAA8BxN,GAAiB,WAAjB,eAAqBwN,MACnD,CACEtZ,UAAW,kBAAMmY,MACjBtY,WAAY,WAJR0Z,OAQFvF,EAAUkB,KAgDhB,OAVAxb,qBAAU,WAAO,IAAD,EACTmH,IAGLsU,EAAiBtU,EAAK9L,MACtBqgB,EAAiB,UAACvU,EAAKiG,mBAAN,QAAqB,IACtCuO,EAAgB,IAAIvP,KAAKA,KAAKrD,MAAM5B,EAAKgF,aACzCyP,EAAc,IAAIxP,KAAKA,KAAKrD,MAAM5B,EAAKoF,cACtC,CAACpF,IAEAwY,EAAkB,cAACG,GAAA,EAAD,IAClB/X,EAAc,8BAAOA,EAAgBzD,UAGvC,sBAAK5G,UAAW4c,EAAQG,KAAxB,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CACEqE,SAAS,SACTiB,SAAS,WACThB,YAAavS,MAGjB,sBAAK9O,UAAW4c,EAAQvB,UAAxB,UACE,qBAAKrb,UAAW4c,EAAQ1c,OAAxB,SACE,eAACghB,GAAA,EAAD,CACE9gB,QAAQ,OACRsd,eAAe,gBACfrd,WAAW,SAHb,UAKE,+CACA,cAAC6gB,GAAA,EAAD,CAAKtD,YAAY,KAAjB,SACE,cAAC,GAAD,CACE1c,KAAK,OACLJ,MAAM,UACNP,QAtEK,WACjByhB,GAAWf,aA0EP,qBAAKjhB,UAAW4c,EAAQrW,OAAxB,SACG0a,EACC,gCACE,cAAC3C,GAAA,EAAD,CACEtZ,MAAM,cACNhF,UAAW4c,EAAQM,UACnBxX,SA7EiB,SAAC6Y,GAC9BR,EAAiBQ,EAAE3Y,OAAOH,QA6Ed8B,QAAQ,WACR9B,MAAOqJ,IAET,cAACwP,GAAA,EAAD,CACEtZ,MAAM,qBACNuC,QAAQ,WACRiX,WAAS,EACT9Y,SAjFkB,SAAC6Y,GAC/BP,EAAkBO,EAAE3Y,OAAOH,QAiFfA,MAAOiK,OAIX,eAACwR,GAAA,EAAD,CAAK9gB,QAAQ,OAAOkd,cAAc,SAASjd,WAAW,SAAtD,UACE,6BAAKyO,IACL,cAACoS,GAAA,EAAD,UACE,4BAAIxR,WAKZ,eAACwR,GAAA,EAAD,CACE9gB,QAAQ,OACRsd,eAAe,QACfH,UAAU,oBACV+E,aAAa,gBACbtF,OAAO,OALT,UAOE,eAACkE,GAAA,EAAD,CAAK5gB,WAAW,KAAKwb,UAAU,KAAKvX,MAAM,QAA1C,UACE,2CADF,OAEGkF,QAFH,IAEGA,OAFH,EAEGA,EAAM6E,SAASnI,KAAI,SAACoI,GAAD,OAClB,cAAC,GAAD,CACEA,QAASA,EACT0S,OAAQA,GACH1S,EAAQjD,QAGhB2V,GAAU,cAAC,GAAD,CAAS/f,KAAK,MAAMX,QA1GZ,WAC3BT,EAAQY,KAAK,0BA2GP,eAACwgB,GAAA,EAAD,CAAKpF,UAAU,KAAf,UACE,wCACA,cAAC,KAAD,CAAyB2C,MAAOC,KAAhC,SACGuC,EACC,eAACC,GAAA,EAAD,WACE,cAAC,KAAD,CACEtC,gBAAc,EACdrX,QAAQ,SACRsX,OAAO,aACP7B,OAAO,SACPxO,GAAG,qBACHxJ,MAAM,aACN8Z,aAAa,WACbrZ,MAAOgJ,EACP/I,SA1GY,SAACqK,GAC7BkO,EAAgBlO,MA2GF,cAAC,KAAD,CACE6O,gBAAc,EACdrX,QAAQ,SACRsX,OAAO,aACP7B,OAAO,SACPxO,GAAG,qBACHxJ,MAAM,WACN8Z,aAAa,WACbrZ,MAAOoJ,EACPnJ,SAjHU,SAACqK,GAC3BmO,EAAcnO,SAoHF,eAACmR,GAAA,EAAD,CAAK9gB,QAAQ,OAAb,UACE,eAAC8gB,GAAA,EAAD,CACEtF,aAAa,OACbxb,QAAQ,OACRkd,cAAc,SAHhB,UAKE,4CACA,6CAEF,eAAC4D,GAAA,EAAD,CAAK9gB,QAAQ,OAAOkd,cAAc,SAAlC,UACE,4BAAI7O,EAAYoQ,aAAOpQ,EAAW,cAAgB,KAClD,4BAAII,EAAUgQ,aAAOhQ,EAAS,cAAgB,mBAO1D,cAACqS,GAAA,EAAD,CACE9gB,QAAQ,OACRsd,eAAe,SACfH,UAAU,oBAHZ,SAKG0D,EACC,cAAClC,GAAA,EAAD,CAAeta,MAAO4X,GAAtB,SACE,cAAC2C,GAAA,EAAD,CACEhf,UAAW4c,EAAQvb,OACnBd,QAhKgB,WAC5B,IAAMgiB,EAAoB,2BACrB9Y,GADqB,IAExB9L,KAAMmR,EACNY,YAAaA,EACbjB,UAAWA,EAAW+T,cACtB3T,QAASA,EAAS2T,gBAGpB1O,EAAa,CAACyO,EAAc5N,KAwJhBpN,QAAQ,OACR0X,UAAWnQ,IAAeL,IAAcI,EAJ1C,oBASA,cASRiP,GAAYjB,cAAW,SAACpY,GAAD,OAC3BqY,aAAa,CACXC,KAAM,CACJ,uBAAwB,CACtBC,OAAQvY,EAAMwY,QAAQ,GACtB1Y,MAAO,QAGX2Y,UAAW,CACT,sBAAuB,CACrB3Y,MAAO,OACP4Y,cAAe,OAGnB9B,UAAW,CACTQ,UAAW,OACXW,WAAY,aACZY,gBAAiB,UACjBC,OAAQ,qBAEV9W,OAAQ,CACNnG,QAAS,OACTkd,cAAe,SACfjd,WAAY,SACZkd,UAAW,oBACX1a,WAAY,MAEd3C,OAAQ,CACNsd,YAAa,MAEfG,WAAY,CACVrd,WAAYmE,EAAMwY,QAAQ,GAC1BW,YAAanZ,EAAMwY,QAAQ,GAC3B1Y,MAAO,QAETlD,OAAQ,CACN+b,gBAAiB,UACjBJ,OAAQ,OACRzY,MAAO,QACP,UAAW,CACT6Y,gBAAiB,iB,qBC/QnBte,GAAgC,CACpCa,arDEK,WACL,IAAM8iB,EAAmBvkB,aAAaC,QAAQ,gBAC9C,GAAKskB,EAGL,OAAOrX,KAAKC,MAAMoX,GqDPJC,IAGHC,GAAkB9jB,YAAY,CACzClB,KAAM,aACNmB,gBACAG,SAAU,CACR2jB,gBAAiB,SAACzjB,EAAO6H,GACvB,IAAMkE,EAASlE,EAAOC,SrDVrB,SAAyBiE,GAC9BhN,aAAa2kB,QAAQ,eAAgBzX,KAAK0X,UAAU5X,IqDUhDwX,CAA6BxX,GAC7B/L,EAAMQ,aAAeuL,MAKZ0X,GAAoBD,GAAgBnjB,QAApCojB,gBAEAD,MAAf,QCkDeI,GAnE6C,SAAC,GAGtD,IAFL7X,EAEI,EAFJA,OACA8X,EACI,EADJA,SAEMpG,EAAUkB,KACVhe,EAAUC,cACVF,EAAWrB,IACDuV,EAAiB1L,GAC/B4a,GACA,CACE1a,eAAgB,WAChBC,aAAc,0BACdC,WAAY,YALR0Z,OAwBFe,EAAaF,EAAQ,UACpBpG,EAAQuG,IADY,YACLvG,EAAQwG,WAC1BxG,EAAQuG,IAEZ,OACE,sBACEnjB,UAAWkjB,EACX3iB,QAZsB,SAACoF,GACzB9F,EAAS+iB,GAAgB1X,IACpB,OAALvF,QAAK,IAALA,KAAO0d,mBAWLC,cAAY,sBAHd,UAKE,qBAAKtjB,UAAW4c,EAAQjf,KAAxB,SAA+BuN,EAAOvN,OACtC,gCACE,eAACujB,GAAA,EAAD,CAAK9gB,QAAQ,OAAOsd,eAAe,gBAAgB6F,QAAQ,QAA3D,UACE,qBAAKvjB,UAAW4c,EAAQ7M,KAAxB,yBACA,8BAAM8O,aAAO,IAAInQ,KAAKxD,EAAOuD,WAAY,mBAE3C,eAACyS,GAAA,EAAD,CAAK9gB,QAAQ,OAAOsd,eAAe,gBAAgB6F,QAAQ,QAA3D,UACE,qBAAKvjB,UAAW4c,EAAQ7M,KAAxB,uBACA,8BAAM8O,aAAO,IAAInQ,KAAKxD,EAAO2D,SAAU,mBAEzC,eAACqS,GAAA,EAAD,CAAK9gB,QAAQ,OAAOsd,eAAe,SAAS6F,QAAQ,QAApD,UACE,cAAC,GAAD,CACEhD,aAAc,+CACdE,UAtCuB,SAAC9a,GAChCoO,EAAa7I,EAAOI,KACpB3F,EAAM0d,qBAsCA,cAAC,GAAD,CACEniB,KAAK,OACLJ,MAAM,UACNP,QAtCoB,SAACoF,GAC7B7F,EAAQY,KAAK,WAAawK,EAAOI,KAC5B,OAAL3F,QAAK,IAALA,KAAO0d,+BA8CLvF,GAAYjB,cAAW,SAACpY,GAAD,OAC3BqY,aAAa,CACXqG,IAAK,CACH9F,OAAQ,oBACR9Y,MAAO,MACPyY,OAAQ,KACRI,gBAAiB,UACjB,UAAW,CACToG,YAAa,UACbhjB,OAAQ,UACRijB,aAAc,QACdC,aAAc,YAGlBN,UAAW,CACTI,YAAa,UACbC,aAAc,QACdC,aAAc,UACdtG,gBAAiB,UACjB,UAAW,CACToG,YAAa,UACbE,aAAc,YAGlB/lB,KAAM,CACJiF,aAAc,oBACd2gB,QAAS,OACTI,aAAc,OAEhBC,WAAY,CACVxG,gBAAiB,WAEnByG,aAAc,CACZzG,gBAAiB,WAEnBrN,KAAM,CACJhN,WAAY,a,UClEH+gB,GA1C+B,SAACpkB,GAC7C,IAAMI,EAAUC,cACRJ,EAAiBjB,GAAe,SAACS,GAAD,OAAWA,EAAMS,cAAjDD,aAF+C,EAGI0U,KAA7CzU,EAHyC,EAG/C6J,KAAkBY,EAH6B,EAG7BA,MAAO4X,EAHsB,EAGtBA,UAAW8B,EAHW,EAGXA,WACpC7b,EAAcH,KAAdG,UAEF8b,EAAY,OAAGpkB,QAAH,IAAGA,OAAH,EAAGA,EAAYuG,KAAI,SAAC8d,GAAD,OACnC,cAAC,GAAD,CAEE/Y,OAAQ+Y,EACRjB,SAAUiB,EAAkB3Y,OAAlB,OAA0B3L,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAc2L,MAF7C2Y,EAAkB3Y,QAY3B,OAFIjB,GAAOnC,EAAU,2BAEjB+Z,EAAkB,cAACiC,GAAA,EAAD,IAElBH,EAAmB,cAAC3B,GAAA,EAAD,IAGrB,gCACE,cAAC,GAAD,CAAYzkB,KAAK,YACjB,gCACE,sBAAKqC,UAAWC,KAAOkkB,gBAAvB,UACE,gDACA,cAAC,GAAD,CACEjjB,KAAK,MACLJ,MAAM,UACNP,QAnBmB,SAACoF,GAC5B7F,EAAQY,KAAK,uBAqBT,qBAAKV,UAAWC,KAAOmkB,cAAvB,SAAuCJ,W,oBC/ChCnH,iBAAW,SAACpY,GAAD,MAAY,CACpC4f,SAAU,CACRvjB,MAAO,mBAGTwjB,WAAY,GAEZC,eAAgB,CACdC,YAAa,MACbhB,YAAa,WAGfiB,cAAe,CACb,+BAAgC,CAC9BpH,OAAQ,uBCqBCqH,GA1ByC,SAAChlB,GACvD,IAAMkd,EAAUkB,KAEhB,OACE,cAACQ,GAAA,EAAD,aACE/W,QAAS,WACTod,UAAQ,EACRC,WAAS,EACTC,gBAAiB,CACfjI,QAAS,CACPG,KAAMH,EAAQyH,SACdS,QAASlI,EAAQyH,WAGrBU,WAAY,CACVnI,QAAS,CACPG,KAAMH,EAAQ6H,cACdK,QAASlI,EAAQ0H,WACjBC,eAAgB3H,EAAQ2H,kBAGxB7kB,KC9BKmd,iBAAW,SAACpY,GAAD,MAAY,CACpC0X,MAAO,CACLL,UAAWrX,EAAMwY,QAAQ,GACzB7c,QAAS,OACTkd,cAAe,SACfjd,WAAY,UAGd2kB,KAAM,CACJzgB,MAAO,OACPuX,UAAWrX,EAAMwY,QAAQ,IAG3BgI,OAAQ,CACNjI,OAAQvY,EAAMwY,QAAQ,EAAG,EAAG,IAG9BiI,WAAY,CACVpkB,MAAO,uB,qBCPIqkB,GAVsB,WACnC,OACE,qBAAKnlB,UAAWC,KAAOC,OAAvB,SACE,sBAAKF,UAAWC,KAAOQ,KAAvB,UACE,qCADF,SACsB,8CCiBb,SAAS2kB,GAAO1lB,GAC7B,IAAMkd,EAAUkB,KACVuH,EAAc7mB,IACZ0J,EAAcH,KAAdG,UAHwC,EAItBhG,mBAAS,IAJa,mBAIzCrE,EAJyC,KAIlCynB,EAJkC,OAKhBpjB,mBAAS,IALO,mBAKzCqjB,EALyC,KAK/BC,EAL+B,KAO1C1lB,EAAUC,cAMV0lB,EAAgC,SAACtb,GAA6B,IAAD,IAC3DlM,EAAM,UAAGkM,EAASV,YAAZ,aAAG,MACTrL,EAAQ,UAAG+L,EAASV,YAAZ,aAAG,OAEjBvL,aAAa2kB,QAAQ,KAAM5kB,GAC3BC,aAAa2kB,QAAQ,OAAQzkB,IAGzBsnB,EAAiB,uCAAG,sCAAAvc,EAAA,+EAEC4B,GAAIC,KAAK,QAAS,CAAEnN,QAAO0nB,aAF5B,cAEhBpb,EAFgB,OAGtBsb,EAA8Btb,GAHR,SAIA8J,KAJA,OAIhB5F,EAJgB,OAKhBsX,EAAmBtX,EAAQ,GACjCgX,EAAYzC,GAAgB+C,IAjB9B7lB,EAAQY,KADA,SAoBFhB,EAAMkmB,SAASlmB,EAAMkmB,UARH,kDAUtB1d,EAAS,gDACP,KAAOiC,gBADA,iBACP,EAAiBV,YADV,aACP,EAAuB7C,eADhB,QAC2B,iCAXd,0DAAH,qDAgBvB,OACE,gCACE,cAAC,GAAD,IACA,eAACzB,GAAA,EAAD,CAAW7D,UAAU,OAAOukB,SAAS,KAArC,UACE,cAACC,GAAA,EAAD,IACA,sBAAK9lB,UAAW4c,EAAQT,MAAxB,UACE,cAAC0F,GAAA,EAAD,CAAYvgB,UAAU,KAAKiG,QAAQ,KAAnC,qBAGA,uBAAMvH,UAAW4c,EAAQoI,KAAMe,YAAU,EAAzC,UACE,cAAC,GAAD,CACE/I,OAAO,SACPhY,MAAM,gBACNrH,KAAK,QACLqoB,aAAa,QACbvgB,MAAO5H,EACP6H,SAAU,SAAC6Y,GAAD,OAAO+G,EAAS/G,EAAE3Y,OAAOH,QACnC2a,WAAS,EACTkD,cAAY,aAEd,cAAC,GAAD,CACEtG,OAAO,SACPrf,KAAK,WACLqH,MAAM,WACNlH,KAAK,WACLkoB,aAAa,mBACbvgB,MAAO8f,EACP7f,SAAU,SAAC6Y,GAAD,OAAOiH,EAAYjH,EAAE3Y,OAAOH,QACtC6d,cAAY,gBAEd,cAACtE,GAAA,EAAD,CACElhB,KAAK,SACL8mB,WAAS,EACTrd,QAAQ,YACRzG,MAAM,UACNd,UAAW4c,EAAQqI,OACnB1kB,QAASmlB,EACTpC,cAAY,YAPd,qBAWA,eAAC2C,GAAA,EAAD,CAAM5K,WAAS,EAAf,UACE,cAAC4K,GAAA,EAAD,CAAMtT,MAAI,EAACuT,IAAE,EAAb,SACE,cAAC3kB,GAAA,EAAD,CAAMiJ,KAAK,iBAAiBjD,QAAQ,QAAQzG,MAAM,UAAlD,gCAIF,cAACmlB,GAAA,EAAD,CAAMtT,MAAI,EAAV,SACE,cAACpR,GAAA,EAAD,CAAMiJ,KAAK,gBAAgBjD,QAAQ,QAAQzG,MAAM,UAAjD,SACG,oD,aC5GJ+b,iBAAW,SAACpY,GAAD,MAAY,CACpC0X,MAAO,CACLL,UAAWrX,EAAMwY,QAAQ,GACzB7c,QAAS,OACTkd,cAAe,SACfjd,WAAY,UAEd2kB,KAAM,CACJzgB,MAAO,OACPuX,UAAWrX,EAAMwY,QAAQ,IAE3BgI,OAAQ,CACNjI,OAAQvY,EAAMwY,QAAQ,EAAG,EAAG,IAE9BkJ,eAAgB,CACd/I,gBAAiB,sBAGnB8H,WAAY,CACVpkB,MAAO,uBCKJ,SAASslB,KACd,IAAMxJ,EAAUkB,KACVhe,EAAUC,cAFa,EAGMgI,KAA3BG,EAHqB,EAGrBA,UAAWD,EAHU,EAGVA,YAHU,EAKC/F,oBAAS,GALV,mBAKtBmkB,EALsB,KAKbC,EALa,OAMSpkB,oBAAS,GANlB,mBAMtBqkB,EANsB,KAMTC,EANS,OAOetkB,oBAAS,GAPxB,mBAOtBukB,EAPsB,KAONC,EAPM,OAQWxkB,oBAAS,GARpB,mBAQtBykB,EARsB,KAQRC,EARQ,OASa1kB,oBAAS,GATtB,mBAStB2kB,EATsB,KASPC,EATO,OAU2B5kB,oBAAS,GAVpC,mBAUtB6kB,EAVsB,KAUAC,EAVA,OAWL9kB,mBAAoB,CAC1CvE,KAAM,GACNC,QAAS,GACTC,MAAO,GACP0nB,SAAU,GACV0B,gBAAiB,KAhBU,mBAWtBjC,EAXsB,KAWhBkC,EAXgB,KAqDvBC,EAAe,WACnB,IAAMC,EAnCa,WACnB,IAAMC,EAAOrC,EAAI,KAAS/e,QAAU,GAAK+e,EAAI,KAAS/e,QAAU,GAEhE,OADAugB,GAAgBa,GACTA,EAgCaC,GACdC,EA9BgB,WACtB,IAAMF,EAAOrC,EAAI,QAAY/e,QAAU,GAAK+e,EAAI,QAAY/e,QAAU,GAEtE,OADAygB,GAAmBW,GACZA,EA2BgBG,GACjBC,EAzBc,WACpB,IAAMJ,EAAOrC,EAAI,MAAUtgB,QAAQ,MAAQ,EAE3C,OADAkiB,GAAiBS,GACVA,EAsBcK,GACfC,EApBe,WAErB,IAAMN,EACHrC,EAAI,SAAa/e,QAAU,GAAK+e,EAAI,SAAa/e,QAAU,IAC5D,KAAK2hB,KAAK5C,EAAI,WACd,QAAQ4C,KAAK5C,EAAI,UAEnB,OADA8B,GAAkBO,GACXA,EAaeQ,GAChBC,EAXsB,WAC5B,IAAMT,EAAOrC,EAAI,kBAAwBA,EAAI,SAE7C,OADAgC,GAAyBK,GAClBA,EAQsBU,GAE7B,OACEX,GACAG,GACAE,GACAE,GACAG,GAIEE,EAAmB,SAACzJ,GACxB2I,GAAQ,SAACe,GAAD,mBAAC,eAAoBA,GAArB,mBAAiC1J,EAAE3Y,OAAOjI,KAAO4gB,EAAE3Y,OAAOH,YAG9DyiB,EAAY,uCAAG,WAAO3J,GAAP,mBAAApV,EAAA,yDACnBoV,EAAE4J,iBAEGhB,IAHc,wDAKnBb,GAAW,GALQ,kBAOXvb,GAAIC,KAAK,WAAYga,GAPV,OAQjB/c,EAAY,+CACZqe,GAAW,GACXxmB,EAAQY,KAAK,UAVI,kDAYjBwH,EAAS,gDAAC,KAAOiC,gBAAR,iBAAC,EAAiBV,YAAlB,aAAC,EAAuB7C,eAAxB,QAAmC,sBAC5C0f,GAAW,GAbM,0DAAH,sDAiBlBhkB,qBAAU,YAENikB,GACAE,GACAE,GACAE,GACAE,IAEAI,MACD,CAACnC,IAEJ,IAAMoD,EACJpD,EAAKrnB,MACLqnB,EAAKpnB,SACLonB,EAAKnnB,OACLmnB,EAAKO,UACLP,EAAKiC,gBAEP,OACE,gCACE,cAAC,GAAD,IACA,eAAC9hB,GAAA,EAAD,CAAW7D,UAAU,OAAOukB,SAAS,KAArC,UACE,cAACC,GAAA,EAAD,IACA,sBAAK9lB,UAAW4c,EAAQT,MAAxB,UACE,cAAC0F,GAAA,EAAD,CAAYvgB,UAAU,KAAKiG,QAAQ,KAAnC,qBAGA,uBAAMvH,UAAW4c,EAAQoI,KAAMqD,SAAUH,EAAcnC,YAAU,EAAjE,UACE,eAACE,GAAA,EAAD,CAAM5K,WAAS,EAAC4B,QAAS,EAAzB,UACE,cAACgJ,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAIoC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE7iB,MAAOuf,EAAKrnB,KACZ+H,SAAUsiB,EACV5H,WAAS,EACT4F,aAAa,QACbroB,KAAK,OACLqH,MAAM,OACNse,cAAY,UACZjZ,MAAOkc,EACPgC,WAAYhC,GAAe,qCAG/B,cAACN,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAIoC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE7iB,MAAOuf,EAAKpnB,QACZ8H,SAAUsiB,EACVhjB,MAAM,UACNrH,KAAK,UACLqoB,aAAa,QACb1C,cAAY,UACZjZ,MAAOoc,EACP8B,WACE9B,GAAkB,wCAIxB,cAACR,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAf,SACE,cAAC,GAAD,CACEzgB,MAAOuf,EAAKnnB,MACZ6H,SAAUsiB,EACVhjB,MAAM,gBACNrH,KAAK,QACLG,KAAK,QACLkoB,aAAa,QACb1C,cAAY,UACZjZ,MAAOsc,EACP4B,WAAY5B,GAAgB,+BAGhC,cAACV,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAf,SACE,cAAC,GAAD,CACEzgB,MAAOuf,EAAKO,SACZ7f,SAAUsiB,EACVrqB,KAAK,WACLqH,MAAM,WACNlH,KAAK,WACLwlB,cAAY,aACZjZ,MAAOwc,EACP0B,WACE1B,GAAiB,sCAIvB,cAACZ,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAf,SACE,cAAC,GAAD,CACEzgB,MAAOuf,EAAKiC,gBACZvhB,SAAUsiB,EACVrqB,KAAK,kBACLqH,MAAM,mBACNlH,KAAK,WACLwlB,cAAY,cACZjZ,MAAO0c,EACPwB,WACExB,GACA,qDAKPV,EACC,cAACnC,GAAA,EAAD,CAAkBpjB,MAAM,UAAUd,UAAW4c,EAAQqI,SAErD,qCACE,cAACjG,GAAA,EAAD,CACE4F,WAAS,EACTrd,QAAQ,YACRzG,MAAM,UACNd,UAAW4c,EAAQqI,OACnBhG,UAAWmJ,EACXxL,QAAS,CACPqC,SAAUrC,EAAQuJ,gBAEpB7C,cAAY,WACZxlB,KAAK,SAVP,qBAcA,cAACmoB,GAAA,EAAD,CAAM5K,WAAS,EAACmN,QAAQ,WAAxB,SACE,cAACvC,GAAA,EAAD,CAAMtT,MAAI,EAAV,SACE,cAACpR,GAAA,EAAD,CAAMiJ,KAAK,IAAIjD,QAAQ,QAAQzG,MAAM,UAArC,iE,sDCvNL2nB,GAV6B,SAAC,GAA8B,IAA5BvnB,EAA2B,EAA3BA,KAASwnB,EAAkB,yBACxE,OACE,cAAC3J,GAAA,EAAD,CAAeta,MAAOgY,GAAtB,SACE,eAACuC,GAAA,EAAD,yBAAQzX,QAAQ,YAAYzG,MAAM,WAAc4nB,GAAhD,cACE,cAAC,KAAD,IADF,IACc,+BAAOxnB,W,+BCWrBynB,GAAgD,SAAC,GAQhD,IAPLhrB,EAOI,EAPJA,KAOI,IANJirB,eAMI,MANM,GAMN,EALJ3G,EAKI,EALJA,UACA5X,EAII,EAJJA,MACAZ,EAGI,EAHJA,KAEGif,GACC,EAFJ3E,WAEI,8EACgB7hB,mBAASvE,GAAtBkrB,EADH,oBAGJ,OAAI5G,EAAkB,cAACG,GAAA,EAAD,IAClB/X,GAAQmG,QAAQsY,QAAgB,8BAAMze,EAAMzD,gBACnCgI,IAATnF,EAA2B,wCAE7B,qBAAKzJ,UAAWC,KAAOob,UAAWmG,aAAY,WAAaqH,EAA3D,SACE,cAAC,KAAD,aACEE,KAAMtf,EACNmf,QAASA,EACTI,SAAU,EACVC,YAAU,EACVC,yBAAyB,GACrBR,OAMGvJ,OAAMgK,KAAKR,I,+GCrCpBS,GAA0C,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,YAAahB,EAAe,EAAfA,SAAe,EACnDnmB,mBAAS,IAD0C,mBACtEuD,EADsE,KAC/D6jB,EAD+D,KAEvEC,EAAWC,sBAWjB,OAJAnjB,IAAmB,WACjBgiB,EAAS5iB,KAER,CAACA,IAEF,cAACL,GAAA,EAAD,CAAamC,QAAQ,WAAWvH,UAAWC,KAAOwpB,YAAlD,SACE,cAACC,GAAA,EAAD,CACEH,SAAUA,EACVF,YAAaA,EACbM,WAZyC,SAACpL,GAChC,UAAVA,EAAEqL,KAAmBL,EAAS7iB,SAAS4iB,EAASC,EAAS7iB,QAAQjB,QAYjEokB,eACE,cAACC,GAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACC,GAAA,EAAD,MAGJC,aACE,cAACH,GAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACG,GAAA,EAAD,CACE1I,aAAW,eACXjhB,QAzBkC,WACxCgpB,EAAS7iB,SAAS4iB,EAASC,EAAS7iB,QAAQjB,QAyBtC0kB,KAAK,MAHP,SAKE,cAACC,GAAA,EAAD,aASCjL,OAAMgK,KAAKC,I,qBCuCXiB,GAvEG,SAChB3qB,GACI,IAAD,IACyBwC,mBAAS,IADlC,mBACIsQ,EADJ,KACY8X,EADZ,KAsBH,OAnBAhoB,qBAAU,WACR5C,EAAM6qB,eAEL,IAEHjoB,qBAAU,WACR+P,GAAiB3S,EAAM4S,SAAvBD,CAAA,UAAoC3S,EAAM8qB,UAAuBhY,KAEhE,CAACA,IAYF,qCACE,cAACsT,GAAA,EAAD,IACA,cAAC2E,GAAA,EAAD,CACE/K,kBAAgB,yBAChBC,mBAAiB,+BACjB3f,UAAWC,KAAOyqB,MAClB9iB,KAAMlI,EAAMkI,KACZE,QAASpI,EAAMirB,YACfC,sBAAsB,EACtBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,KATb,SAYE,cAACC,GAAA,EAAD,CAAMC,GAAIxrB,EAAMkI,KAAhB,SACE,sBAAK5H,UAAWC,KAAOob,UAAvB,UACE,qBAAKrb,UAAWC,KAAOkrB,kBAAvB,SACE,+BAAOzrB,EAAM/B,SAGf,sBAAKqC,UAAWC,KAAOmrB,gBAAvB,UACE,qBAAKprB,UAAWC,KAAOorB,wBAAvB,SACE,cAAC,GAAD,CACEhD,SAjChB,SAAkB1qB,GAChB2sB,EAAU3sB,IAiCI0rB,YAAW,UAAE3pB,EAAM4rB,yBAAR,QAA6B,OAG5C,qBAAKtrB,UAAWC,KAAOsrB,uBAAvB,SACE,cAACC,GAAD,CACE7tB,KAAM+B,EAAM/B,KACZ8L,KAAM/J,EAAM+rB,MAAMhiB,KAClBwY,UAAWviB,EAAM+rB,MAAMxJ,UACvB8B,WAAYrkB,EAAM+rB,MAAM1H,WACxB1Z,MAAO3K,EAAM+rB,MAAMphB,MACnBue,QAASlpB,EAAMkpB,QACf8C,WAzChB,SAAwBngB,EAAagT,GACnC7e,EAAMisB,eAAepgB,EAAOqgB,KAC5BlsB,EAAMirB,iCC+JKkB,GApL+B,WAAO,IAAD,Y9CUlD9mB,E8CVkD,EACF7C,oBAAkB,GADhB,mBAC3C4pB,EAD2C,KACzBC,EADyB,OAEN7pB,oBAAkB,GAFZ,mBAE3C8pB,EAF2C,KAE3BC,EAF2B,OAIR/pB,mBAAmB,IAJX,mBAI3CgqB,EAJ2C,KAI5BC,EAJ4B,KAM5CtS,EAAWuS,cAAXvS,OAN4C,EAOGS,GAAQT,GAA/C1I,EAPoC,EAO1C1H,KAAYwY,EAP8B,EAO9BA,UAAW8B,EAPmB,EAOnBA,WAAY1Z,EAPO,EAOPA,MACrCgiB,G9CENtnB,E8CF4D,CAC1D6V,QAASoR,G9CER9Y,aAAS,wBAAyBnI,GAA8BhG,I8CA7DunB,EAAe5Y,GAAe,SAAU,CAC5CkH,QAASkR,IAEK/U,EhC5BhB1O,IAAuB,SAAC6Z,GAAD,OAA4BnX,GAAA,MAAAA,EAAG,aAAcmX,MAAO,CACzEzZ,WAAY6J,KgC2BN6P,OACQpI,EhCxBhB1R,IAAuB,SAAC6Z,GAAD,OAA4BnX,GAAA,MAAAA,EAAG,aAAkBmX,MAAO,CAC7EzZ,WAAY6J,KgCuBN6P,OACQnI,EhCpBhB3R,IAAuB,SAAC6Z,GAAD,OAA4BnX,GAAA,MAAAA,EAAG,aAAuBmX,MAAO,CAClFzZ,WAAY6J,KgCmBN6P,OAmDR,OACE,eAAChd,GAAA,EAAD,CAAWnF,UAAWC,KAAOssB,YAAa/K,aAAW,eAArD,UACE,cAACsE,GAAA,EAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,CACE1E,SAAS,QACTiB,SAAS,SACThB,aACM,OAAJlQ,QAAI,IAAJA,OAAA,EAAAA,EAAM2E,QAAN,iBACO3E,QADP,IACOA,GADP,UACOA,EAAM2E,cADb,aACO,EAAcnY,KADrB,mBAC6BwT,QAD7B,IAC6BA,GAD7B,UAC6BA,EAAM2E,cADnC,aAC6B,EAAclY,SACvCic,MAIV,eAAC2S,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,cAAClW,GAAA,EAAD,CAAWnF,UAAWC,KAAOwsB,aAA7B,SACE,+CAEF,gCACGX,GACC,cAAC,GAAD,CACEH,eAtEkB,SAACC,GAC7BG,GAAoB,GACpBhV,EAAU,CAAC8C,EAAQ+R,EAAIpd,MAqEbid,MAAOa,EACPha,SAAS,UACTsW,QAxCU,CACpB,CAAE8D,MAAO,OAAQC,WAAY,cAAepoB,MAAO,KACnD,CAAEmoB,MAAO,UAAWC,WAAY,iBAAkBpoB,MAAO,MAuC/C+mB,kBAAkB,oBAClBd,SAAS,UACT7sB,KAAK,cACLiK,KAAMkkB,EACNnB,YAAa,kBAAMoB,GAAoB,IACvCxB,WAAY,kBAAMwB,GAAoB,MAG1C,qBAAI/rB,UAAWC,KAAOmZ,SAAtB,UACE,qBAAIpZ,UAAWC,KAAO2sB,YAAtB,UACE,2CACA,kDACGzb,QADH,IACGA,GADH,UACGA,EAAM2E,cADT,aACG,EAAcnY,YADjB,QACyB,MADzB,qBACiCwT,QADjC,IACiCA,GADjC,UACiCA,EAAM2E,cADvC,aACiC,EAAclY,eAD/C,QAC0D,SAE1D,cAAC,GAAD,CACEivB,UAAQ,gBACR3rB,KAAK,SACLJ,MAAM,UACNP,QAAS,kBAAMwrB,GAAoB,SAGvC,qBAAI/rB,UAAWC,KAAO2sB,YAAtB,UACE,kDACA,wCAAOzb,QAAP,IAAOA,OAAP,EAAOA,EAAMkI,aAAb,mBAKR,eAACmT,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,sBAAKrb,UAAWC,KAAO6sB,gBAAvB,UACGd,GACC,cAAC,GAAD,CACEL,eArGmB,SAACC,GAC9BK,GAAkB,GAClBlS,EAAc,CAACF,EAAQ+R,EAAIpd,MAoGjBid,MAAOY,EACP/Z,SAAS,wBACTsW,QAvEe,CACzB,CAAE8D,MAAO,OAAQC,WAAY,mBAAoBpoB,MAAO,KACxD,CAAEmoB,MAAO,UAAWC,WAAY,sBAAuBpoB,MAAO,MAsEpD+mB,kBAAkB,oBAClBd,SAAS,UACT7sB,KAAK,mBACLiK,KAAMokB,EACNrB,YAAa,kBAAMsB,GAAkB,IACrC1B,WAAY,kBAAM0B,GAAkB,MAGxC,oBAAIjsB,UAAWC,KAAOwsB,aAAtB,mBACA,sBAAKzsB,UAAWC,KAAO8sB,QAAvB,UACE,cAAC,GAAD,CACEvL,aAAW,WACXtgB,KAAK,MACLX,QAAS,kBAAM0rB,GAAkB,MAEnC,cAAC,GAAD,CACE1L,aAAY,oDAA+C2L,EAAcjmB,OAA7D,YACZwa,UArGgB,WAC1ByL,EAAcvf,SAAQ,SAACjP,GACrBsc,EAAmB,CAACH,EAAQnc,OAE9ByuB,EAAiB,aAqGb,qBAAKnsB,UAAWC,KAAO+sB,MAAvB,SACE,cAACxB,GAAD,CACEhK,aAAW,qBACX7jB,KAAK,OACLirB,QA7HM,CACd,CAAE8D,MAAO,UAAWC,WAAY,YAAapoB,MAAO,IAAK0oB,UAAU,GACnE,CAAEP,MAAO,OAAQC,WAAY,aAAcpoB,MAAO,IAAK0oB,UAAU,GACjE,CACEP,MAAO,eACPC,WAAY,gBACZpoB,MAAO,IACP0oB,UAAU,GAEZ,CAAEP,MAAO,SAAUC,WAAY,SAAUpoB,MAAO,IAAK0oB,UAAU,IAqHvDxjB,KAAI,OAAE0H,QAAF,IAAEA,OAAF,EAAEA,EAAMP,MACZqR,UAAWA,EACX8B,WAAYA,EACZ1Z,MAAOA,EACP6iB,mBAAmB,EACnBC,uBAvHkB,SAAC5hB,GAC3B4gB,EAAiB5gB,EAAO6hB,qBAyHpB,qBAAKptB,UAAWC,KAAO6sB,gBAAvB,SACE,oBAAI9sB,UAAWC,KAAOwsB,aAAtB,wBAEF,qBAAKzsB,UAAWC,KAAO+sB,MAAvB,SACE,cAACxB,GAAD,CACE7tB,KAAK,eACLirB,QA3Ga,CACrB,CAAE8D,MAAO,OAAQC,WAAY,OAAQpoB,MAAO,KAC5C,CAAEmoB,MAAO,eAAgBC,WAAY,gBAAiBpoB,MAAO,KAC7D,CAAEmoB,MAAO,cAAeC,WAAY,UAAWpoB,MAAO,MAyG9CkF,KAAI,OAAE0H,QAAF,IAAEA,OAAF,EAAEA,EAAMhC,SACZ8S,UAAWA,EACX8B,WAAYA,EACZ1Z,MAAOA,a,yCClLbgjB,GAA4C,SAAC,GAK5C,IAJL3nB,EAII,EAJJA,SACAX,EAGI,EAHJA,QAGI,IAFJE,cAEI,MAFK,GAEL,EADJqoB,EACI,EADJA,aACI,EACsBnO,IAAMjd,SAASorB,GADrC,mBACG7nB,EADH,KACU6jB,EADV,KASJ,OAJAjjB,IAAmB,WACjBX,EAASD,KAER,CAACA,IAEF,cAACN,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAamC,QAAQ,WAArB,UACE,cAACjC,GAAA,EAAD,sBACA,cAACC,GAAA,EAAD,CACE+d,cAAY,UACZtjB,UAAWC,KAAOoF,OAClBK,SAda,SAAC6Y,GACpB+K,EAAS/K,EAAE3Y,OAAOH,QAcZA,MAAOA,EACPT,MAAM,UALR,SAOGD,EAAQoB,KAAI,SAAC5D,GAAD,aACX,eAAC6D,GAAA,EAAD,CAAUpG,UAAWC,KAAOoF,OAAqBI,MAAOlD,EAAxD,UACG,IADH,UAEG0C,EAAO1C,UAFV,QAEqBA,EAAQ,MAFYA,cAWtC4c,OAAMgK,KAAKkE,IC8EXE,GA/GmC,WAChD,IAAMztB,EAAUC,cACVytB,EAAiB/mB,iBAAO,IAFwB,EAKCgR,KAAzChC,EALwC,EAK9ChM,KAAcY,EALgC,EAKhCA,MAAO4X,EALyB,EAKzBA,UAAW8B,EALc,EAKdA,WACxBrN,EvC4FY,SAAC,GAAD,IAAGjO,EAAH,EAAGA,WAAH,OAC5BJ,GAAuB0C,GAAiB,CACtCtC,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,KuC9FImb,CAAe,CAAEhlB,WAAY,WAArD0Z,OACQxL,EvCsFY,SAAC,GAAD,IAAGlO,EAAH,EAAGA,WAAH,OAC5BJ,GAAuB0C,GAAiB,CACtCtC,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,KuCxFIob,CAAe,CAAEjlB,WAAY,WAArD0Z,OAsDR,OACE,eAAChd,GAAA,EAAD,CAAWnF,UAAWC,KAAO0tB,aAAcnM,aAAW,gBAAtD,UACE,cAACsE,GAAA,EAAD,IACA,cAAC,GAAD,CAAYnoB,KAAK,SAAjB,SACE,cAAC,GAAD,CACE0qB,SArDa,SAAC5iB,GACpB,IAAM8M,EAAS,sBAAsBqV,KAAKniB,GAAS,KAAO,gBAE1DiS,GAAYnF,EADG9M,IAoDT4jB,YAAY,qCAGhB,eAACmD,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,sBAAKrb,UAAWC,KAAO6sB,gBAAvB,UACE,oBAAI9sB,UAAWC,KAAOwsB,aAAtB,2BACA,sBAAKzsB,UAAWC,KAAO8sB,QAAvB,UACE,cAAC,GAAD,CACE7rB,KAAK,MACLX,QAAS,kBAAMmW,EAAY,OAC3B8K,aAAW,cAEb,cAAC,GAAD,CACEjB,aAAa,yDACbE,UA/BiB,WAC3B+M,EAAe9mB,QAAQiG,SAAQ,SAACihB,GAC9BjX,EAAYiX,MAEdJ,EAAe9mB,QAAU,SA8BnB,sBAAM1G,UAAWC,KAAO4tB,aAAxB,SACE,cAAC,GAAD,CACEnoB,SA7ES,SAACD,GACpBkS,GAAWlS,IA6ED6nB,aAAa,GACbvoB,QArEU,CAAC,aAAc,gBAAiB,eAsE1CE,OArES,CACnB8Q,WAAY,cACZC,cAAe,iBACf1G,YAAa,uBAsET,qBAAKtP,UAAWC,KAAO+sB,MAAvB,SACE,cAACxB,GAAD,CACE7tB,KA3FQ,SA4FRirB,QAvEM,CACd,CACE8D,MAAO,gBACPC,WAAY,iBACZpoB,MAAO,IACP0oB,UAAU,GAEZ,CACEP,MAAO,aACPC,WAAY,cACZpoB,MAAO,IACP0oB,UAAU,GAEZ,CACEP,MAAO,cACPC,WAAY,eACZpoB,MAAO,IACP0oB,UAAU,IAuDJhL,UAAWA,EACX5X,MAAOA,EACPZ,KAAMgM,EACNsO,WAAYA,EACZ2H,WA5Ca,SAACjiB,GACtB3J,EAAQY,KAAR,uBAA6B+I,EAAK+E,MA4C1B2e,uBAxDmB,SAAC5hB,GAC5BiiB,EAAe9mB,QAAU6E,EAAO6hB,gBAwDxBF,mBAAiB,a,yCCuDdY,GA/J6B,SAACpuB,GAAW,IAAD,MAoD/Ckd,EAnDYC,cAAW,SAACpY,GAAD,OAC3BqY,aAAa,CACXC,KAAM,CACJ,uBAAwB,CACtBC,OAAQvY,EAAMwY,QAAQ,GACtB1Y,MAAO,SAGX2Y,UAAW,CACT,sBAAuB,CACrB3Y,MAAO,QACP4Y,cAAe,KACftB,UAAW,WAGfR,UAAW,CACTQ,UAAW,SACXW,WAAY,aACZY,gBAAiB,UACjBC,OAAQ,qBAEV9W,OAAQ,CACNnG,QAAS,OACTkd,cAAe,SACfjd,WAAY,SACZkd,UAAW,oBACX1a,WAAY,KACZ+Y,aAAc,OACd4B,YAAa,QAEftd,OAAQ,CACNqE,MAAO,OACPnE,QAAS,OACTC,WAAY,WACZqd,eAAgB,UAElBrc,OAAQ,CACN+b,gBAAiB,UACjBJ,OAAQ,OACRzY,MAAO,QACP,UAAW,CACT6Y,gBAAiB,YAGrBS,gBAAiB,CACfzd,QAAS,OACTsd,eAAgB,cAKNI,GApDqC,EAsDrB5b,mBAAS,IAtDY,mBAsD9C6rB,EAtD8C,KAsDrCC,EAtDqC,OAuDtB9rB,mBAAQ,UAACxC,EAAMuuB,kBAAP,QAAqB,GAvDP,mBAuD9ChiB,EAvD8C,KAuDtCiiB,EAvDsC,OAwDZhsB,mBAAQ,UAACxC,EAAMyuB,uBAAP,QAA0B,IAxDtB,mBAwD9Cze,EAxD8C,KAwDjCsO,EAxDiC,OAyDpB9b,mBAAQ,UAACxC,EAAM0uB,mBAAP,QAAsB,IAzDV,mBAyD9CC,EAzD8C,KAyDrCC,EAzDqC,KAuE/CnQ,EAAqB,uCAAG,4BAAAhV,EAAA,sDACtB6C,EADsB,gBAEvB+hB,GAAoBruB,EAAMquB,QAAU,CACrC9hB,SACAyD,cACA2e,YAIJ3uB,EAAM6uB,YAAYviB,GAClBtM,EAAMirB,cAVsB,2CAAH,qDAkB3B,OALAroB,qBAAU,WACR5C,EAAM6qB,eAEL,IAGD,cAACE,GAAA,EAAD,CACE/K,kBAAgB,yBAChBC,mBAAiB,+BACjB3f,UAAWC,KAAOyqB,MAClB9iB,KAAMlI,EAAMkI,KACZE,QAASpI,EAAMirB,YACfC,sBAAsB,EACtBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,KATb,SAYE,cAACC,GAAA,EAAD,CAAMC,GAAIxrB,EAAMkI,KAAhB,SACE,qBAAK5H,UAAW4c,EAAQG,KAAxB,SACE,sBAAK/c,UAAW4c,EAAQvB,UAAxB,UACE,sBAAKrb,UAAW4c,EAAQ1c,OAAxB,UACE,6CACA,cAACoe,GAAA,EAAD,CACEtZ,MAAOtF,EAAMquB,QACb/tB,UAAW4c,EAAQM,UACnBxX,SAAU,SAAC6Y,GAAD,OAAOyP,EAAazP,EAAE3Y,OAAOH,QACvC8B,QAAQ,WACR8hB,YAAY,eAGhB,sBAAKrpB,UAAW4c,EAAQrW,OAAxB,UACE,cAAC+X,GAAA,EAAD,CACEtZ,MAAM,SACNS,MAAOwG,EACPjM,UAAW4c,EAAQM,UACnBxX,SA7Da,SAAC6Y,GAC1B2P,GAAc3P,EAAE3Y,OAAOH,QA6DX8B,QAAQ,aAEV,cAAC+W,GAAA,EAAD,CACEtZ,MAAM,oBACNuC,QAAQ,WACR9B,MAAOiK,EACP8O,WAAS,EACT9Y,SA7DkB,SAAC6Y,GAC/BP,EAAkBO,EAAE3Y,OAAOH,UA8DjB,cAAC6Y,GAAA,EAAD,CACEtZ,MAAM,gBACNuC,QAAQ,WACR9B,MAAO4oB,EACP7P,WAAS,EACT9Y,SAxEc,SAAC6Y,GAC3B+P,EAAc/P,EAAE3Y,OAAOH,aA0Ef,8BACE,cAACsZ,GAAA,EAAD,CAAeta,MAAO4X,GAAtB,SACE,qBAAKrc,UAAW4c,EAAQiB,gBAAxB,SACE,cAACmB,GAAA,EAAD,CACEhf,UAAW4c,EAAQvb,OACnBd,QAAS4d,EACT5W,QAAQ,OACR0X,UAAWhT,EAJb,kCC9JZwM,GAAe,uCAAG,4BAAAtP,EAAA,sEACC4B,GAAIE,QAA0B,mBAD/B,cAChBd,EADgB,yBAEfA,EAASV,MAFM,2CAAH,qDAIf+kB,GAAc,uCAAG,WAAOhgB,GAAP,eAAArF,EAAA,sEACE4B,GAAIL,IAAJ,0BAA+C8D,IADjD,cACfrE,EADe,yBAEdA,EAASV,MAFK,2CAAH,sDAKdglB,GAAiB,uCAAG,WAAOjgB,GAAP,eAAArF,EAAA,sEACD4B,GAAIS,OAAJ,0BAA8BgD,IAD7B,cAClBrE,EADkB,OAExBqG,QAAQC,IAAI,oBAAqBtG,GAFT,kBAGjBA,EAASV,MAHQ,2CAAH,sDAUjBilB,GAAiB,uCAAG,WAAOjlB,GAAP,eAAAN,EAAA,sEACD4B,GAAIW,IAAJ,0BACFjC,EAAK6B,KACxB7B,GAHsB,cAClBU,EADkB,yBAKjBA,EAASV,MALQ,2CAAH,sDCnBjBklB,GAAgB,eAChBC,GAAkB,SAAC7pB,GACvB,OAAOmO,aAASyb,IAAe,kBAAM5jB,OAAuBhG,ICoC9D,IAwYe8pB,GAxYiC,WAAO,IAAD,QAItB3sB,mBAA6B,WAJP,mBAI7CmkB,EAJ6C,KAIpCC,EAJoC,OAKxBpkB,qBALwB,mBAK7C4T,EAL6C,KAKrCiB,EALqC,OAMtB7U,mBAAS,CACrCsM,GAAI,GACJsgB,KAAM,MACNzxB,OAAQ,UACR6Y,WAAY,MACZxG,YAAa,QAXqC,mBAM7CN,EAN6C,KAMpC4H,EANoC,OAalB9U,mBAAqB,IAbH,mBAa7CmU,EAb6C,KAalCiB,EAbkC,OAcZpV,mBAAiB,IAdL,mBAc7CsK,EAd6C,KAc/BuiB,EAd+B,KAgB9CC,EAAuBvoB,iBAAiB,IACxCwoB,EAAiBxoB,iBAAiB,IAjBY,EAmBJvE,oBAAkB,GAnBd,mBAmB7C4pB,EAnB6C,KAmB3BC,EAnB2B,OAoBF7pB,oBAAkB,GApBhB,mBAoB7CgtB,EApB6C,KAoB1BC,EApB0B,OAqBAjtB,oBAAkB,GArBlB,mBAqB7CktB,EArB6C,KAqBzBC,EArByB,OAsBRntB,oBAAkB,GAtBV,mBAsB7C8pB,EAtB6C,KAsB7BC,EAtB6B,OAwBd/pB,mBAAgB,CACpD6rB,QAAS,GACT9hB,OAAQ,IA1B0C,mBAwB7CqjB,EAxB6C,KAwBhCC,EAxBgC,KA6B9C3B,EAAYxB,cAAZwB,QA7B8C,EA8BEhW,GAASgW,GAAjDthB,EA9BsC,EA8B5C7C,KAAaY,EA9B+B,EA8B/BA,MAAO4X,GA9BwB,EA8BxBA,UAAW8B,GA9Ba,EA8BbA,WACvByL,G3C1DkB,SAClC5B,EADkC,OAEhCnlB,EAFgC,EAEhCA,WAFgC,OAIlCJ,IACE,SAACwO,GAAD,OAAsB9L,GAAc6iB,EAAS/W,KAC7C,CACEpO,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,K2CmDQmd,CAAqB7B,EAAS,IAA5DzL,OACQuN,G3CmBmB,SACnC9B,EADmC,OAEjCnlB,EAFiC,EAEjCA,WAFiC,OAInCJ,IACE,SAAC4O,GAAD,OAAuBlM,GAAe6iB,EAAS3W,KAC/C,CACExO,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,K2C1BSqd,CAAsB/B,EAAS,IAA9DzL,OACQjL,G3CjDe,SAAC0W,EAAD,OAAoBnlB,EAApB,EAAoBA,WAApB,OAC/BJ,IACE,SAAC8O,GAAD,OAA2BpM,GAAmB6iB,EAASzW,KACvD,CACE1O,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,K2C6CKsd,CAAkBhC,EAAS,IAAtDzL,OACQ/K,G3ClCoB,SACpCwW,EADoC,OAElCnlB,EAFkC,EAElCA,WAFkC,OAIpCJ,IACE,SAAC8O,GAAD,OAA2BpM,GAAsB6iB,EAASzW,KAC1D,CACE1O,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,K2C2BQud,CAAuBjC,EAAS,IAA9DzL,OACQ9K,G3C3CY,SAACuW,EAAD,OAAoBnlB,EAApB,EAAoBA,WAApB,OAC5BJ,IACE,SAACwO,GAAD,OAAsB9L,GAAgB6iB,EAAS/W,KAC/C,CACEpO,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,K2CuCEwd,CAAelC,EAAS,IAAhDzL,OACQ4N,G3C0BqB,SACrCnC,EADqC,OAEnCnlB,EAFmC,EAEnCA,WAFmC,OAIrCJ,IACE,SAAC2nB,GAAD,OAA+BjlB,GAAiB6iB,EAASoC,KACzD,CACEvnB,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,K2CjCW2d,CAAwBrC,EAAS,IAAlEzL,OACQ3K,G3C1BiB,SAACoW,EAAD,OAAoBnlB,EAApB,EAAoBA,WAApB,OACjCJ,IACE,SAACuD,GAAD,OAAoBb,GAAqB6iB,EAAShiB,KAClD,CACEnD,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,K2CsBO4d,CAAoBtC,EAAS,IAA1DzL,OACQ5K,G3CPe,SAACqW,EAAD,OAAoBnlB,EAApB,EAAoBA,WAApB,OAC/BJ,IACE,SAACuD,GAAD,OAAoBb,GAAmB6iB,EAAShiB,KAChD,CACEnD,WAAU,OAAEA,QAAF,IAAEA,IAAc6J,K2CGK6d,CAAkBvC,EAAS,IAAtDzL,OAUFiO,GAAoB1c,GAAe,cAAe,CACtDkH,QAASoR,IAELM,GAAe5Y,GAAe,SAAU,CAC5CkH,QAASkR,GAAoBsD,IAEzBiB,GAAoBzB,GAAgB,CACxChU,QAASsU,IAGX5sB,qBAAU,WACR,GAAIgK,EAAO,CACTyK,EAAU,CACRvI,GAAIlC,EAAMsJ,SACVjY,KAAM2O,EAAMyJ,WACZnY,QAAS0O,EAAM0J,gBAEjBgB,EAAW,CACTxI,GAAIlC,EAAM0I,UACV8Z,KAAMxiB,EAAMgD,YACZjS,OAAO,GAAD,OAAKiP,EAAMyJ,WAAX,YAAyBzJ,EAAM0J,eACrCE,WAAY5J,EAAM4J,WAClBxG,YAAapD,EAAM6J,qBAErB,IAAMma,EAAehkB,EAAM+J,UAAUlQ,KAAI,SAACoqB,GAAD,mBAAC,eACrCA,GADoC,IAEvC/hB,GAAI+hB,EAAIjlB,SAEVgM,EAAagZ,GACbvB,EAAgBziB,EAAME,cACtB8Z,EAAW,QACX2F,GAAkB,MAEnB,CAAC3f,IAEJ,IA7F2BV,GA8JrB4kB,GAAgB,CACpB,CAAE9D,MAAO,OAAQC,WAAY,cAAepoB,MAAO,KACnD,CAAEmoB,MAAO,UAAWC,WAAY,iBAAkBpoB,MAAO,MAGrDksB,GAAqB,CACzB,CAAE/D,MAAO,OAAQC,WAAY,mBAAoBpoB,MAAO,KACxD,CAAEmoB,MAAO,UAAWC,WAAY,sBAAuBpoB,MAAO,MAgBhE,MAAgB,YAAZ8hB,EAA8B,2CAGhC,eAAClhB,GAAA,EAAD,CAAWnF,UAAWC,KAAOywB,YAAalP,aAAW,eAArD,UACE,cAACsE,GAAA,EAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,CACE1E,SAAS,SACTiB,SAAS,eACThB,YAAavL,EAAM,UAAMA,EAAOnY,KAAb,YAAqBmY,EAAOlY,SAAYgwB,MAI/D,eAACpB,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,cAAClW,GAAA,EAAD,CAAWnF,UAAWC,KAAOwsB,aAA7B,SACE,gDAEF,gCACGX,GACC,cAAC,GAAD,CACEH,eA5GkB,SAACC,GAC7BG,GAAoB,GACpByD,GAAkB5D,EAAIpd,KA2GZid,MAAOa,GACPha,SAAS,UACTsW,QAAS4H,GACTlF,kBAAkB,oBAClBd,SAAS,UACT7sB,KAAK,cACLiK,KAAMkkB,EACNnB,YAAa,kBAAMoB,GAAoB,IACvCxB,WAAY,kBAAMwB,GAAoB,MAGzCmD,GACC,cAAC,GAAD,CACEvD,eAjHmB,SAACC,GAC9BuD,GAAqB,GACrBO,GAAmB9D,EAAIpd,KAgHbid,MAAO4E,GACP/d,SAAS,eACTsW,QA5CW,CACrB,CAAE8D,MAAO,kBAAmBC,WAAY,OAAQpoB,MAAO,KACvD,CAAEmoB,MAAO,aAAcC,WAAY,SAAUpoB,MAAO,KACpD,CAAEmoB,MAAO,aAAcC,WAAY,MAAOpoB,MAAO,KACjD,CAAEmoB,MAAO,cAAeC,WAAY,UAAWpoB,MAAO,MAyC5C+mB,kBAAkB,iBAClBd,SAAS,kBACT7sB,KAAK,eACLiK,KAAMsnB,EACNvE,YAAa,kBAAMwE,GAAqB,IACxC5E,WAAY,kBAAM4E,GAAqB,MAG1CC,GACC,cAAC,GAAD,CACEzD,eA1HoB,SAACC,GAC/ByD,GAAsB,GACtBhY,GAAYuU,EAAIpd,KAyHNid,MAAOa,GACPha,SAAS,UACTsW,QAAS4H,GACTlF,kBAAkB,oBAClBd,SAAS,UACT7sB,KAAK,uBACLiK,KAAMwnB,EACNzE,YAAa,kBAAM0E,GAAsB,IACzC9E,WAAY,kBAAM8E,GAAsB,MAG5C,qBAAIrvB,UAAWC,KAAOmZ,SAAtB,UACE,qBAAIpZ,UAAWC,KAAO2sB,YAAtB,UACE,4CACA,+BAAOxd,EAAQ0f,OACf,cAAC,GAAD,CACEjC,UAAQ,gBACR3rB,KAAK,SACLJ,MAAM,UACNP,QAAS,kBAAM4uB,GAAqB,SAGxC,qBAAInvB,UAAWC,KAAO2sB,YAAtB,UACE,2CACA,kDACG9W,QADH,IACGA,OADH,EACGA,EAAQnY,YADX,QACmB,MADnB,qBAC2BmY,QAD3B,IAC2BA,OAD3B,EAC2BA,EAAQlY,eADnC,QAC8C,SAE9C,cAAC,GAAD,CACEivB,UAAQ,gBACR3rB,KAAK,SACLJ,MAAM,UACNP,QAAS,kBAAMwrB,GAAoB,SAGvC,qBAAI/rB,UAAWC,KAAOqW,cAAtB,UACE,8CACA,qBAAItW,UAAWC,KAAOoW,UAAtB,UACGA,EAAUlQ,KAAI,SAACyG,GAAD,OACb,qBAAI5M,UAAWC,KAAO0wB,gBAAtB,UACE,iCACG/jB,EAASjP,KADZ,IACmBiP,EAAShP,WAE5B,cAAC,GAAD,CACE2iB,aAAY,mDAA8C3T,EAASjP,KAAvD,YAA+DiP,EAAShP,QAAxE,KACZ6iB,UAAW,kBAlKR,SAACjS,GACtB,IAAMoiB,EAAeva,EAClBlQ,KAAI,SAACoqB,GAAD,OAASA,EAAIjlB,OACjBuF,QAAO,SAAC0f,GAAD,OAASA,IAAQ/hB,KAC3BuhB,GAAqBa,GA8JcC,CAAejkB,EAAStB,UANDsB,EAAStB,QAUvD,6BACE,cAAC,GAAD,CACEpK,KAAK,eACLX,QAAS,kBAAM8uB,GAAsB,iBAO/C,qBAAIrvB,UAAWC,KAAOmZ,SAAtB,UACE,qBAAIpZ,UAAWC,KAAO2sB,YAAtB,UACE,wCACA,+BAAOxd,EAAQ8G,gBAEjB,qBAAIlW,UAAWC,KAAO2sB,YAAtB,UACE,gDACA,+BAAOxd,EAAQM,0BAKvB,eAAC8c,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,sBAAKrb,UAAWC,KAAO6sB,gBAAvB,UACGd,GACC,cAAC,GAAD,CACEL,eA9MmB,SAACC,GAC9B1U,GAAe0U,EAAIpd,KA8MTid,MAAO2E,GACP9d,SAAS,eACTsW,QAAS6H,GACTnF,kBAAkB,oBAClBd,SAAS,UACT7sB,KAAK,mBACLiK,KAAMokB,EACNrB,YAAa,kBAAMsB,GAAkB,IACrC1B,WAAY,kBAAM0B,GAAkB,MAGxC,oBAAIjsB,UAAWC,KAAOwsB,aAAtB,mBACA,sBAAKzsB,UAAWC,KAAO8sB,QAAvB,UACE,cAAC,GAAD,CACEvL,aAAW,kBACXtgB,KAAK,MACLX,QAAS,kBAAM0rB,GAAkB,MAEnC,cAAC,GAAD,CACE1L,aAAa,6CACbE,UA1MgB,WAC1BuO,EAAqBtoB,QAAQiG,SAAQ,SAACjP,GAAD,OAAU0Z,GAAkB1Z,MACjEsxB,EAAqBtoB,QAAU,YA4M3B,qBAAK1G,UAAWC,KAAO+sB,MAAvB,SACE,cAACxB,GAAD,CACEhK,aAAW,qBACX7jB,KAhUoB,eAiUpBirB,QAAS6H,GACThnB,KAAI,OAAE6C,QAAF,IAAEA,OAAF,EAAEA,EAAOW,aAAa9G,KAAI,SAACzI,GAAD,MAAW,CACvC8Q,GAAI9Q,EAAKyP,cACTxP,KAAMD,EAAKC,KACXC,QAASF,EAAKE,YAEhBqkB,UAAWA,GACX8B,WAAYA,GACZ1Z,MAAOA,EACP6iB,mBAAmB,EACnBC,uBAhOyB,SAACvB,GAClCoD,EAAqBtoB,QAAUklB,EAAIwB,uBAmOjC,eAACZ,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,sBAAKrb,UAAWC,KAAO6sB,gBAAvB,UACGwC,EAAYvB,SACX,cAAC,GAAD,CACEA,QAASuB,EAAYvB,QACrBE,WAAYqB,EAAYrjB,OACxBmiB,YAAakB,EAAYjB,QACzBF,gBAAiBmB,EAAY5f,YAC7B6e,YA/NY,SAACviB,GACvB,IAAM8kB,EAAS,2BACVtkB,GACAR,GAEDsjB,EAAYvB,UAAYjiB,OAAOilB,KAAK/kB,GAAO,WACtC8kB,EAAUxB,EAAYvB,SAE/BvW,GAAiBsZ,IAwNPlpB,OAAQ0nB,EAAYvB,QACpBpD,YAAa,kBAAM4E,EAAe,CAAExB,QAAS,GAAI9hB,OAAQ,KACzDse,WAAY,kBAAM,KAGtB,oBAAIvqB,UAAWC,KAAOwsB,aAAtB,2BACA,sBAAKzsB,UAAWC,KAAO8sB,QAAvB,UACE,cAAC,GAAD,CACEvL,aAAW,YACXtgB,KAAK,MACLX,QAAS,kBAxNE,SAACiO,EAAYxC,GAClC,IAAM8kB,EAAS,gBACZ9kB,EAAM+hB,QAAUxX,KAAEC,KAAKxK,EAAO,YAEjCuL,GAAeuZ,GACf/B,EAAgB,2BAAKviB,GAAiBskB,IAoN1BE,CAAepD,EAAS,CAAEG,QAAS,MAAO9hB,OAAQ,OAGtD,cAAC,GAAD,CACEsU,aAAa,8CACbE,UArOiB,WAC3B,IAAMwQ,EAAkB1a,KAAEC,KAAKhK,EAAcyiB,EAAevoB,SAC5D8Q,GAAiByZ,GACjBhC,EAAevoB,QAAU,GACzBqoB,EAAgBkC,YAqOZ,qBAAKjxB,UAAWC,KAAO+sB,MAAvB,SACE,cAACxB,GAAD,CACEhK,aAAW,eACX7jB,KAhXoB,gBAiXpBirB,QApNW,CACnB,CAAE8D,MAAO,UAAWC,WAAY,UAAWpoB,MAAO,KAClD,CAAEmoB,MAAO,SAAUC,WAAY,SAAUpoB,MAAO,KAChD,CAAEmoB,MAAO,UAAWC,WAAY,UAAWpoB,MAAO,MAkN1CkF,MA7XiBmC,GA6XQ,iBAACU,QAAD,IAACA,OAAD,EAACA,EAAOE,oBAAR,QAAwB,GA5XpDV,OAAOolB,QAAQtlB,IAAQzF,KAAI,mCAAE4nB,EAAF,KAAW/hB,EAAX,wBAAC,eAC9BA,GAD6B,IAEhC+hB,UACAvf,GAAIuf,QA0XI9L,UAAWA,GACX8B,WAAYA,GACZ1Z,MAAOA,EACP8iB,uBAjQmB,SAACvB,GAC5BqD,EAAevoB,QAAUklB,EAAIwB,gBAiQrB1B,WAAY,SAACngB,GAAD,OACVgkB,EAAe,CACbxB,QAASxiB,EAAOqgB,IAAImC,QACpB9hB,OAAQV,EAAOqgB,IAAI3f,OACnBoiB,QAAS9iB,EAAOqgB,IAAIyC,QACpB3e,YAAanE,EAAOqgB,IAAIlc,eAG5Bwd,mBAAiB,a,qBC3ZhBiE,GAAqBtyB,YAAY,CAC5ClB,KAAM,gBACNmB,aAJuC,GAKvCG,SAAU,CACRmyB,UAAW,SAACjyB,EAAD,GACTA,EADiC,EAAd8H,QACLtJ,MAAQ,CACpB0oB,QAAS,UACT0C,KAAM,GACNsI,cAAe,KAGnBC,YARQ,SAQInyB,EAAO6H,GACjB7H,EAAM6H,EAAOC,QAAQtJ,MAAM0oB,QAAU,WAGvCkL,aAZQ,SAYKpyB,EAAO6H,GAAuD,IAAD,EACjDA,EAAOC,QAAtBtJ,EADgE,EAChEA,KAAM8L,EAD0D,EAC1DA,KACc,YAAxBtK,EAAMxB,GAAM0oB,UACdlnB,EAAMxB,GAAMorB,KAAZ,aAAuBtf,GACvBtK,EAAMxB,GAAM0zB,cAAZ,aAAgC5nB,GAChCtK,EAAMxB,GAAM0oB,QAAU,SAI1BmL,WArBQ,SAsBNryB,EACA6H,GACC,IAAD,EAC2BA,EAAOC,QAA1B+lB,EADR,EACQA,MAAO1Z,EADf,EACeA,QACVnU,EAAM6tB,IAAmC,SAAzB7tB,EAAM6tB,GAAO3G,UAClClnB,EAAM6tB,GAAOqE,cAAb,aAAiClyB,EAAM6tB,GAAOjE,MACjB,KAAzBzV,EAAQ,GAAGvH,OAAO,IAEtBuH,EAAQ3G,SAAQ,YAAyB,IAAtB4F,EAAqB,EAArBA,OAAQxG,EAAa,EAAbA,OACrBA,EAAO9F,SACT9G,EAAM6tB,GAAOqE,cAAgBlyB,EAC3B6tB,GACAqE,cAAcxgB,QAAO,SAAC+a,GAAD,OAAS7f,EAAO0lB,SAAP,UAAmB7F,EAAIrZ,cAI7Dmf,WAtCQ,SAuCNvyB,EACA6H,GACC,IAAD,EACkCA,EAAOC,QAAjC+lB,EADR,EACQA,MAAOza,EADf,EACeA,OAAQC,EADvB,EACuBA,OAClBrT,EAAM6tB,IAAmC,SAAzB7tB,EAAM6tB,GAAO3G,UAClClnB,EAAM6tB,GAAOqE,cAAb,aAAiClyB,EAAM6tB,GAAOjE,MAC/B,KAAXvW,IACJrT,EAAM6tB,GAAOqE,cAAgBlyB,EAAM6tB,GAAOqE,cAAcxgB,QAAO,SAAC+a,GAAD,MAC7D,UAAGA,EAAIrZ,IAAUK,MAAMJ,SAI3Bmf,SAnDQ,SAoDNxyB,EACA6H,GACC,IAAD,EACgCA,EAAOC,QAA/B+lB,EADR,EACQA,MAAOza,EADf,EACeA,OAAQzU,EADvB,EACuBA,KACnByU,IACEzU,GAAiB,WAATA,EACVqB,EAAM6tB,GAAOqE,cAActe,MAAK,SAAC5J,EAAGkH,GAAJ,OAAUlH,EAAIkH,KAE9ClR,EAAM6tB,GAAOqE,cAActe,MAAK,SAAC5J,EAAGkH,GAAJ,MAC9B,UAAGlH,EAAEoJ,IAAUS,cAAf,UAAgC3C,EAAEkC,a,GAc1C4e,GAAmB3xB,QAHrBgyB,I,GAHAJ,U,GACAE,Y,GACAC,a,GACAC,YAiBaL,I,GAhBbQ,S,GACAD,WAeaP,GAAf,SC5Ce9tB,GAlDmC,WAChD,IAAMuuB,EAAOhD,KACP9uB,EAAUC,cACVF,EAAWrB,IAHqC,EAI1B0D,mBAAS,IAJiB,mBAI/CsQ,EAJ+C,KAIvC8X,EAJuC,KAMtDhoB,qBAAU,WAKRzC,EAAS2xB,GAAW,CAAExE,MAAO,uBAAwB1Z,QAAS,CAJpD,CACRf,OAAQ,OACRxG,OAAQ,CAACyG,UAGV,CAACA,EAAQ3S,IAkBZ,OACE,eAACimB,GAAA,EAAD,WACE,cAAC,GAAD,CAAYnoB,KAAM,gBAAlB,SACE,cAAC,GAAD,CACE0qB,SAAUiC,EACVjB,YAAY,8BAGhB,cAACmD,GAAA,EAAD,CAAOxsB,UAAWC,KAAOqc,KAAzB,SACE,cAACkP,GAAD,aACE7tB,KAAM,gBACNirB,QA3BQ,CACd,CACE8D,MAAO,kBACPnoB,MAAO,IACP0oB,UAAU,EACVN,WAAY,gBAEd,CACED,MAAO,aACPnoB,MAAO,IACP0oB,UAAU,EACVN,WAAY,eAEd,CAAED,MAAO,cAAenoB,MAAO,IAAK0oB,UAAU,EAAMN,WAAY,YAe1DjB,WAAY,SAACngB,GAAD,OAAYzL,EAAQY,KAAR,wBAA8B6K,EAAOiD,OACzDojB,U,yCCtCRC,GAAa,SAAC,GAAgC,IzCWtBnpB,EyCXRopB,EAA6B,EAA7BA,gBACdjyB,EAAWrB,IACTmB,EAAiBjB,GAAe,SAACS,GAAD,OAAWA,EAAMS,cAAjDD,aAFyC,EAGLuC,mBAAS,IAHJ,mBAG1C6vB,EAH0C,KAG1BC,EAH0B,KAInCC,EAAYve,GAAe,UAAjCjK,KACQwQ,EzCOhB5R,GAAuB0C,GAAgB,CACrCtC,WAAY6J,GACZ5J,cyCTMyZ,OA+BR,OACE,uBAAMkG,SAvBa,SAAC9J,GAEpB,GADAA,EAAE4J,kBACG4J,EACH,OAAOlyB,EACLkH,GAAa,CAAEH,QAAS,0BAA2BC,SAAU,WAIjEoT,EACE,CACE9O,UAAsB,OAAZxL,QAAY,IAAZA,OAAA,EAAAA,EAAc2L,MAAO,GAC/BuL,SAAUkb,GAEZ,CACErpB,UAAW,WACTopB,GAAgB,GAChBE,EAAkB,QAOMhyB,UAAWC,KAAOob,UAAhD,UACE,oBAAIrb,UAAWC,KAAOwsB,aAAtB,yBACA,eAACrnB,GAAA,EAAD,CAAamC,QAAQ,WAArB,UACE,cAACjC,GAAA,EAAD,4BACA,cAACC,GAAA,EAAD,CACE+d,cAAY,gBACZ4O,QAAQ,gBACRzsB,MAAOssB,EACPrsB,SAnCsB,SAAC6Y,GAC7ByT,EAAkBzT,EAAE3Y,OAAOH,QAmCrBzF,UAAWC,KAAOoF,OAClBL,MAAM,gBANR,gBAQGitB,QARH,IAQGA,OARH,EAQGA,EAAS9rB,KAAI,SAAC2P,GAAD,OACZ,cAAC1P,GAAA,EAAD,CACEX,MAAOqQ,EAAOtH,GADhB,mBAGKsH,EAAOnY,KAHZ,YAGoBmY,EAAOlY,UADpBkY,EAAOtH,YAKpB,sBAAKxO,UAAWC,KAAO8sB,QAAvB,UACE,cAAC,GAAD,CAAW7rB,KAAK,SAASpD,KAAK,WAC9B,cAAC,GAAD,CACEoD,KAAK,SACLX,QAAS,WACPuxB,GAAgB,IAElBhxB,MAAM,qBCmDDqxB,GA9G2B,WACxC,IAAMryB,EAAUC,cACRJ,EAAiBjB,GAAe,SAACS,GAAD,OAAWA,EAAMS,cAAjDD,aAFsC,EAGJuC,mBAAmB,IAHf,mBAGvCkwB,EAHuC,KAGxBC,EAHwB,OAIQlY,GAAQ,OAC5Dxa,QAD4D,IAC5DA,OAD4D,EAC5DA,EAAc2L,KADF0F,EAJgC,EAItCvH,KAAawY,EAJyB,EAIzBA,UAAW8B,EAJc,EAIdA,WAAY1Z,EAJE,EAIFA,MAG5B6P,E1CLhB7R,GAAuB0C,GAAgB,CACrCtC,WAAY6J,K0CIN6P,OAPsC,EAQNjgB,oBAAS,GARH,mBAQvCowB,EARuC,KAQzBR,EARyB,KAuD9C,OACE,eAAC3sB,GAAA,EAAD,CAAWnF,UAAWC,KAAOssB,YAAa/K,aAAW,eAArD,UACE,cAACsE,GAAA,EAAD,IACA,cAAC,GAAD,CAAYnoB,KAAK,QAAjB,SACE,cAAC,GAAD,CACE0qB,SA1Ca,SAAC5iB,GACpB,IAAM8M,EAAS,sBAAsBqV,KAAKniB,GAAS,KAAO,UAC1D2U,GAAW7H,EAAQ9M,IAyCb4jB,YAAY,qCAGhB,eAACmD,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,qBAAKrb,UAAWC,KAAO6sB,gBAAvB,SACGwF,EACC,cAAC,GAAD,CAAYR,gBAAiBA,IAE7B,qCACE,oBAAI9xB,UAAWC,KAAOwsB,aAAtB,0BACA,sBAAMzsB,UAAWC,KAAO4tB,aAAxB,SACE,cAAC,GAAD,CACEnoB,SA3DK,SAACD,GACpB4U,GAAU5U,IA2DI6nB,aAAa,GACbvoB,QApDM,CAAC,OAAQ,UAAW,kBAuD9B,sBAAK/E,UAAWC,KAAO8sB,QAAvB,UACE,cAAC,GAAD,CACE7rB,KAAK,MACLX,QAAS,kBAAMuxB,GAAgB,IAC/BtQ,aAAW,aAEb,cAAC,GAAD,CACEjB,aAAY,oDAA+C6R,EAAcnsB,OAA7D,YACZwa,UA1CY,WAC1B2R,EAAczlB,SAAQ,SAACkN,GACrBK,EAAWL,MAEbwY,EAAiB,eA4Cb,qBAAKryB,UAAWC,KAAO+sB,MAAvB,SACE,cAACxB,GAAD,CACE7tB,KAlFQ,QAmFRirB,QAvEM,CACd,CACE8D,MAAO,UACPC,WAAY,iBACZpoB,MAAO,IACP0oB,UAAU,GAEZ,CAAEP,MAAO,OAAQC,WAAY,cAAepoB,MAAO,IAAK0oB,UAAU,GAClE,CACEP,MAAO,aACPC,WAAY,cACZpoB,MAAO,IACP0oB,UAAU,IA4DJxjB,KAAMuH,EACN3G,MAAOA,EACP4X,UAAWA,EACX8B,WAAYA,EACZoJ,uBA5DkB,SAAC5hB,GAC3B8mB,EAAiB,aAAI9mB,EAAO6hB,kBA4DpB1B,WAlDa,SAACjiB,GACtB3J,EAAQY,KAAR,iBAAuB+I,EAAK+E,MAkDpB0e,mBAAiB,a,qBChGvBqF,GAA0C,WAAO,IAAD,EACLtf,KAAvCgP,EAD4C,EAC5CA,UAAW5X,EADiC,EACjCA,MAAOZ,EAD0B,EAC1BA,KAAMsa,EADoB,EACpBA,WAC1BjkB,EAAUC,cAFoC,EAKd+E,GAAkC,CACtEC,QAAS+G,OAAOilB,KAAKxzB,sBACrByH,MAAO,qBAP2C,mBAK7CwtB,EAL6C,KAK/BC,EAL+B,OASlB3tB,GAAgC,CAChEC,QAAS+G,OAAOilB,KAAKvzB,oBACrBwH,MAAO,mBAX2C,mBAS7C0tB,EAT6C,KASjCC,EATiC,KAsBpDtsB,IAAmB,WACjB,IAAMiN,EAAuB,CAC3BxV,KAAM60B,EAAYxsB,KAChB,SAACrI,GAAD,OAAUN,mBAAgBM,MAE5BC,OAAQ00B,EAActsB,KACpB,SAACpI,GAAD,OAAYR,qBAAkBQ,OAGlCsV,GAAYC,KAEX,CAACqf,EAAaF,IAgBjB,OACE,eAACttB,GAAA,EAAD,CAAWnF,UAAWC,KAAOob,UAAWmG,aAAW,eAAnD,UACE,cAACsE,GAAA,EAAD,IACA,cAAC,GAAD,CAAYnoB,KAAK,QAAjB,SACE,cAAC,GAAD,CACE0qB,SArCa,SAAC5iB,GACpB,IAAM8M,EAAS,sBAAsBqV,KAAKniB,GAAS,KAAO,UAC1D0N,GAAWZ,EAAsB9M,IAoC3B4jB,YAAY,2BAGhB,eAACmD,GAAA,EAAD,CAAOxsB,UAAWC,KAAO2yB,eAAzB,UACE,sBAAK5yB,UAAWC,KAAO6sB,gBAAvB,UACE,oBAAI9sB,UAAWC,KAAOwsB,aAAtB,0BACA,sBAAKzsB,UAAWC,KAAO4yB,iBAAvB,UACGL,EACAE,KAEH,sBAAM1yB,UAAWC,KAAO4tB,aAAxB,SACE,cAAC,GAAD,CACEnoB,SArDS,SAACD,GACpB2N,GAAU3N,IAqDA6nB,aAAa,GACbvoB,QAlCU,CAAC,OAAQ,UAAW,OAAQ,iBAsC5C,cAACymB,GAAD,CACE7tB,KAvEU,QAwEVirB,QAvCQ,CACd,CAAE8D,MAAO,OAAQC,WAAY,OAAQpoB,MAAO,IAAK0oB,UAAU,GAC3D,CAAEP,MAAO,UAAWC,WAAY,UAAWpoB,MAAO,IAAK0oB,UAAU,GACjE,CAAEP,MAAO,OAAQC,WAAY,OAAQpoB,MAAO,IAAK0oB,UAAU,GAC3D,CAAEP,MAAO,SAAUC,WAAY,SAAUpoB,MAAO,IAAK0oB,UAAU,IAoCzDvB,WAjCR,SAAyBngB,GACvB,IAAMmF,EAASnF,EAAOqgB,IAAIpd,GACpBxN,EAAI,gBAAY0P,GACtB5Q,EAAQY,KAAKM,IA+BPihB,UAAWA,EACX5X,MAAOA,EACPZ,KAAMA,EACNsa,WAAYA,WAOP5E,OAAMgK,KAAKoJ,I,oBC4EXO,GAhL+B,SAACpzB,GAAW,IAAD,EAmBhD,MAlBDgR,EAAM,UAAGxS,aAAaC,QAAQ,aAAxB,QAAiC,GADU,EAEVsV,GAAU,CACrDmH,UAAWlK,IADCgB,EAFyC,EAE/CjI,KAAgBwY,EAF+B,EAE/BA,UAAW5X,EAFoB,EAEpBA,MAI/B0oB,EAAc,EAElB,SAASC,EAASC,GAChB,OAAIA,EAAa,GAAW,UACnBA,EAAa,GAAW,UACxBA,EAAa,GAAW,UACrB,UAGd,OAAI5oB,EACK,qBAAKrK,UAAWC,KAAOoK,MAAvB,mBACE4X,EACF,cAACiC,GAAA,EAAD,CAAkBlkB,UAAWC,KAAOomB,UAGzC,eAACtH,GAAA,EAAD,CAAeta,MAAO4X,GAAtB,UACE,cAAC,GAAD,CAAY1e,KAAK,cAEjB,eAACujB,GAAA,EAAD,CAAKlhB,UAAWC,KAAOob,UAAvB,UACE,cAAC6F,GAAA,EAAD,CAAK9gB,QAAQ,OAAOJ,UAAWC,KAAOkrB,kBAAtC,SACE,gDAED,OAACzZ,QAAD,IAACA,OAAD,EAACA,EAAU9F,OAAO3F,QAGjB,qCACE,wBACE9F,MAAO,CAAEoE,MAAO,QAChBvE,UAAWC,KAAOmrB,gBAFpB,UAIE,+BACE,uBACA,sCACA,sCACA,yCACA,4CATJ,OAYG1Z,QAZH,IAYGA,OAZH,EAYGA,EAAU9F,OAAOzF,KAAI,SAAC6F,GACrB,IAAMknB,GAAqB,OAALlnB,QAAK,IAALA,OAAA,EAAAA,EAAO2B,iBAClB,OAAL3B,QAAK,IAALA,OAAA,EAAAA,EAAO0B,aAAc,GAAK1B,EAAM2B,cAAiB,IACnD,EAEEwlB,GAAqB,OAALnnB,QAAK,IAALA,OAAA,EAAAA,EAAOwB,iBAClB,OAALxB,QAAK,IAALA,OAAA,EAAAA,EAAOuB,aAAc,GAAKvB,EAAMwB,cAAiB,IACnD,EACE4lB,IACG,OAALpnB,QAAK,IAALA,OAAA,EAAAA,EAAOgB,gBAAiB,GCrEnB,GDqEuC,IAE5CqmB,EClEK,EDmELC,ECnEK,EDmEmBJ,EAa5B,OAZA,OAAIlnB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOwB,iBACT8lB,GCpEO,EDoEkBH,EACzBE,GCrEO,IDuET,OAAIrnB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOgB,iBACTsmB,GCvEU,EDuEkBF,EAC5BC,GCxEU,GD4EZN,GADAO,GAAWD,EAIT,+BACE,6BAAKrnB,EAAM,kBACX,+BACE,uBACEhM,UAAWC,KAAOszB,kBAClBpzB,MAAO,CAAEW,MAAOkyB,EAASE,IAF3B,UAIGA,EAAcM,QAAQ,GAJzB,OAMA,uBAAMxzB,UAAWC,KAAOwzB,cAAxB,iBACGznB,QADH,IACGA,OADH,EACGA,EAAO0B,WADV,aACyB1B,QADzB,IACyBA,OADzB,EACyBA,EAAO2B,oBAGlC,8BACQ,OAAL3B,QAAK,IAALA,OAAA,EAAAA,EAAOwB,eACN,qCACE,uBACExN,UAAWC,KAAOszB,kBAClBpzB,MAAO,CAAEW,MAAOkyB,EAASG,IAF3B,UAIGA,EAAcK,QAAQ,GAJzB,OAMA,uBAAMxzB,UAAWC,KAAOwzB,cAAxB,iBACGznB,QADH,IACGA,OADH,EACGA,EAAOuB,WADV,aACyBvB,QADzB,IACyBA,OADzB,EACyBA,EAAOwB,oBAIlC,yCAGJ,8BACQ,OAALxB,QAAK,IAALA,OAAA,EAAAA,EAAOgB,eACN,qCACE,uBACEhN,UAAWC,KAAOszB,kBAClBpzB,MAAO,CAAEW,MAAOkyB,EAASI,IAF3B,UAIGA,EAAiBI,QAAQ,GAJ5B,OAMA,uBAAMxzB,UAAWC,KAAOwzB,cAAxB,iBACGznB,QADH,IACGA,OADH,EACGA,EAAOgB,cADV,MC7HD,SDkID,yCAGJ,6BACE,uBACEhN,UAAWC,KAAOszB,kBAClBpzB,MAAO,CAAEW,MAAOkyB,EAASM,IAF3B,UAIGA,EAAQE,QAAQ,GAJnB,mBAYV,6DAEA,sBACErzB,MAAO,CACLuzB,OAAQ,OACRnvB,MAAO,QACP0X,WAAY,wBACZ0X,aAAc,OACd3W,OAAQ,sBACR+M,SAAU,YAPd,UAUE,qBACE5pB,MAAO,CACLuzB,OAAQ,OACRnvB,MAAM,GAAD,OACKwuB,GAAW,OAAGrhB,QAAH,IAAGA,GAAH,UAAGA,EAAU9F,cAAb,aAAG,EAAkB3F,QAAvC,IAAkD,IADhD,MAGLgW,WAAY+W,EACVD,GAAW,OAAGrhB,QAAH,IAAGA,GAAH,UAAGA,EAAU9F,cAAb,aAAG,EAAkB3F,SAElC0tB,aAAc,UAGlB,qBACExzB,MAAO,CACLoE,MAAO,MACPmvB,OAAQ,OACRzX,WAAY,OACZ8N,SAAU,WACV6J,IAAK,IACLC,KAAM,cAIZ,qBAAI1zB,MAAO,CAAEwjB,aAAc,QAA3B,WACIoP,GAAW,OAAGrhB,QAAH,IAAGA,GAAH,UAAGA,EAAU9F,cAAb,aAAG,EAAkB3F,SAAQutB,QAAQ,GADpD,UAxIF,oBAAIrzB,MAAO,CAAE6c,OAAQ,OAAQja,WAAY,KAAzC,mC,oBEuPG+wB,GAxQmC,SAACp0B,GAAW,I3CE/BgR,E2CF8B,EAC/BxO,mBAAyB,IADM,mBACpD+e,EADoD,KAC5Ce,EAD4C,OAG/B9f,mBAAmB,IAHY,mBAGpD0J,EAHoD,KAG5CmoB,EAH4C,OAI3B7xB,mBAA6B,IAJF,mBAIpDoM,EAJoD,KAI1C0lB,EAJ0C,OAML9xB,oBAAS,GANJ,mBAMpD+xB,EANoD,KAM/BC,EAN+B,OAOxBnsB,KAA3BG,EAPmD,EAOnDA,UAAWE,EAPwC,EAOxCA,YAPwC,EAQZuS,GAAUjb,EAAMgR,QAAjDyjB,EAR6C,EAQnD1qB,KAAkBwY,EARiC,EAQjCA,UAAW5X,EARsB,EAQtBA,MAC/B+pB,EAAgB7Z,GAAY,CAChCK,QAASqZ,IAEKpc,G3CVanH,E2CUkBhR,EAAMgR,O3CTrDrI,IAAuB,SAAC2D,GAAD,OAAmBjB,GAAgB2F,EAAQ1E,KAAQ,CACxEvD,WAAY6J,GACZ/J,eAAgB,2BAChBC,aAAc,mB2CMR2Z,OACQnK,E3CjBhB3P,GAAuB0C,GAAiB,CACtCtC,WAAY6J,GACZ/J,eAAgB,+BAChBC,aAAc,kB2CcR2Z,OACQrK,E3C5BhBzP,IACE,mCAAE0P,EAAF,KAAW/L,EAAX,YAAwCjB,GAAgBgN,EAAS/L,KACjE,CACEvD,WAAY6J,GACZ/J,eAAgB,+BAChBC,aAAc,kB2CuBV2Z,OAEFkS,EAAiB,CACrB,CAAE3H,MAAO,OAAQC,WAAY,eAAgBpoB,MAAO,IAAK0oB,UAAU,IASrE,SAASqH,EAAWnc,GAClB,IAAIoc,EAAK,aAAOtT,GAChBsT,EAAMpc,IAAUoc,EAAMpc,GACtB6J,EAAU,aAAIuS,IAGhB,SAASC,IACPN,GAAuB,GAEzB,SAASO,IACPP,GAAuB,GAGzB,SAASQ,EAAuB/uB,GAC9B,IAAMC,EAASD,EAAMC,OACfuS,EAAQvS,EAAO+uB,SACfh3B,EAAOiI,EAAOjI,KACd8H,GAASG,EAAOH,MAEhBmvB,EAAmB,oBAAShpB,QAAT,IAASA,IAAU,IACtCI,EAAQ4oB,EAAUzc,GAExBnM,EAAMrO,IAAS8H,EACfmvB,EAAUzc,GAASnM,EACnB+nB,EAAUa,GA0CZ,SAASC,EAAuB1c,GAC9B,OAAO,SAA4B2c,GACjCL,IACA,IAAMG,EAAS,aAAOhpB,GACtBgpB,EAAUzc,GAAO9I,UAAYylB,EAAWtmB,GACxCulB,EAAU,aAAIa,IAEdpkB,QAAQC,IAAI,CAAEnC,aACdkC,QAAQC,IAAI,CAAE7E,WACd,IAAMsM,EAAW,aAAO5J,GACxB4J,EAAYC,GAAOxa,KAAOm3B,EAAWn3B,KACrCq2B,EAAY,aAAI9b,KAMpB,OAzFA5V,qBAAU,YACE,OAAV6xB,QAAU,IAAVA,OAAA,EAAAA,EAAYvoB,SAAUmoB,EAAUI,EAAWvoB,SACjC,OAAVuoB,QAAU,IAAVA,OAAA,EAAAA,EAAY7lB,WAAY0lB,EAAYG,EAAW7lB,YAE9C,CAAC6lB,IAmFA9pB,GAAOnC,EAAWmC,EAAgBzD,SAElCqb,EAAkB,cAACiC,GAAA,EAAD,CAAkBlkB,UAAWC,KAAOomB,UAGxD,eAACnF,GAAA,EAAD,CAAKlhB,UAAWC,KAAOob,UAAvB,UACE,eAAC6F,GAAA,EAAD,CAAK9gB,QAAQ,OAAOJ,UAAWC,KAAOkrB,kBAAtC,UACE,iDACA,cAAC,GAAD,CAASjqB,KAAK,MAAMJ,MAAM,UAAUP,QAxC1C,SAAkBoF,GAChB,IAAMoT,EAAMnN,EAAO3F,OAUnB8tB,EAAU,GAAD,oBAAKnoB,GAAL,CAT6B,CACpCyD,UAAW,GACX3B,WAAY,EACZC,cAAe,EACfJ,WAAY,EACZC,cAAe,EACfR,cAAe,MAIjBgnB,EAAY,GAAD,oBAAK1lB,GAAL,CAAe,CAAEhD,IAAK,gBAEjCgpB,EAAWvb,SA4BT,cAACmI,GAAA,EAAD,CAAK9gB,QAAQ,OAAO20B,SAAS,OAA7B,gBACGnpB,QADH,IACGA,OADH,EACGA,EAAQzF,KAAI,SAAC6F,EAAOmM,GAAR,6BACX,sBAAKnY,UAAWC,KAAO+0B,eAAvB,UACGf,GAAuBhT,EAAO9I,IAC7B,cAAC,GAAD,CACEwT,eAAgBkJ,EAAuB1c,GACvCsT,MAAO2I,EACP9hB,SAAS,WACTsW,QAASyL,EACT/I,kBAAkB,iBAClBd,SAAS,OACT7sB,KAAK,eACLiK,KAAMqsB,EACNtJ,YAAa8J,EACblK,WAAY,kBAAM2J,GAAuB,MAI7C,sBAAKl0B,UAAWC,KAAOg1B,uBAAvB,UACE,mDAAO3mB,EAAS6J,UAAhB,aAAO,EAAiBxa,YAAxB,QAAgC,iBAC/BsjB,EAAO9I,IAAuC,MAA7B,UAAAvM,EAAOuM,UAAP,eAAe9I,YAC/B,cAAC,GAAD,CACEnO,KAAK,SACLJ,MAAM,UACNP,QAASi0B,IAGZvT,EAAO9I,IAAuC,MAA7B,UAAAvM,EAAOuM,UAAP,eAAe9I,YAC/B,cAAC,GAAD,CACEnO,KAAK,SACLJ,MAAM,UACNP,QAASi0B,OAKf,uBAAMx0B,UAAS,UAAKC,KAAOi1B,sBAA3B,UACE,sBAAKl1B,UAAWC,KAAOk1B,0BAAvB,UACE,qBAAKn1B,UAAWC,KAAOm1B,+BAAvB,SACE,uBAAOC,QAAQ,OAAf,oBAEF,qBAAKr1B,UAAS,UAAKC,KAAOq1B,kCAA1B,SACGrU,EAAO9I,GACN,gCACE,uBACEra,KAAK,OACL62B,SAAUxc,EACVxa,KAAK,aACL0rB,YAAW,OAAErd,QAAF,IAAEA,GAAF,UAAEA,EAAO0B,kBAAT,aAAE,EAAmB6nB,WAChC7vB,SAAUgvB,IAEZ,uBACE52B,KAAK,OACL62B,SAAUxc,EACVxa,KAAK,gBACL0rB,YAAW,OAAErd,QAAF,IAAEA,GAAF,UAAEA,EAAO2B,qBAAT,aAAE,EAAsB4nB,WACnC7vB,SAAUgvB,OAId,8BACGc,KAAKC,MACqB,KAApB,OAALzpB,QAAK,IAALA,OAAA,EAAAA,EAAO2B,eACH,EACC3B,EAAM0B,WAAa1B,EAAM2B,cAAiB,KAJnD,YAYN,sBAAK3N,UAAWC,KAAOk1B,0BAAvB,UACE,qBAAKn1B,UAAWC,KAAOm1B,+BAAvB,SACE,uBAAOC,QAAQ,OAAf,oBAEF,qBAAKr1B,UAAS,UAAKC,KAAOq1B,kCAA1B,SACGrU,EAAO9I,GACN,gCACE,uBACEra,KAAK,OACL62B,SAAUxc,EACVxa,KAAK,aACL0rB,YAAW,OAAErd,QAAF,IAAEA,GAAF,UAAEA,EAAOuB,kBAAT,aAAE,EAAmBgoB,WAChC7vB,SAAUgvB,IAEZ,uBACE52B,KAAK,OACL62B,SAAUxc,EACVxa,KAAK,gBACL0rB,YAAW,OAAErd,QAAF,IAAEA,GAAF,UAAEA,EAAOwB,qBAAT,aAAE,EAAsB+nB,WACnC7vB,SAAUgvB,OAId,8BACGc,KAAKC,MACoB,IAAxBzpB,EAAMwB,cACF,EACCxB,EAAMuB,WAAavB,EAAMwB,cAAiB,KAJnD,YAYN,sBAAKxN,UAAWC,KAAOk1B,0BAAvB,UACE,qBAAKn1B,UAAWC,KAAOm1B,+BAAvB,SACE,uBAAOC,QAAQ,OAAf,uBAEF,qBAAKr1B,UAAS,UAAKC,KAAOq1B,kCAA1B,SACE,8BACGrU,EAAO9I,GACN,uBACEra,KAAK,OACL62B,SAAUxc,EACVxa,KAAK,gBACL0rB,YAAW,OAAErd,QAAF,IAAEA,GAAF,UAAEA,EAAOgB,qBAAT,aAAE,EAAsBuoB,WACnC7vB,SAAUgvB,IAGZ,qCAAI1oB,QAAJ,IAAIA,OAAJ,EAAIA,EAAOgB,cAAX,mBAMV,eAACkU,GAAA,EAAD,CAAK9gB,QAAQ,OAAOsd,eAAe,SAAnC,UACE,cAAC,GAAD,CACE6C,aAAa,iDACbE,UAAW,kBAnMzB,SAAuBtI,GACW,IAAD,GAA/B,OAAIgc,QAAJ,IAAIA,OAAJ,EAAIA,EAAYvoB,OAAOuM,MACrBH,EAAW,OAACmc,QAAD,IAACA,GAAD,UAACA,EAAYvoB,OAAOuM,UAApB,aAAC,EAA2B7M,KACvCgpB,EAAWnc,IAgMgBud,CAAcvd,MAGhC8I,EAAO9I,GACN,cAAC,GAAD,CAASjX,KAAK,OAAOX,QAAS,kBAhM5C,SAAmB4X,GACjB,KACE,OAAIgc,QAAJ,IAAIA,OAAJ,EAAIA,EAAYvoB,OAAOuM,IACrBL,EAAY,QAACqc,QAAD,IAACA,OAAD,EAACA,EAAYvoB,OAAOuM,GAAQgc,EAAWvoB,OAAOuM,MAE1D3H,QAAQC,IAAI7E,EAAQuM,IACpBN,EAAYjM,EAAQuM,KAEtBmc,EAAWnc,GACX,MAAOG,GAAM,IAAD,KACZ,OAAIA,QAAJ,IAAIA,GAAJ,UAAIA,EAAKnO,gBAAT,iBAAI,EAAeV,YAAnB,aAAI,EAAqB7C,QAAQgM,MAAM,eACrCxK,EAAY,8BAqLgCutB,CAAUxd,MAE9C,cAAC,GAAD,CAASjX,KAAK,OAAOX,QAAS,kBAAM+zB,EAAWnc,WAvITA,Y,oBCoHvCyd,GAnP+B,SAACl2B,GAC7C,I7DJAqF,E6DIMjF,EAAUC,cAD4C,EAGhCmC,oBAAS,GAHuB,mBAGrD+e,EAHqD,KAG7Ce,EAH6C,OAIxB9f,qBAJwB,mBAIrD2zB,EAJqD,KAIzCC,EAJyC,KAKpD5tB,EAAcH,KAAdG,UAEFwI,EAAW0b,cAAX1b,OAPsD,EAQnB8C,GAAQ9C,GAAnChT,EAR8C,EAQpD+L,KAAYwY,EARwC,EAQxCA,UAAW5X,EAR6B,EAQ7BA,MACfkH,G7DZhBxM,E6DY6C,CAC3CwD,eAAgB,0BAChBC,aAAc,oBACdE,UAAW4rB,EACX7rB,WAAY,CAAC,OAAQiI,GACrB7H,QAAS,WAAgBQ,GAAhB,uBAAM0sB,GAAN,8BAAC,eACL1sB,GADI,IAEP1L,KAAMo4B,EAAQp4B,KACdC,QAASm4B,EAAQn4B,QACjBC,MAAOk4B,EAAQl4B,MACfC,KAAMZ,IAAa64B,EAAQj4B,MAC3BC,OAAQjB,IAAei5B,EAAQh4B,Y7DrBnCsK,IACE,mCAAEmG,EAAF,KAAM9Q,EAAN,YAAiCqN,GAAeyD,EAAI9Q,KADhC,aAGlB+K,WAAY6J,IACTvN,K6DMCod,OAcQ7Q,E7DhBW,SAACvM,GAAD,OAC3BsD,GAAuB0C,GAAD,aACpBtC,WAAY6J,SACTvN,I6Da0BixB,CAAc,CAC3CztB,eAAgB,gBAChBC,aAAc,oBACdE,UAAW,kBAAM5I,EAAQY,KAAK,WAC9BmI,QAAS,SAAC2F,EAAInF,GAAL,OACPA,EAAawH,QAAO,SAACnT,GAAD,OAAUA,EAAK8Q,KAAOA,QALtC2T,OAYR,SAASmS,IACPtS,GAAWf,GAGb,SAASgV,EAAkBtwB,GACzB,IAAMC,EAASD,EAAMC,OACfjI,EAAOiI,EAAOjI,KAChB8H,EAAQG,EAAOH,MACdywB,MAAMzwB,KAAQA,GAASA,GAE5BqwB,EAAc,2BACTD,GADQ,mBAEVl4B,EAAO8H,KAMZ,OAtBAnD,qBAAU,WACJ5E,GAAMo4B,EAAcr4B,YAAmBC,MAC1C,CAACA,IAkBA2M,GAAOnC,EAAWmC,EAAgBzD,SAElCqb,EAAkB,cAACiC,GAAA,EAAD,CAAkBlkB,UAAWC,KAAOomB,UAGxD,eAACtH,GAAA,EAAD,CAAeta,MAAO4X,GAAtB,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CACE+E,SAAS,QACTiB,SAAS,SACThB,YAAW,iBAAK3jB,QAAL,IAAKA,OAAL,EAAKA,EAAMC,KAAX,mBAAmBD,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAME,aAIxC,eAACsjB,GAAA,EAAD,CAAKlhB,UAAWC,KAAOob,UAAvB,UACE,eAAC6F,GAAA,EAAD,CAAK9gB,QAAQ,OAAOJ,UAAWC,KAAOkrB,kBAAtC,UACE,+CACA,sBAAKnrB,UAAWC,KAAOk2B,0BAAvB,UACE,cAAC,GAAD,CACE5V,aAAY,4CACZE,UAAW,kBAAMnP,EAAWZ,MAE7BuQ,EACC,cAAC,GAAD,CACE/f,KAAK,OACLJ,MAAM,UACNP,QAAS,kBAAMgR,EAAW,CAACb,EAAQmlB,OAGrC,cAAC,GAAD,CAAS30B,KAAK,OAAOJ,MAAM,UAAUP,QAAS+zB,UAKpD,uBAAMt0B,UAAWC,KAAOm2B,eAAxB,UACE,sBAAKp2B,UAAWC,KAAOo2B,oBAAvB,UACE,qBAAKr2B,UAAWC,KAAOq2B,yBAAvB,SACE,uBAAOjB,QAAQ,SAAf,sBAEF,sBACEr1B,UAAS,sCACKC,KAAOs2B,2BADZ,uCAEKt2B,KAAOu2B,oBAFZ,uCAGKvV,GAAUhhB,KAAOw2B,0BAHtB,4BADX,WAOIxV,IAAU,OAAC4U,QAAD,IAACA,OAAD,EAACA,EAAY93B,UAAsB24B,IAAO35B,SACpD,qCACE,uBACEe,KAAK,QACL0Q,GAAG,SACH7Q,KAAK,SACL8H,MAAOixB,IAAO35B,OACd45B,SAAS,OAACd,QAAD,IAACA,OAAD,EAACA,EAAY93B,UAAsB24B,IAAO35B,OACnD2I,SAAUuwB,IAEZ,uBACEj2B,UAAS,UAAKC,KAAO22B,2BACrBvB,QAAQ,SAFV,wBASFpU,IACA,OAAC4U,QAAD,IAACA,OAAD,EAACA,EAAY93B,UAAsB24B,IAAOz5B,WAC1C,qCACE,uBACEa,KAAK,QACL0Q,GAAG,WACH7Q,KAAK,SACL8H,MAAOixB,IAAOz5B,SACd05B,SAAS,OAACd,QAAD,IAACA,OAAD,EAACA,EAAY93B,UAAsB24B,IAAOz5B,SACnDyI,SAAUuwB,IAEZ,uBACEj2B,UAAS,UAAKC,KAAO42B,0BACrBxB,QAAQ,WAFV,0BASFpU,IACA,OAAC4U,QAAD,IAACA,OAAD,EAACA,EAAY93B,UAAsB24B,IAAO15B,WAC1C,qCACE,uBACEc,KAAK,QACL0Q,GAAG,WACH7Q,KAAK,SACL8H,MAAOixB,IAAO15B,SACd25B,SAAS,OAACd,QAAD,IAACA,OAAD,EAACA,EAAY93B,UAAsB24B,IAAO15B,SACnD0I,SAAUuwB,IAEZ,uBACEj2B,UAAS,UAAKC,KAAO62B,4BACrBzB,QAAQ,WAFV,+BAWR,sBAAKr1B,UAAWC,KAAOo2B,oBAAvB,UACE,qBAAKr2B,UAAWC,KAAOq2B,yBAAvB,SACE,uBAAOjB,QAAQ,OAAf,0BAEF,qBAAKr1B,UAAWC,KAAOs2B,2BAAvB,SACGtV,EACC,uBACEnjB,KAAK,OACL0Q,GAAG,OACH7Q,KAAK,OACL0rB,YAAW,OAAE3rB,QAAF,IAAEA,OAAF,EAAEA,EAAMC,KACnB+H,SAAUuwB,IAGZ,mCAAIv4B,QAAJ,IAAIA,OAAJ,EAAIA,EAAMC,YAKhB,sBAAKqC,UAAWC,KAAOo2B,oBAAvB,UACE,qBAAKr2B,UAAWC,KAAOq2B,yBAAvB,SACE,uBAAOjB,QAAQ,WAAf,yBAEF,qBAAKr1B,UAAWC,KAAOs2B,2BAAvB,SACGtV,EACC,uBACEnjB,KAAK,OACL0Q,GAAG,WACH7Q,KAAK,UACL0rB,YAAW,OAAE3rB,QAAF,IAAEA,OAAF,EAAEA,EAAME,QACnB8H,SAAUuwB,IAGZ,mCAAIv4B,QAAJ,IAAIA,OAAJ,EAAIA,EAAME,eAKhB,sBAAKoC,UAAWC,KAAOo2B,oBAAvB,UACE,qBAAKr2B,UAAWC,KAAOq2B,yBAAvB,SACE,uBAAOjB,QAAQ,QAAf,qBAEF,qBAAKr1B,UAAWC,KAAOs2B,2BAAvB,SACGtV,EACC,uBACEnjB,KAAK,OACL0Q,GAAG,QACH7Q,KAAK,QACL0rB,YAAW,OAAE3rB,QAAF,IAAEA,OAAF,EAAEA,EAAMG,MACnB6H,SAAUuwB,IAGZ,mCAAIv4B,QAAJ,IAAIA,OAAJ,EAAIA,EAAMG,aAKhB,sBAAKmC,UAAWC,KAAOo2B,oBAAvB,UACE,qBAAKr2B,UAAWC,KAAOq2B,yBAAvB,SACE,uBAAOjB,QAAQ,OAAf,oBAEF,qBAAKr1B,UAAWC,KAAOs2B,2BAAvB,SACGtV,EACC,yBACEtjB,KAAK,OACL8H,MAAK,OAAEowB,QAAF,IAAEA,OAAF,EAAEA,EAAY/3B,KACnB4H,SAAUuwB,EAHZ,UAKE,wBAAQxwB,MAAOsxB,IAAK55B,UAApB,uBACA,wBAAQsI,MAAOsxB,IAAK35B,YAApB,yBACA,wBAAQqI,MAAOsxB,IAAK15B,OAApB,oBACA,wBAAQoI,MAAOsxB,IAAKz5B,MAApB,sBAGF,4BAAIy5B,IAAI,OAAClB,QAAD,IAACA,OAAD,EAACA,EAAY/3B,mBAM/B,cAAC,GAAD,CAAc4S,OAAQA,QC/OboN,GAjBGjB,cAAW,SAACpY,GAAD,MAAY,CACvC0X,MAAO,CACLL,UAAWrX,EAAMwY,QAAQ,GACzB7c,QAAS,OACTkd,cAAe,SACfjd,WAAY,UAGd2kB,KAAM,CACJzgB,MAAO,OACPuX,UAAWrX,EAAMwY,QAAQ,IAG3BgI,OAAQ,CACNjI,OAAQvY,EAAMwY,QAAQ,EAAG,EAAG,QC4BjB+Z,GAnCiE,SAAC,GAE1E,IADLlX,EACI,EADJA,MAEMhgB,EAAUC,cACV6c,EAAUkB,KAMhB,OACE,gCACE,cAAC,GAAD,IACA,eAAC3Y,GAAA,EAAD,CAAW7D,UAAU,OAAOukB,SAAS,KAArC,UACE,cAACC,GAAA,EAAD,IACA,sBAAK9lB,UAAW4c,EAAQT,MAAxB,UACE,cAAC0F,GAAA,EAAD,CAAYvgB,UAAU,KAAKiG,QAAQ,KAAnC,SACGuY,IAEH,cAACd,GAAA,EAAD,CACElhB,KAAK,SACL8mB,WAAS,EACTrd,QAAQ,YACRzG,MAAM,UACNd,UAAW4c,EAAQqI,OACnB3B,cAAY,YACZ/iB,QApBU,WAElBT,EAAQY,KADA,WAYF,iDCXK,SAASu2B,KACtB,IAAMra,EAAUkB,KACR5V,EAAcH,KAAdG,UAFsC,EAIdhG,mBAAS,IAJK,mBAIvCqjB,EAJuC,KAI7BC,EAJ6B,OAKAtjB,mBAAS,IALT,mBAKvC+kB,EALuC,KAKtBiQ,EALsB,OAMdh1B,oBAAS,GANK,mBAMvCi1B,EANuC,KAM7BC,EAN6B,KAQxCC,EAAY,IAAIC,gBAAgB/sB,OAAOnI,SAASoQ,QAChDvU,EAASo5B,EAAU3sB,IAAI,MACvB6sB,EAAQF,EAAU3sB,IAAI,SAC5B8F,QAAQC,IAAIxS,EAAQs5B,GAEpB,IAAMrP,EAAY,uCAAG,sBAAA/e,EAAA,+EAEX4B,GAAIC,KAAK,sBAAuB,CAAE/M,SAAQs5B,QAAOhS,aAFtC,OAGjB6R,GAAY,GAHK,+CAKjBlvB,EAAU,iDALO,wDAAH,qDASlB,OAAIivB,EAEA,cAAC,GAAD,CAA6BrX,MAAO,oCAItC,gCACE,cAAC,GAAD,IACA,eAAC3a,GAAA,EAAD,CAAW7D,UAAU,OAAOukB,SAAS,KAArC,UACE,cAACC,GAAA,EAAD,IACA,sBAAK9lB,UAAW4c,EAAQT,MAAxB,UACE,cAAC0F,GAAA,EAAD,CAAYvgB,UAAU,KAAKiG,QAAQ,KAAnC,4BAGA,sBAAKvH,UAAW4c,EAAQoI,KAAxB,UACE,eAACiB,GAAA,EAAD,CAAM5K,WAAS,EAAC4B,QAAS,EAAzB,UACE,cAACgJ,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAf,SACE,cAAC,GAAD,CACEzgB,MAAO8f,EACP7f,SAAU,SAAC6Y,GAAD,OAAOiH,EAAYjH,EAAE3Y,OAAOH,QACtC9H,KAAK,WACLqH,MAAM,eACNlH,KAAK,WACLwlB,cAAY,iBAGhB,cAAC2C,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAf,SACE,cAAC,GAAD,CACEzgB,MAAOwhB,EACPvhB,SAAU,SAAC6Y,GAAD,OAAO2Y,EAAmB3Y,EAAE3Y,OAAOH,QAC7C9H,KAAK,kBACLqH,MAAM,uBACNlH,KAAK,WACLwlB,cAAY,qBAIlB,cAACtE,GAAA,EAAD,CACElhB,KAAK,SACL8mB,WAAS,EACTrd,QAAQ,YACRzG,MAAM,UACNd,UAAW4c,EAAQqI,OACnB3B,cAAY,YACZ/iB,QAAS2nB,EAPX,8B,wBC4BGsP,GAxFuC,WACpD,IAAM13B,EAAUC,cAD0C,EAGDwa,KAA3CjM,EAH4C,EAGlD7E,KAAgBwY,EAHkC,EAGlCA,UAAW8B,EAHuB,EAGvBA,WAAY1Z,EAHW,EAGXA,MAoBzCue,EAAU,CACd,CAAE8D,MAAO,OAAQC,WAAY,OAAQpoB,MAAO,IAAK0oB,UAAU,GAC3D,CACEP,MAAO,YACPC,WAAY,aACZpoB,MAAO,IACP0oB,UAAU,EACVwK,eAAgB,SAAClsB,GAAD,OACduE,GAAqBvE,EAAO9F,SAEhC,CACEinB,MAAO,UACPC,WAAY,WACZpoB,MAAO,IACP0oB,UAAU,EACVwK,eAAgB,SAAClsB,GAAD,OACduE,GAAqBvE,EAAO9F,SAEhC,CACEinB,MAAO,aACPC,WAAY,cACZpoB,MAAO,IACP0oB,UAAU,IAId,OACE,eAAC9nB,GAAA,EAAD,CAAWnF,UAAWC,KAAOy3B,eAAgBlW,aAAW,kBAAxD,UACE,cAACsE,GAAA,EAAD,IACA,cAAC,GAAD,CAAYnoB,KAAK,WAAjB,SACE,cAAC,GAAD,CACE0qB,SA7Ca,SAAC5iB,GACpB,IAAM8M,EAAS,sBAAsBqV,KAAKniB,GAAS,KAAO,OAC1D+U,GAAcjI,EAAQ9M,IA4ChB4jB,YAAY,mCAGhB,eAACmD,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,sBAAKrb,UAAWC,KAAO6sB,gBAAvB,UACE,oBAAI9sB,UAAWC,KAAOwsB,aAAtB,6BACA,sBAAMzsB,UAAWC,KAAO03B,UAAWnW,aAAW,cAA9C,SACE,cAAC,GAAD,CAAStgB,KAAK,MAAMJ,MAAM,UAAUP,QA5CvB,WACrBT,EAAQY,KAAK,yBA6CP,sBAAMV,UAAWC,KAAO4tB,aAAxB,SACE,cAAC,GAAD,CACEnoB,SA7DS,SAACD,GACpBgV,GAAahV,IA6DH6nB,aAAa,GACbvoB,QA9CU,CAAC,OAAQ,YAAa,UAAW,qBAkDjD,qBAAK/E,UAAWC,KAAO+sB,MAAvB,SACE,cAACxB,GAAD,CACE7tB,KAxEQ,WAyERirB,QAASA,EACT8C,WA9Da,SAACjiB,GACtB3J,EAAQY,KAAR,oBAA0B+I,EAAK+E,GAA/B,WA8DQ/E,KAAM6E,EACNyV,WAAYA,EACZ9B,UAAWA,EACX5X,MAAOA,a,oBCwKJutB,GAvOK,WAAO,IAAD,IACc11B,mBAAS,IADvB,mBACjB+S,EADiB,KACJ4iB,EADI,OAEY31B,mBAAS,IAFrB,mBAEjB4M,EAFiB,KAELgpB,EAFK,OAGQ51B,mBAAS,IAHjB,mBAGjBiJ,EAHiB,KAGP4sB,EAHO,OAIc71B,mBAAS,IAJvB,mBAIjBwN,EAJiB,KAIJsoB,EAJI,OAKU91B,mBAA2B,IAAIwM,MALzC,mBAKjBD,EALiB,KAKNwpB,EALM,OAMM/1B,mBAA2B,IAAIwM,MANrC,mBAMjBG,EANiB,KAMRqpB,EANQ,OAOwBh2B,mBAAS,IAPjC,mBAOjBi2B,EAPiB,KAOCC,EAPD,KAQlBC,EAAehkB,KARG,EASgBnS,oBAAS,GATzB,mBASjBo2B,EATiB,KASHC,EATG,KAWhB/pB,EAAO4d,cAAP5d,GAXgB,EAYgCkM,GAAWlM,GAArDD,EAZU,EAYhB9E,KAAewY,EAZC,EAYDA,UAAW8B,EAZV,EAYUA,WAAY1Z,EAZtB,EAYsBA,MACxCmuB,ElDnC4B,SAAChqB,GAAD,OAClC0E,aAAS,CAACZ,GAAU9D,IAAK,kBAAMzD,GAAyByD,MkDkCnCiqB,CAAqBjqB,GAC1BmB,ElDhChBtH,IACE,SAAC6Z,GAAD,OAAoCnX,GAAA,MAAAA,EAAG,aAAiBmX,MACxD,CACEzZ,WAAY6J,KkD6BR6P,OACQvS,ElDpBhBvH,GAAuB0C,GAAgB,CACrCtC,WAAY6J,akDmBN6P,OACQtS,ElD1BhBxH,GAAuB0C,GAAmB,CACxCtC,WAAY6J,akDyBN6P,OACAja,EAAcH,KAAdG,UACFpI,EAAUC,cAEhBuC,qBAAU,WAAO,IAAD,IACd81B,EAAmB,oBAACI,EAAa/uB,YAAd,aAAC,EAAmB6F,mBAApB,QAAmC,SACrD,CAACkpB,EAAa/uB,OAEjBnH,qBAAU,WACJiM,IACFspB,EAAetpB,EAAQ5Q,MACvBm6B,EAAcvpB,EAAQO,YACtBipB,EAAYxpB,EAAQpD,UACpB6sB,EAAezpB,EAAQmB,aAAe,IACtCuoB,EACE1pB,EAAQE,UAAY,IAAIC,KAAyB,IAApBH,EAAQE,gBAAoBG,GAE3DspB,EAAW3pB,EAAQM,QAAU,IAAIH,KAAuB,IAAlBH,EAAQM,cAAkBD,MAEjE,CAACL,IAEJ,IAAMmqB,EAAW,uCAAG,4BAAAvvB,EAAA,sDACZwvB,EAA8B,CAClCh7B,KAAMsX,EACNxG,WAAoB,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAW+T,qBAAiB5T,EACvCC,SAAgB,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAAS2T,qBAAiB5T,EACnCc,YAAaA,EACbxE,OAAQC,GAGVqD,EAAKmB,EAAa,CAACnB,EAAImqB,IAAgB/oB,EAAW+oB,GAClDJ,GAAgB,GAVE,2CAAH,qDAaXK,GAAiB,uCAAG,sBAAAzvB,EAAA,sDACxB0G,EAAcrB,GACd1O,EAAQY,KAAK,aAFW,2CAAH,qDA0DjBm4B,GAAqB,SAACta,GAAY,IAAD,EAC/Bua,EAAcva,EAAE3Y,OAAOH,MACvBszB,EAAS,UAAGV,EAAa5uB,YAAhB,aAAG,EAAmByD,MACnC,SAAChC,GAAD,OAAYA,EAAOvN,OAASm7B,KAExBE,EAAgBD,EAAYA,EAAUp7B,KAAO,GAEnDo6B,EAAYe,GACZhB,EAAckB,IAsCVC,GAAc,iBAAG5uB,QAAH,IAAGA,IAASguB,EAAahuB,aAAzB,QAAkCmuB,EAAanuB,MAGnE,OAFI4uB,IAAgB/wB,EAAW+wB,GAAyBryB,SAEpDqb,GAAaoW,EAAapW,WAAauW,EAAavW,UAC/C,cAACiC,GAAA,EAAD,IAELH,GAAcsU,EAAatU,YAAcyU,EAAazU,WACjD,cAAC3B,GAAA,EAAD,IAGP,eAACjd,GAAA,EAAD,CAAWnF,UAAWC,KAAOy3B,eAAgBlW,aAAW,iBAAxD,UACE,cAACsE,GAAA,EAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,CACE1E,SAAS,WACTiB,SAAS,YACThB,YAAapM,MAGjB,eAACuX,GAAA,EAAD,CAAOxsB,UAAWC,KAAOob,UAAzB,UACE,sBAAKrb,UAAWC,KAAO6sB,gBAAvB,UACE,oBAAI9sB,UAAWC,KAAOwsB,aAAtB,4BACA,sBAAKzsB,UAAWC,KAAOi5B,gBAAvB,UACE,sBAAMl5B,UAAWC,KAAOk5B,aAAc3X,aAAW,iBAAjD,SAjCNhT,IACC8pB,GACC,cAAC,GAAD,CACE/X,aAAa,gDACbE,UAAWmY,OA5FVN,EACL,sBACE/3B,QAASm4B,EACT14B,UAAWC,KAAOm5B,WAClB5X,aAAW,eAHb,SAKE,cAAC,GAAD,CACEtgB,KAAK,OACLJ,MAAM,UACNP,QAAS,kBAAMg4B,GAAgB,QAInC,sBAAMv4B,UAAWC,KAAOo5B,WAAY7X,aAAW,eAA/C,SACE,cAAC,GAAD,CACEtgB,KAAK,OACLJ,MAAM,UACNP,QAAS,kBAAMg4B,GAAgB,cA8GjC,sBAAKv4B,UAAWC,KAAOq5B,kBAAvB,UAvGGhB,EACL,sBAAKt4B,UAAWC,KAAOs5B,qBAAvB,UACE,cAACj0B,GAAA,EAAD,2BACA,cAAC,GAAD,CACEG,MAAOwP,EACPvP,SAAU,SAAC6Y,GAAD,OAAOsZ,EAAetZ,EAAE3Y,OAAOH,aAI7C,uBAAMzF,UAAWC,KAAOu5B,cAAxB,cAAyCvkB,EAAzC,OA8BiB,WAAO,IAAD,EACzB,OAAOqjB,EACL,sBAAKt4B,UAAWC,KAAOw5B,gBAAvB,UACE,cAACn0B,GAAA,EAAD,4BACA,eAACC,GAAA,EAAD,CACEgC,QAAQ,WACRvH,UAAWC,KAAOoF,OAClBI,MAAO0F,EACPzF,SAAUmzB,GAJZ,UAME,cAACzyB,GAAA,EAAD,CAAU6Y,UAAQ,EAAlB,2BANF,UAOGoZ,EAAa5uB,YAPhB,aAOG,EAAmBtD,KAAI,SAAC+E,GAAD,OACtB,cAAC9E,GAAA,EAAD,CAAUX,MAAOyF,EAAOI,IAAxB,SACGJ,EAAOvN,MADwBuN,EAAOI,cAO/C,uBAAMtL,UAAWC,KAAOy5B,aAAxB,cAAwC5qB,KA+CnC6qB,GA3FArB,EACL,sBAAKt4B,UAAWC,KAAO25B,qBAAvB,UACE,cAACt0B,GAAA,EAAD,0BACA,cAAC,GAAD,CACEG,MAAOiK,EACPhK,SAAU,SAAC6Y,GAAD,OAAOyZ,EAAezZ,EAAE3Y,OAAOH,QACzC+Y,WAAW,OAIf,kDAAqB9O,EAArB,UAoFE,sBAAK1P,UAAWC,KAAO45B,kBAAvB,UACE,sBAAK75B,UAAWC,KAAO65B,sBAAvB,UACE,4CACA,mDAEF,sBAAK95B,UAAWC,KAAO85B,mBAAvB,UACE,wCACA,qBAAK/5B,UAAWC,KAAO+5B,6BAAvB,SACE,eAAC,KAAD,CAAyBvb,MAAOC,KAAhC,UACE,cAACC,GAAA,EAAD,CACEC,gBAAiB0Z,EACjBrZ,UAAWqZ,EACX/wB,QAAQ,SACRsX,OAAO,aACP7Z,MAAM,aACN8Z,aAAa,WACbrZ,MAAOgJ,EACP/I,SAAU,SAAC6Y,GAAD,OAAO0Z,EAAa1Z,QAAK3P,MAErC,cAAC+P,GAAA,EAAD,CACEC,gBAAiB0Z,EACjBrZ,UAAWqZ,EACX/wB,QAAQ,SACRsX,OAAO,aACP7Z,MAAM,WACN8Z,aAAa,WACbmb,QAAM,EACNx0B,MAAOoJ,EACPnJ,SAAU,SAAC6Y,GAAD,OAAO2Z,EAAW3Z,QAAK3P,cAKzC,sBAAK5O,UAAWC,KAAOi6B,oBAAvB,UACE,oDACA,4BAAI/B,iB,oBCtGD30B,GA/IG,WAAO,IAAD,IACgBtB,mBAAS,IADzB,mBACfi4B,EADe,KACFC,EADE,OAEgBl4B,mBAAS,IAFzB,mBAEfm4B,EAFe,KAEFC,EAFE,OAG0Bp4B,oBAAS,GAHnC,mBAGfq4B,EAHe,KAGGC,EAHH,OAIwBt4B,oBAAS,GAJjC,mBAIfu4B,EAJe,KAIEC,EAJF,KAKdxyB,EAAcH,KAAdG,UACFwI,EAAM,UAAGxS,aAAaC,QAAQ,aAAxB,QAAiC,GANvB,EAOmBsV,GAAU,CACjDmH,UAAWlK,IADChT,EAPQ,EAOd+L,KAAYwY,EAPE,EAOFA,UAAW5X,EAPT,EAOSA,MAIzB6d,EAAY,uCAAG,4BAAA/e,EAAA,6DACbqF,EAAKtQ,aAAaC,QAAQ,MADb,kBAGX4M,GAAIC,KAAK,uBAAwB,CACrCwD,KACA2rB,cACAE,gBANe,OAQjBK,GAAmB,GARF,gDAUjBlqB,QAAQC,IAAR,MACAvI,EAAU,4CAXO,yDAAH,qDAelB,OAAImC,EAAc,qBAAKrK,UAAWC,KAAOoK,MAAvB,qCAEd4X,IAAcvkB,EAAa,cAACwmB,GAAA,EAAD,CAAkBlkB,UAAWC,KAAOomB,UAE/DkU,IAAqBE,EAErB,qBAAKz6B,UAAWC,KAAOyqB,MAAvB,SACE,sBAAK1qB,UAAWC,KAAO06B,aAAvB,UACE,iFACA,eAAC1U,GAAA,EAAD,CAAM5K,WAAS,EAAC4B,QAAS,EAAGjd,UAAWC,KAAO26B,cAA9C,UACE,cAAC3U,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAf,SACE,cAAC,GAAD,CACEzgB,MAAO00B,EACPz0B,SAAU,SAAC6Y,GAAD,OAAO6b,EAAe7b,EAAE3Y,OAAOH,QACzC9H,KAAK,WACLqH,MAAM,eACNlH,KAAK,WACLwlB,cAAY,iBAGhB,cAAC2C,GAAA,EAAD,CAAMtT,MAAI,EAACuT,GAAI,GAAf,SACE,cAAC,GAAD,CACEzgB,MAAO40B,EACP30B,SAAU,SAAC6Y,GAAD,OAAO+b,EAAe/b,EAAE3Y,OAAOH,QACzC9H,KAAK,kBACLqH,MAAM,eACNlH,KAAK,WACLwlB,cAAY,qBAIlB,cAACtE,GAAA,EAAD,CACElhB,KAAK,SACL8mB,WAAS,EACTrd,QAAQ,YACRzG,MAAM,UACN0N,GAAIvO,KAAO46B,mBACXvX,cAAY,YACZ/iB,QAAS2nB,EAPX,kBAWA,8BACE,cAAClJ,GAAA,EAAD,CACExQ,GAAIvO,KAAO66B,YACXv6B,QAAS,kBAAMi6B,GAAqBD,IAFtC,2BAWNA,GAAoBE,EAEpB,qBAAKz6B,UAAWC,KAAOyqB,MAAvB,SACE,sBAAK1qB,UAAWC,KAAO06B,aAAvB,UACE,mEACA,8BACE,cAAC3b,GAAA,EAAD,CACExQ,GAAIvO,KAAO86B,cACXx6B,QAAS,WACPi6B,GAAqBD,GACrBG,GAAmB,IAJvB,qCAeR,sBAAK16B,UAAWC,KAAO+6B,mBAAvB,UACE,cAAC,GAAD,CAAYr9B,KAAK,eAEjB,sBAAKqC,UAAWC,KAAOg7B,4BAAvB,UACE,sBAAKj7B,UAAWC,KAAOi7B,wBAAvB,UACE,wCACA,2CACA,oDACA,0CACA,yCACA,uBACA,uBACA,qDAEF,sBAAKl7B,UAAWC,KAAOk7B,yBAAvB,UACE,8BAAMz9B,EAAKC,OACX,8BAAMD,EAAKE,UACX,8BACE,cAAC,GAAD,CAAiBE,KAAMJ,EAAKI,SAE9B,8BACE,cAAC,GAAD,CAAaC,OAAQL,EAAKK,WAE5B,8BAAML,EAAKG,QACX,uBACA,uBACA,8BACE,cAACmhB,GAAA,EAAD,CACExQ,GAAIvO,KAAO2jB,WACXrjB,QAAS,WACPi6B,GAAqBD,IAHzB,gCAiBNa,GAAc,SAAC17B,GACnB,OAAqB,IAAjBA,EAAM3B,OACD,uBAAOiC,UAAWC,KAAO22B,0BAAzB,oBACiB,IAAjBl3B,EAAM3B,OACN,uBAAOiC,UAAWC,KAAO42B,yBAAzB,sBAEA,uBAAO72B,UAAWC,KAAO62B,2BAAzB,uBAGLuE,GAAkB,SAAC37B,GACvB,OAAmB,IAAfA,EAAM5B,KAEN,uBAAOkC,UAAWC,KAAO22B,0BAAzB,yBAEoB,IAAfl3B,EAAM5B,KACN,uBAAOkC,UAAWC,KAAO42B,yBAAzB,oBACG,uBAAO72B,UAAWC,KAAO62B,2BAAzB,oB,qBCtGCwE,GAtD6C,WAC1D,IAAMx7B,EAAUC,cADgD,EAEJsV,KAA9CkmB,EAFkD,EAExD9xB,KAAmBwY,EAFqC,EAErCA,UAAW5X,EAF0B,EAE1BA,MAAO0Z,EAFmB,EAEnBA,WACrC7b,EAAcH,KAAdG,UAsBR,OAFImC,GAAOnC,EAAWmC,EAAgBzD,SAElCqb,EAAkB,cAACG,GAAA,EAAD,IACjBmZ,EAGH,eAACxc,GAAA,EAAD,CAAeta,MAAO4X,GAAtB,UACE,cAAC,GAAD,CAAY1e,KAAK,aACjB,eAACujB,GAAA,EAAD,CAAKlhB,UAAWC,KAAOob,UAAvB,UACE,eAAC6F,GAAA,EAAD,CAAK9gB,QAAQ,OAAOJ,UAAWC,KAAOkrB,kBAAtC,UACE,6DACA,qBAAKnrB,UAAWC,KAAOk2B,0BAAvB,SACE,cAAC,GAAD,CAASj1B,KAAK,MAAMJ,MAAM,UAAUP,QAjB9C,SAAyBge,GAEvBze,EAAQY,KADE,wBAmBN,qBAAKV,UAAWC,KAAOu7B,cAAvB,SACE,cAAChQ,GAAD,CACE7tB,KAAK,GACLirB,QApCM,CACd,CAAE8D,MAAO,cAAenoB,MAAO,IAAKooB,WAAY,gBAChD,CAAED,MAAO,cAAenoB,MAAO,IAAKooB,WAAY,eAChD,CAAED,MAAO,YAAanoB,MAAO,IAAKooB,WAAY,cAC9C,CAAED,MAAO,UAAWnoB,MAAO,IAAKooB,WAAY,aAiCpCjB,WA9BV,SAAyBngB,EAAagT,GACpC,IAAMkd,EAAoBlwB,EAAOqgB,IAAIpd,GAC/BxN,EAAI,mBAAey6B,GACzB37B,EAAQY,KAAKM,IA4BLihB,UAAWA,EACX5X,MAAOA,EACPZ,KAAM8xB,EACNxX,WAAYA,YApBG,4C,qBC6BZ2X,GAtDO,SAACh8B,GACrB,OACE,sBAAKM,UAAWC,KAAO07B,gBAAvB,UACE,qBACE37B,UACEN,EAAMk8B,SACF37B,KAAO47B,2BACP57B,KAAO67B,qBAJf,SAOE,uBAAOzG,QAAS31B,EAAMq8B,UAAtB,SAAkCr8B,EAAMq8B,cAG1C,qBACE/7B,UACEN,EAAMk8B,SAAN,UACO37B,KAAO+7B,uBADd,YACwC/7B,KAAOg8B,8BAC3Ch8B,KAAO+7B,uBAJf,UAOGt8B,EAAMuhB,SAAU,OAACvhB,QAAD,IAACA,OAAD,EAACA,EAAOk8B,YAAY,OAACl8B,QAAD,IAACA,OAAD,EAACA,EAAOw8B,aASzCx8B,EAAMuhB,SAAN,OAAgBvhB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOk8B,UACzB,0BACEptB,GAAI9O,EAAMy8B,QACVx+B,KAAM+B,EAAMq8B,UACZt2B,MAAO/F,EAAM08B,WACb/S,YAAa3pB,EAAM2pB,YACnB3jB,SAAUhG,EAAMgG,WAEhBhG,EAAMuhB,SAAN,OAAgBvhB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOw8B,aACzB,eAAChb,GAAA,EAAD,CAAK9gB,QAAQ,OAAb,UACE,oBAAGD,MAAO,CAAEyd,YAAa,QAAzB,cAAqCle,EAAM08B,WAA3C,OACA,cAAC,GAAD,CACEl7B,KAAMxB,EAAM28B,SAAW,OAAS,SAChCv7B,MAAM,UACNP,QAASb,EAAMw8B,iBAInB,kCAAKx8B,EAAM08B,WAAX,OA1BA,uBACEt+B,KAAK,OACL0Q,GAAI9O,EAAMy8B,QACVx+B,KAAM+B,EAAMq8B,UACZt2B,MAAO/F,EAAM08B,WACb/S,YAAa3pB,EAAM2pB,YACnB3jB,SAAUhG,EAAMgG,iBCxBb42B,GAX+B,SAAC,GAAgC,IAA9B7gB,EAA6B,EAA7BA,SAAa8gB,EAAgB,6BAC5E,OACE,gCACE,cAAC,GAAD,UACE,cAAC,GAAD,eAAoBA,MAErB9gB,M,qBCgBD+gB,GAAgB,CACpBlxB,IAAK,GACLoE,YAAa,GACbJ,YAAa,GACb4G,WAAY,GACZ7G,UAAW,GACX4F,YAAa,IAuMAwnB,GApMgB,SAAC/8B,GAAwC,IAC9DsV,EAAcoX,cAAdpX,UACFlV,EAAUC,cAFqD,EAIzCmC,oBAAS,GAJgC,mBAI9D+e,EAJ8D,KAItDe,EAJsD,OAKrC9f,oBAAS,GAL4B,mBAK9Dm6B,EAL8D,KAKpDK,EALoD,OAMvCx6B,mBAAsBs6B,IANiB,mBAM9DptB,EAN8D,KAMrD4H,EANqD,KAO7D9O,EAAcH,KAAdG,UAP6D,EjErBrEG,GAAuB+M,GAAkB,CACvC3M,WAAY6J,GACZ5J,UAAW,YAAgD,IAAD,IAA5Ce,KAAQ6B,EAAoC,EAApCA,IAAK+D,EAA+B,EAA/BA,UAAWC,EAAoB,EAApBA,YACpCxG,GAAYU,aAAa8I,YAAgB,SAACqqB,GACxC,OAAKA,GAAeC,MAAMC,QAAQF,GAE3BA,EAAWx2B,KAAI,SAACiJ,GACrB,OAAIA,EAAQZ,KAAOlD,EAAY8D,EAExB,CACLZ,GAAIlD,EACJ2J,YAAa5F,EAAU1R,KACvB0R,UAAWA,EAAU/D,IACrBgE,cACAb,UAAW,IAAIC,KAAKW,EAAUZ,WAAWwB,qBACzCpB,QAAS,IAAIH,KAAKW,EAAUR,SAASoB,yBAXa0sB,QiE0BlDG,EAT2D,EASnE3a,OACW4a,EAVwD,EAUnEC,UAEcC,EjEVhB50B,GAAuB8M,GAAkB,CACvC1M,WAAY6J,aiESN6P,OAZ6D,EjEOrE9Z,GAAuB6M,GAAkB,CACvCzM,WAAY6J,aiEMJ4qB,EAd2D,EAcnE/a,OACWgb,EAfwD,EAenEH,UAfmE,EAiBlB1nB,GAAWN,EAAW,CACvE4F,UAAW5F,IADCooB,EAjBuD,EAiB7D3zB,KAAsBY,EAjBuC,EAiBvCA,MAAO4X,EAjBgC,EAiBhCA,UAGrC5M,KApBqE,MAsBfnT,oBAAS,GAtBM,mBAsB9D+xB,EAtB8D,KAsBzCC,EAtByC,KAuB/DE,EAAgB7Z,GAAY,CAChCK,QAASqZ,IAgCX,SAASgC,EAAkBtwB,GAA6C,IAAD,EACzCA,EAAM03B,cAA1B53B,EAD6D,EAC7DA,MAAW9H,EADkD,EACtD6Q,GAEfwI,EAAW,2BACN5H,GADK,mBAEPzR,EAAO8H,KAlCZnD,qBAAU,WAAO,IAAD,KACd,OAAI5C,QAAJ,IAAIA,GAAJ,UAAIA,EAAOkT,aAAX,iBAAI,EAAc5R,YAAlB,aAAI,EAAoB4R,MAAM,UAC5B8pB,GAAY,GACZ1a,GAAU,MAGX,IAEH1f,qBAAU,YACJ66B,GAAyBJ,IAC3Bj9B,EAAQY,KAAK,eAEd,CAACy8B,EAAuBJ,EAAuBj9B,IAElDwC,qBAAU,WACR,GAAI86B,EAAgB,CAAC,IACX/tB,EAA8B+tB,EAA9B/tB,UAAWb,EAAmB4uB,EAAnB5uB,GAAOY,EADR,aACoBguB,EADpB,oBAElBpmB,EAAW,aACT1L,IAAKkD,EACLa,aACGD,OAGN,CAACguB,IA+CJ,IAAM/I,EAAiB,CACrB,CAAE3H,MAAO,OAAQnoB,MAAO,IAAKooB,WAAY,gBACzC,CACED,MAAO,YACPnoB,MAAO,IACPooB,WAAY,aACZM,UAAU,EACVwK,eAAgB,SAAClsB,GAAD,OACduE,GAAqBvE,EAAO9F,SAEhC,CACEinB,MAAO,UACPnoB,MAAO,IACPooB,WAAY,WACZM,UAAU,EACVwK,eAAgB,SAAClsB,GAAD,OACduE,GAAqBvE,EAAO9F,UAMlC,OAFI4E,GAAOnC,EAAWmC,EAAgBzD,SAElCqb,EAAkB,cAACG,GAAA,EAAD,IAGpB,cAAC,GAAD,CAAYhB,SAAU,WAAYC,YAAW,OAAEjS,QAAF,IAAEA,OAAF,EAAEA,EAASE,YAAxD,SACE,eAAC4R,GAAA,EAAD,CAAKlhB,UAAWC,KAAOob,UAAvB,UACE,eAAC6F,GAAA,EAAD,CAAK9gB,QAAQ,OAAOJ,UAAWC,KAAOkrB,kBAAtC,UACE,kDACA,sBAAKnrB,UAAWC,KAAOk2B,0BAAvB,UACE,cAAC,GAAD,CACE5V,aAAa,+CACbE,UAtDZ,WACO4b,GAAUY,EAAc7tB,EAAQ9D,KAErCxL,EAAQY,KAAK,gBAqDJugB,EACC,cAAC,GAAD,CAAS/f,KAAK,OAAOJ,MAAM,UAAUP,QAnEjD,WAAuB,IACb+K,EAAmC8D,EAAnC9D,IAAqBgyB,GAAcluB,EAA9B6F,YADO,aACuB7F,EADvB,wBAEhBitB,GACFa,EAAWI,GACXZ,GAAY,IAEZI,EAAc,2BAAKQ,GAAN,IAAiBhyB,YA+DtB,cAAC,GAAD,CAASpK,KAAK,OAAOJ,MAAM,UAAUP,QAlFjD,WACEyhB,GAAWf,YAqFP,uBAAMjhB,UAAS,UAAKC,KAAOs9B,WAAZ,YAA0Bt9B,KAAOmrB,iBAAhD,UACE,cAAC,GAAD,CACEnK,OAAQA,EACR8a,UAAW,QACXI,QAAS,cACTC,WAAYhtB,EAAQE,YACpB+Z,YAAaja,EAAQE,aAAe,uBACpC5J,SAAUuwB,IAGZ,cAAC,GAAD,CACEhV,OAAQA,EACRob,SAAUA,EACVN,UAAW,gBACXI,QAAS,eACTC,WAAYhtB,EAAQ6F,YACpBinB,YAzEV,WACEhI,GAAuB,MA2EhBD,GAAuBhT,GACtB,cAAC,GAAD,CACE0K,eAvEZ,SAAgCpd,GAH9B2lB,GAAuB,GAKvBld,EAAW,2BACN5H,GADK,IAERC,UAAWd,EAAQC,GACnByG,YAAa1G,EAAQ5Q,SAmEb8tB,MAAO2I,EACP9hB,SAAS,WACTsW,QAASyL,EACT/I,kBAAkB,iBAClBd,SAAS,OACT7sB,KAAK,eACLiK,KAAMqsB,EACNtJ,YAAa,kBAAMuJ,GAAuB,IAC1C3J,WAAY,kBAAM2J,GAAuB,MAI7C,cAAC,GAAD,CACEjT,OAAQA,EACR8a,UAAW,OACXI,QAAS,aACTC,WAAYhtB,EAAQ8G,WACpBmT,YAAaja,EAAQ8G,YAAc,6BACnCxQ,SAAUuwB,IAGZ,cAAC,GAAD,CACEhV,OAAQA,EACR8a,UAAW,eACXI,QAAS,cACTC,WAAYhtB,EAAQM,YACpB2Z,YAAaja,EAAQM,aAAe,2BACpChK,SAAUuwB,EACV2F,UAAU,a,yCCjJP4B,GAlEiC,SAAC99B,GAAW,IAAD,EACjB2V,KAA1BlG,EAD2C,EACjD1F,KAAmBg0B,EAD8B,2BAEjBv7B,mBAAS,IAFQ,mBAElDw7B,EAFkD,KAEpCC,EAFoC,KAkBnDC,EACJzuB,GACAA,EAAS0B,QACP,SAACgtB,GAAD,OACEA,EAAEvuB,YAAYwuB,cAAcrM,SAASiM,EAAaI,gBAClDD,EAAE5oB,YAAY6oB,cAAcrM,SAASiM,EAAaI,kBAExD,OACE,cAAC,KAAD,CAAkBr5B,MAAO4X,GAAzB,SACE,cAACoO,GAAA,EAAD,CACE/K,kBAAgB,yBAChBC,mBAAiB,+BACjB3f,UAAWC,KAAOyqB,MAClB9iB,KAAMlI,EAAMoH,OACZgB,QAASpI,EAAMirB,YACfC,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,KATb,SAYE,cAACC,GAAA,EAAD,CAAMC,GAAIxrB,EAAMoH,OAAhB,SACE,sBAAK9G,UAAWC,KAAOob,UAAvB,UACE,qBAAKrb,UAAWC,KAAOkrB,kBAAvB,SACE,oDAGF,sBAAKnrB,UAAWC,KAAOmrB,gBAAvB,UACE,qBAAKprB,UAAWC,KAAOorB,wBAAvB,SACE,cAAC,GAAD,CAAahD,SAvCV,SAAC1qB,GAChBggC,EAAgBhgC,IAsC6B0rB,YAAY,qBAE/C,qBAAKrpB,UAAWC,KAAOsrB,uBAAvB,SACE,cAACC,GAAD,aACE7tB,KAAK,WACLirB,QAxCA,CACd,CAAE8D,MAAO,cAAenoB,MAAO,IAAKooB,WAAY,gBAChD,CAAED,MAAO,cAAenoB,MAAO,IAAKooB,WAAY,gBAChD,CAAED,MAAO,YAAanoB,MAAO,IAAKooB,WAAY,cAC9C,CAAED,MAAO,UAAWnoB,MAAO,IAAKooB,WAAY,aAqC9BjB,WAjDO,SAACngB,GACtB7L,EAAMq+B,mBAAmBxyB,EAAOqgB,MAiDlBniB,KAAMm0B,GACFH,mB,qBCxDPO,GATqC,SAAC,GAAwB,IAAtBrgC,EAAqB,EAArBA,KAAM8d,EAAe,EAAfA,SAC3D,OACE,sBAAKzb,UAAWC,KAAOob,UAAvB,UACE,qBAAKrb,UAAWC,KAAOtC,KAAvB,SAA8BA,IAC9B,qBAAKqC,UAAWC,KAAOwF,MAAvB,SAA+BgW,QCExBwiB,GAAep/B,YAAY,CACtClB,KAAM,cACNmB,aANiC,CACjCo/B,YAAY,GAMZj/B,SAAU,CACRk/B,eAAgB,SAACh/B,GACfA,EAAM++B,YAAc/+B,EAAM++B,eAKxBC,GAAmBF,GAAaz+B,QAAhC2+B,eACFC,GAAqB,SAACj/B,GAAD,OAAsBA,EAAMk/B,aAE1CC,GAAa,WACxB,IAAMz+B,EAAWpB,cACTy/B,EAAev/B,YAAYy/B,IAA3BF,WAQR,OANA57B,qBAAU,WACR,OAAO,WACD47B,GAAYr+B,EAASs+B,OAE1B,CAACt+B,EAAUq+B,IAEP,CACLA,aACAC,eAAgB,kBAAMt+B,EAASs+B,SAGpBF,MAAf,QCPeM,GAbiC,WAAO,IAC7CC,EAAkBpS,cAAlBoS,cAD4C,EAEhBt8B,mBAASs8B,GAFO,mBAE7C7R,EAF6C,KAEjC8R,EAFiC,KAGpD,OACE,cAAC,GAAD,CAAYrd,SAAU,gBAAiBC,YAAasL,EAApD,SACE,cAAC,GAAD,CACE6R,cAAeA,EACfE,UAAWD,OAQbE,GAAqB,SAAC,GAMrB,IxBlCiBnwB,EwB6BtBgwB,EAKI,EALJA,cACAE,EAII,EAJJA,UAII,GxBlCkBlwB,EwBmC8BgwB,ExBlC7CtrB,aAAS,CAACyb,GAAengB,IAAK,kBAAMzD,GAAmByD,OwBkCtDyT,EADJ,EACIA,UAAW2c,EADf,EACeA,QAASn1B,EADxB,EACwBA,KACpBy0B,EAAeI,KAAfJ,WAMR,OAJA57B,qBAAU,WAAO,IAAD,EACdo8B,EAAS,iBAACj1B,QAAD,IAACA,OAAD,EAACA,EAAM6F,mBAAP,QAAsBkvB,KAC9B,CAAC/0B,EAAMi1B,EAAWF,IAEjBvc,EAAkB,cAACG,GAAA,EAAD,IAClBwc,IAAYn1B,EAAa,4CAEzBy0B,EAAmB,cAAC,GAAD,eAA4Bz0B,IAE5C,cAAC,GAAD,eAA2BA,KAG9Bo1B,GAAyB,SAACn/B,GAA+B,IAAD,cxB/CRiJ,EwBgD9C7I,EAAUC,cACRo+B,EAAmBG,KAAnBH,eAEFW,ExBlDWz2B,GAAuB0C,GAAuB,CAC7DxC,eAAgB,yCAChBC,aAAc,2DACdC,WAAYkmB,GACZhmB,UACAD,UwB6CyCy1B,IxB3C3Bhc,OwB4CV4c,ExB7BqB,SAACr2B,EAAwBC,GAQpD,OAPiBN,GAAuB0C,GAAuB,CAC7DxC,eAAgB,kDAChBC,aAAc,sDACdC,WAAYkmB,GACZhmB,UACAD,cAEcyZ,OwBqBM6c,CAAqBb,GALiB,EAOtBj8B,mBAASxC,EAAM4P,aAPO,mBAOrDA,EAPqD,KAOxC2vB,EAPwC,OAQxB/8B,mBAASxC,EAAMwW,YARS,mBAQrDA,EARqD,KAQzCgpB,EARyC,OASfh9B,mBAASxC,EAAMgQ,aATA,mBASrDA,EATqD,KASxCyvB,EATwC,OAU9Bj9B,mBAAQ,OAACxC,QAAD,IAACA,OAAD,EAACA,EAAOkZ,iBAVc,mBAUrDxJ,EAVqD,KAU5C4H,EAV4C,OAWN9U,oBAAS,GAXH,mBAWrD+xB,EAXqD,KAWhCC,EAXgC,KAatDO,EAAqB,WACzBP,GAAuB,IAMnBne,EAAU,8BAAMrW,EAAMma,cAAZ,aAAM,EAAc/D,OAAOnY,YAA3B,QAAmC,GAAnC,gCACd+B,EAAMma,cADQ,aACd,EAAc/D,OAAOlY,eADP,QACkB,IAGlC,OACE,sBAAKoC,UAAWC,KAAOm/B,qBAAvB,UACE,sBAAKp/B,UAAWC,KAAOo/B,kBAAvB,UACE,sBAAMr/B,UAAWC,KAAOq/B,sBAAxB,iCAIA,cAAC,GAAD,CACEp+B,KAAM,SACNqf,aAAa,wCACbC,eAAe,cACfC,UAAW0d,IAEb,cAAC,GAAD,CACE5d,aAAa,6CACbE,UAAW,WACTqe,EAAcp/B,EAAM4L,KACpBxL,EAAQ4hB,YAGZ,cAAC,GAAD,CACExgB,KAAM,OACNX,QAAS,WAAO,IAAD,EACbw+B,EAAc,CACZzzB,IAAK5L,EAAM4L,IACXuO,OAAM,UAAEna,EAAMma,cAAR,aAAE,EAAcvO,IACtBgE,cACA4G,aACAxG,cACAkJ,gBAAe,OAAExJ,QAAF,IAAEA,OAAF,EAAEA,EAAS9D,YAKlC,sBAAKtL,UAAWC,KAAOg7B,4BAAvB,UACE,cAAC,GAAD,CAAet9B,KAAM,QAArB,SACE,uBACEqC,UAAWC,KAAO4F,MAClBJ,MAAO6J,EACP5J,SAAU,SAAC6Y,GAAD,OAAO0gB,EAAe1gB,EAAE3Y,OAAOH,YAG7C,cAAC,GAAD,CAAe9H,KAAM,qBAArB,SACE,sBAAKwC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAA3C,UACE,6CAAI+O,QAAJ,IAAIA,OAAJ,EAAIA,EAASE,mBAAb,QAA4B,KAC5B,cAAC,GAAD,CACEpO,KAAM,yBACNX,QAvDc,WACxB2zB,GAAuB,WA0DnB,cAAC,GAAD,CAAev2B,KAAM,eAArB,SACE,4BAAIoY,MAEN,cAAC,GAAD,CAAepY,KAAM,gBAArB,SACE,6CAAIyR,QAAJ,IAAIA,GAAJ,UAAIA,EAASC,iBAAb,aAAI,EAAoB1R,YAAxB,QAAgC,OAElC,cAAC,GAAD,CAAeA,KAAM,eAArB,SACE,uBACEqC,UAAWC,KAAO4F,MAClBJ,MAAOyQ,EACPxQ,SAAU,SAAC6Y,GAAD,OAAO2gB,EAAc3gB,EAAE3Y,OAAOH,YAG5C,cAAC,GAAD,CAAe9H,KAAM,eAArB,SACE,0BACEqC,UAAWC,KAAOs/B,SAClB95B,MAAOiK,EACPhK,SAAU,SAAC6Y,GAAD,OAAO4gB,EAAsB5gB,EAAE3Y,OAAOH,eAKtD,cAAC,GAAD,CACE+5B,kBAAiB,OAAEpwB,QAAF,IAAEA,OAAF,EAAEA,EAAS9D,IAC5ByyB,mBAAkB,uCAAE,WAAOnS,GAAP,SAAAziB,EAAA,yDACbiG,EADa,iDAElB4H,EAAW,2BACN5H,GADK,IAER9D,IAAKsgB,EAAIpd,GACTc,YAAasc,EAAItc,YACjBD,UAAU,2BACLD,EAAQC,WADJ,IAEPb,GAAIod,EAAIvc,UACR1R,KAAMiuB,EAAI3W,iBAGdwf,IAZkB,2CAAF,sDAclB3tB,OAAQmtB,EACRtJ,YAAa8J,QAMfgL,GAAwB,SAAC//B,GAA+B,IAAD,cACnDy+B,EAAmBG,KAAnBH,eAER,OACE,sBAAKn+B,UAAWC,KAAOm/B,qBAAvB,UACE,sBAAKp/B,UAAWC,KAAOo/B,kBAAvB,UACE,sBAAMr/B,UAAWC,KAAOq/B,sBAAxB,iCAGA,cAAC,GAAD,CAASp+B,KAAM,OAAQX,QAAS49B,OAGlC,sBAAKn+B,UAAWC,KAAOg7B,4BAAvB,UACE,cAAC,GAAD,CAAet9B,KAAM,QAArB,SACE,mCAAI+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAO4P,gBAEb,cAAC,GAAD,CAAe3R,KAAM,qBAArB,SACE,mCAAI+B,QAAJ,IAAIA,GAAJ,UAAIA,EAAOkZ,uBAAX,aAAI,EAAwBtJ,gBAE9B,cAAC,GAAD,CAAe3R,KAAM,eAArB,SACE,qCACG+B,QADH,IACGA,GADH,UACGA,EAAOma,cADV,iBACG,EAAe/D,cADlB,aACG,EAAuBnY,KAD1B,WACiC+B,QADjC,IACiCA,GADjC,UACiCA,EAAOma,cADxC,iBACiC,EAAe/D,cADhD,aACiC,EAAuBlY,aAG1D,cAAC,GAAD,CAAeD,KAAM,gBAArB,SACE,mCAAI+B,QAAJ,IAAIA,GAAJ,UAAIA,EAAOkZ,uBAAX,iBAAI,EAAwBvJ,iBAA5B,aAAI,EAAmC1R,SAEzC,cAAC,GAAD,CAAeA,KAAM,eAArB,SACE,mCAAI+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAOwW,eAEb,cAAC,GAAD,CAAevY,KAAM,eAArB,SACE,mCAAI+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAOgQ,uBCtMN,SAASgwB,KAAwB,IACtCx3B,EAAcH,KAAdG,UACF0U,EAAUkB,KAF6B,EAGnB5b,mBAAS,IAHU,mBAGtCrE,EAHsC,KAG/BynB,EAH+B,OAIbpjB,oBAAS,GAJI,mBAItCi1B,EAJsC,KAI5BC,EAJ4B,KAMvClP,EAAY,uCAAG,sBAAA/e,EAAA,+EAEX4B,GAAIC,KAAK,6BAA8B,CAAEnN,UAF9B,OAGjBu5B,GAAY,GAHK,gDAKjBlvB,EAAU,oBACVsI,QAAQC,IAAR,MANiB,yDAAH,qDAUlB,OAAI0mB,EAEA,cAAC,GAAD,CACErX,MAAO,yCAIX,gCACE,cAAC,GAAD,IACA,eAAC3a,GAAA,EAAD,CAAW7D,UAAU,OAAOukB,SAAS,KAArC,UACE,cAACC,GAAA,EAAD,IACA,sBAAK9lB,UAAW4c,EAAQT,MAAxB,UACE,cAAC0F,GAAA,EAAD,CAAYvgB,UAAU,KAAKiG,QAAQ,KAAnC,4BAGA,sBAAKvH,UAAW4c,EAAQoI,KAAxB,UACE,cAAC,GAAD,CACEhI,OAAO,SACPxO,GAAG,QACHxJ,MAAM,gBACNrH,KAAK,QACLqoB,aAAa,QACb5F,WAAS,EACTkD,cAAY,WACZ5d,SAAU,SAAC6Y,GAAD,OAAO+G,EAAS/G,EAAE3Y,OAAOH,UAGrC,cAACuZ,GAAA,EAAD,CACElhB,KAAK,SACL8mB,WAAS,EACTrd,QAAQ,YACRzG,MAAM,UACNd,UAAW4c,EAAQqI,OACnB3B,cAAY,YACZ/iB,QAAS2nB,EAPX,8BCkCZ,SAASyX,GAAUjgC,GACjB,OACE,qBAAKM,UAAWC,IAAO2/B,cAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO5+B,KAAK,SAAZ,SACE,cAAC,GAAD,CAAO4kB,QAASlmB,EAAMkmB,YAExB,cAAC,IAAD,CAAO5kB,KAAK,gBAAZ,SACE,cAAColB,GAAD,MAEF,cAAC,IAAD,CAAOplB,KAAK,iBAAZ,SACE,cAAC0+B,GAAD,MAEF,cAAC,IAAD,CAAO1+B,KAAK,iBAAZ,SACE,cAACi2B,GAAD,MAEF,cAAC,IAAD,CAAO4I,OAAK,EAAC7+B,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUQ,GAAG,kBAOvB,SAASlE,GAAMoC,GACb,OACE,sBAAKM,UAAWC,IAAO2/B,cAAvB,UACE,cAAC,EAAD,CAAQ/+B,SAAUnB,EAAMmB,WACxB,eAAC,IAAD,WACE,cAAC,GAAD,CAAcG,KAAK,iBAAiBM,UAAWs0B,KAC/C,cAAC,GAAD,CAAc50B,KAAK,SAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,eAAeM,UAAWw+B,KAC7C,cAAC,GAAD,CAAcD,OAAK,EAAC7+B,KAAK,gBAAzB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,WAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,qBAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,mBAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,YAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CACEA,KAAK,wBACLM,UAAWutB,KAEb,cAAC,GAAD,CAAc7tB,KAAK,eAAnB,SACE,cAAC,GAAD,MAGF,cAAC,GAAD,CAAc6+B,OAAK,EAAC7+B,KAAK,YAAzB,SACE,cAACoC,GAAD,MAEF,cAAC,GAAD,CAAcpC,KAAK,gBAAgBM,UAAWm7B,KAC9C,cAAC,GAAD,CACEz7B,KAAK,uBACLM,UAAWm7B,KAEb,cAAC,GAAD,CAAcz7B,KAAK,+BAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,gBAAnB,SACE,cAAC,GAAD,MAGF,cAAC,GAAD,CACEA,KAAK,iBACLM,UAAWuqB,KAEb,cAAC,GAAD,CAAc7qB,KAAK,SAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,aAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,QAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO6+B,OAAK,EAAC7+B,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUQ,GAAG,cAOvB,SAASnE,GAAOqC,GACd,OACE,sBAAKM,UAAWC,IAAO2/B,cAAvB,UACE,cAAC,EAAD,CAAQ/+B,SAAUnB,EAAMmB,WACxB,eAAC,IAAD,WACE,cAAC,GAAD,CAAcG,KAAK,QAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,QAAnB,SACE,cAAC++B,GAAD,MAEF,cAAC,GAAD,CAAc/+B,KAAK,eAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,aAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO6+B,OAAK,EAAC7+B,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUQ,GAAG,cAOvB,SAASpE,GAAYsC,GACnB,OACE,sBAAKM,UAAWC,IAAO2/B,cAAvB,UACE,cAAC,EAAD,CAAQ/+B,SAAUnB,EAAMmB,WACxB,eAAC,IAAD,WACE,cAAC,GAAD,CAAcG,KAAK,QAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,UAAnB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAcA,KAAK,QAAnB,SACE,cAAC++B,GAAD,MAEF,cAAC,GAAD,CAAc/+B,KAAK,aAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO6+B,OAAK,EAAC7+B,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUQ,GAAG,cAMvB,SAAS4B,KACP,OAAO,cAAC,GAAD,IAGT,SAAS28B,KACP,OAAO,yCAET,SAASv8B,KACP,OAAO,cAAC,GAAD,IAGMw8B,OAtMY,WAAO,IAAD,EACzBtuB,EAAW1T,IACX0S,EAAM,UAAGgB,EAASzT,cAAZ,QAAsB,GAFH,EAICiE,mBAAS+9B,QAAQvuB,EAAStT,WAJ3B,mBAIxB8hC,EAJwB,KAIdC,EAJc,KAKzBr3B,EAAcC,eAEpB0K,GAAU,CACRmH,UAAWlK,IARkB,MAYY0vB,YAAW,CAAC,UAZxB,mBAYJC,GAZI,gBAc/Bh6B,IAAmB,WACb65B,EAAUp3B,EAAY2J,eAAe,CAAC,OAAQ,OAC7C3J,EAAYw3B,cAAc,CAAC,OAAQ,SACvC,CAACJ,IAEJ,IAAMK,EAAY,uCAAG,sBAAAp3B,EAAA,sEACb4B,GAAIL,IAAI,UADK,OAEnB21B,EAAa,SACbF,GAAY,GAHO,2CAAH,qDAMZK,EAAc,WAClB,IAAKN,EAAU,OAAO,cAACP,GAAD,CAAW/Z,QAAS,kBAAMua,GAAY,MAE5D,OAAQhlB,SAASzJ,EAAStT,WACxB,KAAK24B,IAAKz5B,MACR,OAAO,cAACA,GAAD,CAAOuD,SAAU0/B,IAC1B,KAAKxJ,IAAK15B,OACR,OAAO,cAACA,GAAD,CAAQwD,SAAU0/B,IAC3B,QACE,OAAO,cAACnjC,GAAD,CAAayD,SAAU0/B,MAIpC,OACE,qBAAKvgC,UAAWC,IAAO2/B,cAAvB,SACE,cAACY,EAAD,OClESC,OAXf,WACE,OACE,sBAAKzgC,UAAU,MAAf,UACE,cAAC,KAAD,UACE,cAAC,GAAD,MAEF,cAAC,GAAD,QCJO0gC,GAAQC,YAAe,CAClCC,QAAS,CACPvC,YAAawC,GACbC,OAAQC,GACRhf,iBACAniB,cACAwH,gBAAiB45B,GACjBzhC,iBCHgB0gC,QACW,cAA7B11B,OAAOnI,SAAS6+B,UAEe,UAA7B12B,OAAOnI,SAAS6+B,UAEhB12B,OAAOnI,SAAS6+B,SAASruB,MACvB,2D,wBCJNsuB,IAASC,OACP,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,eAACU,GAAA,EAAD,CAAqBC,OAAQv4B,GAA7B,UACE,cAACw4B,GAAA,EAAD,UACE,cAACviB,GAAA,EAAD,CAAeta,MAAOA,GAAtB,SACE,cAAC,GAAD,QAGJ,cAAC,sBAAD,SAGJ88B,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvjB,MAAK,SAACwjB,GACLA,EAAaC,gBAEdC,OAAM,SAACz3B,GACNmG,QAAQnG,MAAMA,EAAMzD,a,mBE7I5BlK,EAAOC,QAAU,CAAC,eAAiB,oCAAoC,OAAS,4BAA4B,UAAY,+BAA+B,WAAa,gCAAgC,gBAAkB,qCAAqC,gBAAkB,qCAAqC,aAAe,kCAAkC,WAAa,gCAAgC,WAAa,gCAAgC,aAAe,kCAAkC,kBAAoB,uCAAuC,kBAAoB,uCAAuC,cAAgB,mCAAmC,aAAe,kCAAkC,sBAAwB,2CAA2C,mBAAqB,wCAAwC,iBAAmB,sCAAsC,oBAAsB,yCAAyC,qBAAuB,0CAA0C,qBAAuB,0CAA0C,cAAgB,mCAAmC,6BAA+B,kDAAkD,gBAAkB,uC,mBCAxtCD,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,QAAU,8BAA8B,UAAY,gCAAgC,kBAAoB,wCAAwC,eAAiB,qCAAqC,uBAAyB,6CAA6C,qBAAuB,2CAA2C,0BAA4B,gDAAgD,+BAAiC,qDAAqD,iCAAmC,yD,mBCAzkBD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,YAAc,gCAAgC,UAAY,8BAA8B,WAAa,+BAA+B,SAAW,6BAA6B,YAAc,gCAAgC,gBAAkB,oCAAoC,aAAe,iCAAiC,QAAU,4BAA4B,MAAQ,4B,mBCApaD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,QAAU,4BAA4B,YAAc,gCAAgC,UAAY,8BAA8B,kBAAoB,sCAAsC,gBAAkB,oCAAoC,kBAAoB,sCAAsC,cAAgB,oC,mBCA5WD,EAAOC,QAAU,CAAC,qBAAuB,0CAA0C,kBAAoB,uCAAuC,sBAAwB,2CAA2C,4BAA8B,iDAAiD,yBAA2B,8CAA8C,MAAQ,2BAA2B,SAAW,gC,gCCDvZ,qgE,mBCCAD,EAAOC,QAAU,CAAC,SAAW,+BAA+B,iBAAmB,uCAAuC,aAAe,mCAAmC,kBAAoB,wCAAwC,aAAe,mCAAmC,uBAAyB,6CAA6C,cAAgB,sC,mBCA5WD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,UAAY,gCAAgC,WAAa,iCAAiC,YAAc,kCAAkC,gBAAkB,sCAAsC,QAAU,8BAA8B,aAAe,mCAAmC,aAAe,mCAAmC,MAAQ,8B,mBCA1ZD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,UAAY,+BAA+B,WAAa,gCAAgC,YAAc,iCAAiC,gBAAkB,qCAAqC,QAAU,6BAA6B,aAAe,kCAAkC,aAAe,kCAAkC,MAAQ,6B,mBCAhZD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,UAAY,kCAAkC,WAAa,mCAAmC,YAAc,oCAAoC,gBAAkB,wCAAwC,UAAY,kCAAkC,aAAe,qCAAqC,aAAe,qCAAqC,MAAQ,iC","file":"static/js/main.beed2c88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"FindModal_modal__2Z4BE\",\"container\":\"FindModal_container__33QHq\",\"container__header\":\"FindModal_container__header__1ZMPP\",\"container__body__search\":\"FindModal_container__body__search__1ipWN\",\"container__body__table\":\"FindModal_container__body__table__3Irt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ManageUsers_container__17Qih\",\"mainHeader\":\"ManageUsers_mainHeader__2FxUR\",\"manageContainer\":\"ManageUsers_manageContainer__3J-vD\",\"filtersContainer\":\"ManageUsers_filtersContainer__2wruJ\",\"tableContainer\":\"ManageUsers_tableContainer__1PwUH\",\"selectSortBy\":\"ManageUsers_selectSortBy__1lkXh\",\"manageHeader\":\"ManageUsers_manageHeader__Eesda\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"manageForm__row\":\"EditableField_manageForm__row__2h414\",\"manageForm__row__key\":\"EditableField_manageForm__row__key__1sBqm\",\"manageForm__row__key__desc\":\"EditableField_manageForm__row__key__desc__h2t4t\",\"manageForm__row__value\":\"EditableField_manageForm__row__value__39PVx\",\"manageForm__row__value__desc\":\"EditableField_manageForm__row__value__desc__1txNn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"FindProject_modal__2CfZK\",\"container\":\"FindProject_container__3gQ8f\",\"container__header\":\"FindProject_container__header__27f2z\",\"container__body__search\":\"FindProject_container__body__search__mkIyv\",\"container__body__table\":\"FindProject_container__body__table__3ZJOd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"MainView_mainContainer__3dBHb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"logo\":\"Header_logo__3_SJs\",\"logout\":\"Header_logout__1UGPC\",\"activeCourseBox\":\"Header_activeCourseBox__1-jt4\",\"activeCourse\":\"Header_activeCourse__1niAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ManageReferenceProject_error__346n9\",\"loading\":\"ManageReferenceProject_loading__1WRY1\",\"breadcrumbs\":\"ManageReferenceProject_breadcrumbs__1MePz\",\"container\":\"ManageReferenceProject_container__1xaWx\",\"container__header\":\"ManageReferenceProject_container__header__3zIeX\",\"container__header__button\":\"ManageReferenceProject_container__header__button__J2P9R\",\"container__body\":\"ManageReferenceProject_container__body__3zYRA\",\"manageForm\":\"ManageReferenceProject_manageForm__o2t-0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs\":\"ReusableGoBack_breadcrumbs__3Reow\",\"breadcrumbs_link\":\"ReusableGoBack_breadcrumbs_link__5VcES\",\"container_goback\":\"ReusableGoBack_container_goback__IPn1M\",\"icon_back\":\"ReusableGoBack_icon_back__rf9yq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CreateTeam_container__3-F8P\",\"select\":\"CreateTeam_select__2x8cS\",\"buttons\":\"CreateTeam_buttons__u-Iiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ReferenceProjects_error__1ncbD\",\"loading\":\"ReferenceProjects_loading__EfxqC\",\"breadcrumbs\":\"ReferenceProjects_breadcrumbs__3jpmH\",\"search\":\"ReferenceProjects_search__3U-PF\",\"container\":\"ReferenceProjects_container__1wdvE\",\"container__header\":\"ReferenceProjects_container__header__1Pg-F\",\"container__header__button\":\"ReferenceProjects_container__header__button__3IK38\",\"container__body\":\"ReferenceProjects_container__body__3_qA2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NameValuePair_container__2ceqj\",\"name\":\"NameValuePair_name__2_wg-\",\"value\":\"NameValuePair_value__2R_km\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PrivateRoute_container__14291\",\"content\":\"PrivateRoute_content__2cwTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomePage_container__3vd9R\",\"header\":\"HomePage_header__2QSbF\",\"description\":\"HomePage_description__3ln4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"CourseList_listContainer__wciva\",\"manageCourseBar\":\"CourseList_manageCourseBar__l4neH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HeaderRegistration_header__RAq8Y\",\"logo\":\"HeaderRegistration_logo__3h4xt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SelectSortBy_select__22M87\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"useMultipleSelect_select__19J7G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageHeader_headerContainer__2ll6t\"};","export enum UserType {\n  Candidate,\n  Participant,\n  Mentor,\n  Admin,\n}\n\nexport type UserTypeName = 'Candidate' | 'Participant' | 'Mentor' | 'Admin'\n\nexport enum UserStatus {\n  Active,\n  Resigned,\n  Archived,\n}\n\nexport type UserStatusName = 'Active' | 'Resigned' | 'Archived'\n\nexport interface Grade {\n  _id: string\n  sectionId?: string\n  testPoints?: number\n  testMaxPoints?: number\n  taskPoints?: number\n  taskMaxPoints?: number\n  projectPoints?: number\n}\n\nexport interface UserData {\n  _id: string\n  name: string\n  surname: string\n  status: UserStatus\n  type: UserType\n  grades: Grade[]\n  email?: string\n}\n\nexport interface User {\n  id: string\n  name: string\n  surname: string\n  status?: string\n  type?: string\n  grades?: Grade[]\n  averageGrade?: number\n  maxGrade?: number\n  email?: string\n}\n\nexport interface IUser {\n  name: string\n  surname: string\n  email: string\n  type: UserType\n  status: UserStatus\n}\n\nexport interface IGrade {\n  _id: string\n  sectionId: string\n  testPoints: number\n  testMaxPoints: number\n  taskPoints: number\n  taskMaxPoints: number\n  projectPoints: number\n}\n\nexport const userStatusDict = {\n  [UserStatus.Active]: 'Active',\n  [UserStatus.Archived]: 'Archived',\n  [UserStatus.Resigned]: 'Resigned',\n}\n\nexport const userTypeDict = {\n  [UserType.Candidate]: 'Candidate',\n  [UserType.Participant]: 'Participant',\n  [UserType.Mentor]: 'Mentor',\n  [UserType.Admin]: 'Admin',\n}\n\nexport const invUserStatusDict = {\n  Active: UserStatus.Active,\n  Archived: UserStatus.Archived,\n  Resigned: UserStatus.Resigned,\n}\n\nexport const invUserTypeDict = {\n  Candidate: UserType.Candidate,\n  Participant: UserType.Participant,\n  Mentor: UserType.Mentor,\n  Admin: UserType.Admin,\n}\n\nexport interface UserFilters {\n  type: UserType[]\n  status: UserStatus[]\n}\n\nexport const convertUserToIUser = (user: User) => {\n  return {\n    name: user.name,\n    surname: user.surname,\n    email: user.email ?? '---',\n    //@ts-ignore\n    type: invUserTypeDict[user.type ?? 'Candidate'] as UserType,\n    //@ts-ignore\n    status: invUserStatusDict[user.status ?? 'Resigned'] as UserStatus,\n  }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ReusableTable_container__36K3o\",\"MuiDataGrid-cellCheckbox\":\"ReusableTable_MuiDataGrid-cellCheckbox__1H_nr\",\"MuiDataGrid-colCellCheckbox\":\"ReusableTable_MuiDataGrid-colCellCheckbox__Fzb8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchInput_searchInput__2APvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"EditGrade_modal__r2V1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"TeamProjects_main__2uzIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ManageUser_error__1jdUL\",\"loading\":\"ManageUser_loading__eY1Dk\",\"breadcrumbs\":\"ManageUser_breadcrumbs__3sFn1\",\"container\":\"ManageUser_container__3nZAp\",\"container__header\":\"ManageUser_container__header__1wP-P\",\"container__header__button\":\"ManageUser_container__header__button__2uvDR\",\"container__body\":\"ManageUser_container__body__2j79z\",\"manageUserForm\":\"ManageUser_manageUserForm__1eNPw\",\"manageUserForm__row\":\"ManageUser_manageUserForm__row__1RZ4v\",\"manageUserForm__row__key\":\"ManageUser_manageUserForm__row__key__toiRn\",\"manageUserForm__row__value\":\"ManageUser_manageUserForm__row__value__3fKgO\",\"status_radio_button\":\"ManageUser_status_radio_button__2ZzH-\",\"status_radio_button__edit\":\"ManageUser_status_radio_button__edit__PRM5t\",\"status_radio_button__blue\":\"ManageUser_status_radio_button__blue__26EDP\",\"status_radio_button__red\":\"ManageUser_status_radio_button__red__qB08L\",\"status_radio_button__green\":\"ManageUser_status_radio_button__green__8cmVq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Menu_nav__3q9xg\",\"navSmall\":\"Menu_navSmall__1TpwM\",\"settings\":\"Menu_settings__2D9Wz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sheetId\":\"ManageSheet_sheetId__bBa05\",\"manageSheet\":\"ManageSheet_manageSheet__f9NbP\",\"container\":\"ManageSheet_container__3j3rE\",\"mainHeader\":\"ManageSheet_mainHeader__2NZG_\",\"teamInfo\":\"ManageSheet_teamInfo__2YW_R\",\"teamInfoRow\":\"ManageSheet_teamInfoRow__3CK3v\",\"reviewersInfo\":\"ManageSheet_reviewersInfo__2eVwX\",\"reviewerInfoRow\":\"ManageSheet_reviewerInfoRow__1AfF7\",\"reviewers\":\"ManageSheet_reviewers__2IHCJ\",\"manageContainer\":\"ManageSheet_manageContainer__3IZw4\",\"manageHeader\":\"ManageSheet_manageHeader__1C2yE\",\"buttons\":\"ManageSheet_buttons__1o6SM\",\"table\":\"ManageSheet_table__O9CvN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfileContainer\":\"MyProfile_myProfileContainer__3ziL5\",\"teamProjectHeader\":\"MyProfile_teamProjectHeader__2CKKS\",\"teamProjectHeaderName\":\"MyProfile_teamProjectHeaderName__89D2H\",\"teamProjectDetailsContainer\":\"MyProfile_teamProjectDetailsContainer__2ulkX\",\"attributeNamesContainer\":\"MyProfile_attributeNamesContainer__1qZjR\",\"attributeValuesContainer\":\"MyProfile_attributeValuesContainer__1Zftf\",\"status_radio_button__blue\":\"MyProfile_status_radio_button__blue__2_9CU\",\"status_radio_button__red\":\"MyProfile_status_radio_button__red__2YoNY\",\"status_radio_button__green\":\"MyProfile_status_radio_button__green__jghRd\",\"buttonEdit\":\"MyProfile_buttonEdit__3TT2H\",\"buttonEditPassword\":\"MyProfile_buttonEditPassword__WzuRV\",\"buttonAbort\":\"MyProfile_buttonAbort__RGmgF\",\"buttonConfirm\":\"MyProfile_buttonConfirm__2CPFW\",\"modal\":\"MyProfile_modal__2zSSd\",\"modalContent\":\"MyProfile_modalContent__k83GF\",\"passwordInput\":\"MyProfile_passwordInput__d_HAT\"};","import { CourseListElementModel } from '../pages/Admin/CourseList/CourseListSlice'\n\nexport const getUserFromLocalStorage = () => {\n  const userId = localStorage.getItem('id')\n  const userType = localStorage.getItem('type')\n\n  return { userId, userType }\n}\n\nexport const removeUserFromLocalStorage = () => {\n  localStorage.removeItem('id')\n  localStorage.removeItem('type')\n}\n\nexport function setActiveCourse(course: CourseListElementModel) {\n  localStorage.setItem('activeCourse', JSON.stringify(course))\n}\n\nexport function getActiveCourse(): CourseListElementModel | undefined {\n  const activeCourseItem = localStorage.getItem('activeCourse')\n  if (!activeCourseItem) {\n    return undefined\n  }\n  return JSON.parse(activeCourseItem)\n}\n","import React, { useEffect, useState } from 'react'\nimport PeopleIcon from '@material-ui/icons/People'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport AppsIcon from '@material-ui/icons/Apps'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport ListItemLink from '../../ListItemLink'\nimport { useLocation } from 'react-router-dom'\n\nimport styles from '../Menu.module.css'\n\nexport interface MenuProps {\n  name: string\n  surname: string\n  smallMenu: boolean\n}\n\nenum MenuAdminOption {\n  Users = 'users',\n  Courses = 'courses',\n  Sections = 'sections',\n  GradeSheets = 'gradesheets',\n  Projects = 'projects',\n  TeamProjects = 'teamprojects',\n  Teams = 'teams',\n  MyProfile = 'myprofile',\n}\n\nconst MenuAdmin: React.FC<MenuProps> = ({ name, surname, smallMenu }) => {\n  const [selected, setSelected] = useState<MenuAdminOption | null>(null)\n  const location = useLocation()\n\n  useEffect(() => {\n    const option: MenuAdminOption = location.pathname.replace(\n      '/',\n      '',\n    ) as MenuAdminOption\n    setSelected(option)\n  }, [location])\n\n  return (\n    <nav className={smallMenu ? styles.navSmall : styles.nav}>\n      {!smallMenu && (\n        <div style={{ borderBottom: '1px solid #666' }}>\n          <AccountCircleIcon style={{ paddingTop: 20, fontSize: 40 }} />\n          <p style={{ fontWeight: 500 }}>{`${name || ''} ${surname || ''}`}</p>\n          <p>Admin</p>\n        </div>\n      )}\n\n      <ListItemLink\n        path=\"/users\"\n        icon={<PeopleIcon className={styles.icon} />}\n        text=\"Users\"\n        selected={selected === MenuAdminOption.Users}\n      />\n      <ListItemLink\n        path=\"/courses\"\n        icon={<NotificationsIcon className={styles.icon} />}\n        text=\"Courses\"\n        selected={selected === MenuAdminOption.Courses}\n      />\n      <ListItemLink\n        path=\"/sections\"\n        icon={<AppsIcon className={styles.icon} />}\n        text=\"Sections\"\n        selected={selected === MenuAdminOption.Sections}\n      />\n      <ListItemLink\n        path=\"/gradesheets\"\n        icon={<AssignmentIcon className={styles.icon} />}\n        text=\"Grade sheets\"\n        selected={selected === MenuAdminOption.GradeSheets}\n      />\n      <ListItemLink\n        path=\"/projects\"\n        icon={<EmojiObjectsIcon className={styles.icon} />}\n        text=\"Projects\"\n        selected={selected === MenuAdminOption.Projects}\n      />\n      <ListItemLink\n        path=\"/teamprojects\"\n        icon={<EmojiObjectsIcon className={styles.icon} />}\n        text=\"Team projects\"\n        selected={selected === MenuAdminOption.TeamProjects}\n      />\n      <ListItemLink\n        path=\"/teams\"\n        icon={<PeopleIcon className={styles.icon} />}\n        text=\"Teams\"\n        selected={selected === MenuAdminOption.Teams}\n      />\n      {!smallMenu && <span className={styles.settings}>Settings</span>}\n      <ListItemLink\n        path=\"/myprofile\"\n        icon={<SettingsIcon className={styles.icon} />}\n        text=\"My profile\"\n        selected={selected === MenuAdminOption.MyProfile}\n      />\n    </nav>\n  )\n}\n\nexport default MenuAdmin\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport { RootState, AppDispatch } from '../app/store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { RootState } from '../../app/store'\n\ninterface IMenu {\n  showSmallMenu: boolean\n  showSmallMenuUserAction: boolean\n}\n\nconst initialState: IMenu = {\n  showSmallMenu: false,\n  showSmallMenuUserAction: false\n}\n\nexport const menuSlice = createSlice({\n  name: 'menu',\n  initialState,\n  reducers: {\n    toggleMenu(state) {\n      state.showSmallMenuUserAction = !state.showSmallMenuUserAction\n    },\n    setMenu(state) {\n      state.showSmallMenu = true\n    },\n    clearMenu(state) {\n      state.showSmallMenu = false\n    },\n  },\n})\n\nexport const selectMenu = (state: RootState) => state.menuReducer\n\nexport const { toggleMenu, setMenu, clearMenu } = menuSlice.actions\n\nexport default menuSlice.reducer\n","import React from 'react'\nimport styles from './Header.module.css'\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew'\nimport { removeUserFromLocalStorage } from '../../app/utils'\nimport { useHistory } from 'react-router-dom'\nimport { useAppSelector } from '../../hooks/hooks'\nimport { useDispatch } from 'react-redux'\nimport { toggleMenu } from '../Menu/MenuSlice'\n\nimport MenuIcon from '@material-ui/icons/Menu'\n\ninterface HeaderProps {\n  onLogout?: Function\n}\n\nconst Header = (props: HeaderProps) => {\n  const { activeCourse } = useAppSelector((state) => state.courseList)\n  const dispatch = useDispatch()\n\n  const handleLogOut = () => {\n    removeUserFromLocalStorage()\n  }\n\n  const history = useHistory()\n  const routeChange = () => {\n    let path = `/`\n    history.push(path)\n  }\n\n  const takeHome = () => {\n    let path = `/home`\n    history.push(path)\n  }\n\n  const handleMenuIconClick = () => {\n    dispatch(toggleMenu())\n  }\n\n  return (\n    <div className={styles.header}>\n      <div\n        style={{ display: 'flex', alignItems: 'center', marginLeft: '1.8rem' }}\n      >\n        <MenuIcon onClick={handleMenuIconClick} style={{cursor: \"pointer\"}}/>\n        <div\n          className={styles.logo}\n          onClick={takeHome}\n          style={{ cursor: 'pointer' }}\n        >\n          <span>.</span>Coders<span>Camp</span>\n        </div>\n      </div>\n      <div className={styles.activeCourseBox}>\n        <p className={styles.activeCourse}>{activeCourse?.name}</p>\n        <div\n          className={styles.logout}\n          onClick={() => {\n            handleLogOut()\n            routeChange()\n            if (props.onLogout) props.onLogout()\n          }}\n        >\n          <PowerSettingsNewIcon style={{ color: 'rgba(255, 255, 255, 0.6)' }} />\n          <span> Log out</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ListItem, ListItemIcon } from '@material-ui/core'\n\nimport styles from './ListItemLink.module.css'\nimport { useSelector } from 'react-redux'\nimport { selectMenu } from '../Menu/MenuSlice'\n\nexport interface ListItemLinkProps {\n  path: string\n  icon: React.ReactNode\n  text: string\n  selected: boolean\n}\n\nconst ListItemLink = ({\n  path,\n  icon,\n  text,\n  selected,\n}: ListItemLinkProps) => {\n  const { showSmallMenu } = useSelector(selectMenu)\n\n  return (\n    <ListItem\n      button\n      component={Link}\n      to={path}\n      className={\n        !showSmallMenu\n          ? `${styles.ListItem} ${selected && styles.ListItemSelected}`\n          : styles.ListItemSmall\n      }\n    >\n      <div>\n        <ListItemIcon\n          className={`${styles.ListItemIcon} ${\n            selected && styles.ListItemInsideSelected\n          }`}\n        >\n          {icon}\n        </ListItemIcon>\n      </div>\n      <p\n        className={`${ showSmallMenu ? styles.ListItemTextSmall : styles.ListItemText} ${\n          selected && styles.ListItemInsideSelected\n        }`}\n      >\n        {text}{' '}\n      </p>\n    </ListItem>\n  )\n}\n\nexport default ListItemLink\n","import React, { useEffect, useState } from 'react'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport ListItemLink from '../../ListItemLink'\nimport { useLocation } from 'react-router-dom'\n\nimport styles from '../Menu.module.css'\n\nexport interface MenuProps {\n  name: string\n  surname: string\n  smallMenu: boolean\n}\n\nenum MenuParticipantOption {\n  Grades = 'grades',\n  Team = 'team',\n  MyProfile = 'myprofile',\n}\n\nconst MenuParticipant: React.FC<MenuProps> = ({ name, surname, smallMenu }) => {\n  const [selected, setSelected] = useState<MenuParticipantOption | null>(null)\n  const location = useLocation()\n\n  useEffect(() => {\n    const option: MenuParticipantOption = location.pathname.replace(\n      '/',\n      '',\n    ) as MenuParticipantOption\n    setSelected(option)\n  }, [location])\n\n  return (\n    <nav className={smallMenu ? styles.navSmall : styles.nav}>\n      {!smallMenu && (\n        <div style={{ borderBottom: '1px solid #666' }}>\n          <AccountCircleIcon style={{ paddingTop: 20, fontSize: 40 }} />\n          <p style={{ fontWeight: 500 }}>{`${name || ''} ${surname || ''}`}</p>\n          <p>Participant</p>\n        </div>\n      )}\n\n      <ListItemLink\n        path=\"/grades\"\n        icon={<AssignmentIcon className={styles.icon} />}\n        text=\"Grades\"\n        selected={selected === MenuParticipantOption.Grades}\n      />\n\n      <ListItemLink\n        path=\"/team\"\n        icon={<NotificationsIcon className={styles.icon} />}\n        text=\"Team\"\n        selected={selected === MenuParticipantOption.Team}\n      />\n      {!smallMenu && <span className={styles.settings}>Settings</span>}\n      <ListItemLink\n        path=\"/myprofile\"\n        icon={<SettingsIcon className={styles.icon} />}\n        text=\"My profile\"\n        selected={selected === MenuParticipantOption.MyProfile}\n      />\n    </nav>\n  )\n}\n\nexport default MenuParticipant\n","import React, { useEffect, useState } from 'react'\nimport AssignmentIcon from '@material-ui/icons/Assignment'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\nimport ListItemLink from '../../ListItemLink'\nimport { useLocation } from 'react-router-dom'\n\nimport styles from '../Menu.module.css'\n\nexport interface MenuProps {\n  name: string\n  surname: string\n  smallMenu: boolean\n}\n\nenum MenuMentorOption {\n  GradeSheets = 'gradesheets',\n  MyProfile = 'myprofile',\n}\n\nconst MenuMentor: React.FC<MenuProps> = ({ name, surname, smallMenu }) => {\n  const [selected, setSelected] = useState<MenuMentorOption | null>(null)\n  const location = useLocation()\n\n  useEffect(() => {\n    const option: MenuMentorOption = location.pathname.replace(\n      '/',\n      '',\n    ) as MenuMentorOption\n    setSelected(option)\n  }, [location])\n\n  return (\n    <nav className={smallMenu ? styles.navSmall : styles.nav}>\n      {!smallMenu && (\n        <div style={{ borderBottom: '1px solid #666' }}>\n          <AccountCircleIcon style={{ paddingTop: 20, fontSize: 40 }} />\n          <p style={{ fontWeight: 500 }}>{`${name || ''} ${surname || ''}`}</p>\n          <p>Mentor</p>\n        </div>\n      )}\n\n      <ListItemLink\n        path=\"gradesheets\"\n        icon={<AssignmentIcon className={styles.icon} />}\n        text=\"Grade sheets\"\n        selected={selected === MenuMentorOption.GradeSheets}\n      />\n\n      {!smallMenu && <span className={styles.settings}>Settings</span>}\n      <ListItemLink\n        path=\"/myprofile\"\n        icon={<SettingsIcon className={styles.icon} />}\n        text=\"My profile\"\n        selected={selected === MenuMentorOption.MyProfile}\n      />\n    </nav>\n  )\n}\n\nexport default MenuMentor\n","import React, { useState } from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport {\n  Container,\n  FormControl,\n  Input,\n  InputLabel,\n  Select,\n  Theme,\n  useTheme,\n} from '@material-ui/core'\nimport styles from './useMultipleSelect.module.css'\nimport { MenuProps } from '../../components/Menu/Menu'\n\nconst ITEM_HEIGHT = 48\nconst ITEM_PADDING_TOP = 8\nconst menuProps: MenuProps = {\n  getContentAnchorEl: null,\n  anchorOrigin: { vertical: 'bottom', horizontal: 'center' },\n  transformOrigin: { vertical: 'top', horizontal: 'center' },\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 200,\n    },\n  },\n}\n\nfunction getStyles(name: string, selected: string[], theme: Theme) {\n  return {\n    fontWeight:\n      selected.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  }\n}\n\nexport interface useMultipleSelectArgs {\n  label: string\n  options: string[]\n  labels?: { [option: string]: string }\n}\n\nexport default function useMultipleSelect<T extends string = string>({\n  options,\n  label,\n  labels = {},\n}: useMultipleSelectArgs): [JSX.Element, T[]] {\n  const theme = useTheme()\n  const [selected, setSelected] = useState<T[]>([])\n\n  const handleChange = (\n    event: React.ChangeEvent<{\n      name?: string | undefined\n      value: unknown\n    }>,\n  ) => {\n    setSelected(event.target.value as T[])\n  }\n  const multipleSelectComponent = (\n    <Container>\n      <FormControl className={styles.select}>\n        <InputLabel>{label}</InputLabel>\n        <Select\n          multiple\n          value={selected}\n          onChange={handleChange}\n          input={<Input />}\n          renderValue={(selected) => {\n            const items = (selected as string[]).length\n            return (\n              <div>{`Selected ${items} item${items !== 1 ? 's' : ''}`}</div>\n            )\n          }}\n          MenuProps={menuProps}\n        >\n          {options.map((option) => (\n            <MenuItem\n              key={option}\n              value={option}\n              style={getStyles(option, selected, theme)}\n            >\n              {labels[option] ?? option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Container>\n  )\n  return [multipleSelectComponent, selected]\n}\n","import { useRef, useEffect } from 'react'\n\nexport default function useDidUpdateEffect(\n  fn: Function,\n  inputs: React.DependencyList,\n) {\n  const didMountRef = useRef(false)\n\n  useEffect(() => {\n    if (didMountRef.current) fn()\n    else didMountRef.current = true\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, inputs)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../../app/store'\nimport { Color } from '@material-ui/lab/Alert'\n\ninterface SnackbarState {\n  message: string\n  severity: Color\n  isOpen: boolean\n}\n\nconst initialState: SnackbarState = {\n  message: '',\n  severity: 'success',\n  isOpen: false,\n}\n\nexport const snackbarSlice = createSlice({\n  name: 'snackbar',\n  initialState,\n  reducers: {\n    showSnackbar: (\n      state,\n      action: PayloadAction<{ message: string; severity: Color }>,\n    ) => {\n      state.isOpen = true\n      state.message = action.payload.message\n      state.severity = action.payload.severity\n    },\n    hideSnackbar: (state) => {\n      state.isOpen = false\n    },\n  },\n})\n\nexport const { showSnackbar, hideSnackbar } = snackbarSlice.actions\n\nexport const selectSnackbarInfo = (state: RootState) => state.snackbarDetails\n\n// if you want, add selectors here, change the one below, remember to register reducer in store.ts\n// export const selectSnackbar = (state: RootState) => state.snackbar.value;\n\nexport default snackbarSlice.reducer\n","import React from 'react'\nimport { Snackbar as MaterialSnackbar } from '@material-ui/core'\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\nimport { hideSnackbar, selectSnackbarInfo } from './SnackbarSlice'\nimport { useDispatch, useSelector } from 'react-redux'\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nexport interface SnackbarProps {}\n\nconst Snackbar: React.FC<SnackbarProps> = () => {\n  const dispatch = useDispatch()\n  const { isOpen, message, severity } = useSelector(selectSnackbarInfo)\n\n  const close = (_event?: React.SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') return\n\n    dispatch(hideSnackbar())\n  }\n  return (\n    <MaterialSnackbar open={isOpen} autoHideDuration={2800} onClose={close}>\n      <Alert onClose={close} severity={severity}>\n        {message}\n      </Alert>\n    </MaterialSnackbar>\n  )\n}\n\nexport default Snackbar\n","// import { useDispatch } from 'react-redux'\nimport { showSnackbar } from '../components/Snackbar'\nimport { useAppDispatch } from './hooks'\nimport { Color } from '@material-ui/lab'\n\nconst useSnackbar = () => {\n  const dispatch = useAppDispatch()\n  const show = (severity: Color) => (message: string) =>\n    dispatch(showSnackbar({ message, severity }))\n\n  const showSuccess = show('success')\n  const showError = show('error')\n\n  const showInfo = show('info')\n\n  const showWarning = show('warning')\n\n  return { showSuccess, showError, showInfo, showWarning }\n}\nexport default useSnackbar\n","import { MutationFunction, useMutation, useQueryClient } from 'react-query'\nimport useSnackbar from './useSnackbar'\n\nexport interface Options<T, R> {\n  successMessage?: string\n  onSuccess?: (data: any) => void\n  errorMessage?: string\n  onError?: () => void\n  onSettled?: () => void\n  invalidate: string | string[]\n  newData?: (reqParam: R, previousData: T) => T\n}\nconst useMutationWithConfirm = <T, R, D>(\n  request: MutationFunction<T, R>,\n  {\n    successMessage = 'Success!',\n    errorMessage = 'Something went wrong',\n    invalidate,\n    onSuccess,\n    onError,\n    onSettled,\n    newData,\n  }: Options<D, R>,\n) => {\n  const { showError, showSuccess } = useSnackbar()\n  const queryClient = useQueryClient()\n  const mutation = useMutation(request, {\n    // When mutate is called:\n    onMutate: async (reqParam: R) => {\n      // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries(invalidate)\n\n      // Snapshot the previous value\n      const previousData = queryClient.getQueryData<D>(invalidate)\n      // Optimistically update to the new value\n      if (previousData && newData) {\n        const nextData = newData(reqParam, previousData)\n        queryClient.setQueryData<D>(invalidate, nextData)\n      }\n\n      return { previousData }\n    },\n    onSuccess: (data: T) => {\n      invalidate && queryClient.invalidateQueries(invalidate)\n      successMessage && showSuccess(successMessage)\n      onSuccess && onSuccess(data)\n    },\n    onError: () => {\n      errorMessage && showError(errorMessage)\n      onError && onError()\n    },\n    // Always refetch after error or success:\n    onSettled: () => {\n      invalidate && queryClient.invalidateQueries(invalidate)\n      onSettled && onSettled()\n    },\n  })\n  return mutation\n}\n\nexport default useMutationWithConfirm\n","import axios, { AxiosRequestConfig } from 'axios'\nimport { removeUserFromLocalStorage } from '../app/utils'\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL + '/api/'\naxios.defaults.headers.common = {\n  'x-auth-token': localStorage.getItem('token'),\n}\naxios.defaults.withCredentials = true\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    if (error.response) {\n      const { status, data } = error.response\n      switch (status) {\n        case 401:\n          if (data.message === 'UNAUTHORIZED') {\n            try {\n              const config = error.config\n              await axios.get('/refresh-token')\n              return await axios({\n                method: config.method,\n                url: config.url,\n                data: config.data,\n                withCredentials: true,\n              })\n            } catch (e) {\n              return _redirect()\n            }\n          } else {\n            return _redirect()\n          }\n        default:\n          return Promise.reject(error)\n      }\n    } else {\n      return Promise.reject(error)\n    }\n\n    function _redirect() {\n      try {\n        removeUserFromLocalStorage()\n        return (window.location.href = '/login')\n      } catch {}\n    }\n  },\n)\n\nconst api = {\n  post: <T = any, R = T>(\n    path: string,\n    data: T,\n    config?: AxiosRequestConfig,\n  ) => {\n    return axios.post<R>(path, data, config)\n  },\n  get: <R = any>(path: string, config?: AxiosRequestConfig) => {\n    return axios.get<R>(path, config)\n  },\n  getMany: <R>(path: string, config?: AxiosRequestConfig) => {\n    const course = localStorage.getItem('activeCourse')\n    const courseId = course ? JSON.parse(course)._id : null\n    return axios.get<R>(path, {\n      params: { courseId },\n      ...config,\n    })\n  },\n  delete: <R = any>(path: string, config?: AxiosRequestConfig) => {\n    return axios.delete<R>(path, config)\n  },\n  patch: <T = any, R = T>(\n    path: string,\n    data: T,\n    config?: AxiosRequestConfig,\n  ) => {\n    return axios.patch<R>(path, data, config)\n  },\n  put: <T = any, R = T>(path: string, data: T) => {\n    const putConfig = {\n      headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n      },\n    }\n    return axios.put<R>(path, data, putConfig)\n  },\n}\n\nexport default api\n","import { UserData, Grades, GradeSheetData, Grade } from '../models'\n\nconst sum = (numbers: number[]) => numbers.reduce((acc, x) => acc + x, 0)\nconst sumPoints = (grades: Grades) => [\n  sum(Object.values(grades).map((grade) => grade.points)),\n  (Object.values(grades).length - 1) * 10,\n]\n\nexport function calcProjectGrade(sheet: GradeSheetData) {\n  const mentorPoints = sumPoints(sheet.mentorGrades)\n  let [points, maxPoints] = mentorPoints\n  sheet.mentorReviewerGrades.forEach((reviewer) => {\n    if (!reviewer.grades) return\n    const [revPooints, revMaxPoints] = sumPoints(reviewer.grades)\n    points += revPooints\n    maxPoints += revMaxPoints\n  })\n  return [points, maxPoints]\n}\n\nconst MAX_ROLE_POINTS = 10\nexport function calcUserProjectGrade(sheet: GradeSheetData, userId: string) {\n  const [projectPoints, maxPoints] = calcProjectGrade(sheet)\n  const user = sheet.participants.find((user) => user.participantID === userId)\n  if (!(user && user.engagement && user.rolePoints)) return null\n  const points = (projectPoints * user.engagement) / 100 + user.rolePoints\n  const max = maxPoints + MAX_ROLE_POINTS\n  return [points, max]\n}\n\nexport function calcUserTasksGrade(user: UserData) {\n  let [points, maxPoints] = [0, 0]\n  user.grades.forEach((grade) => {\n    if (grade.taskPoints && grade.taskMaxPoints) {\n      points += grade.taskPoints\n      maxPoints += grade.taskMaxPoints\n    }\n  })\n  return [points, maxPoints]\n}\n\nexport function calcUserTestsGrade(user: UserData) {\n  let [points, maxPoints] = [0, 0]\n  user.grades.forEach((grade) => {\n    if (grade.testPoints && grade.testMaxPoints) {\n      points += grade.testPoints\n      maxPoints += grade.testMaxPoints\n    }\n  })\n  return [points, maxPoints]\n}\n\nexport function calcTaskGrade(grade: Grade) {\n  let taskGrade = grade?.taskPoints ?? 0\n  const taskMax = grade?.taskMaxPoints\n  if (taskMax) taskGrade = taskGrade / taskMax\n  else taskGrade = 0\n  return taskGrade\n}\n\nexport function calcTestGrade(grade: Grade) {\n  let testGrade = grade?.testPoints ?? 0\n  const testMax = grade?.testMaxPoints\n  if (testMax) testGrade = testGrade / testMax\n  else testGrade = 0\n  return testGrade\n}\n\nexport function calcAvgGrade(grade: Grade) {\n  const taskGrade = calcTaskGrade(grade)\n  const testGrade = calcTestGrade(grade)\n  const projectGrade = grade?.projectPoints ?? 0\n  return 2 * testGrade + 3 * taskGrade + 5 * projectGrade\n}\n","import api from './api.service'\nimport { CourseForSection, CourseDataForSection } from '../models/Course.model'\nimport {\n  ManageSection,\n  ManageSectionData,\n  NewSectionData,\n  Section,\n  SectionData,\n} from '../models/Section.model'\nimport {\n  ProjectForSection,\n  ProjectDataForSection,\n} from '../models/Project.model'\nimport { AxiosResponse } from 'axios'\n\nexport const getSections = async (): Promise<ManageSection[]> => {\n  const coursesResponse = await api.get('/courses')\n  const courses = coursesResponse.data as CourseDataForSection[]\n  const sections = (await api.get('/sections')).data as ManageSectionData[]\n  return sections.map((section) => {\n    const course = courses.find((course) => course._id === section.course)\n    return {\n      id: section._id,\n      name: section.name,\n      startDate: section.startDate\n        ? new Date(section.startDate).getTime() / 1000\n        : undefined,\n      endDate: section.endDate\n        ? new Date(section.endDate).getTime() / 1000\n        : undefined,\n      courseName: course ? course.name : '',\n      courseId: course?._id || '',\n    }\n  })\n}\n\nexport const getSectionsByCourseId = async (\n  id: string,\n): Promise<ManageSection[]> => {\n  const courseResponse = await api.get(`/courses/${id}`)\n  const course = courseResponse.data as CourseDataForSection\n  const sections = (await api.get(`/courses/${id}/sections`))\n    .data as ManageSectionData[]\n  return sections.map((section) => {\n    return {\n      id: section._id,\n      name: section.name,\n      startDate: section.startDate\n        ? new Date(section.startDate).getTime() / 1000\n        : undefined,\n      endDate: section.endDate\n        ? new Date(section.endDate).getTime() / 1000\n        : undefined,\n      courseName: course ? course.name : '',\n      courseId: course?._id || '',\n    }\n  })\n}\n\nexport const getCourses = async (): Promise<CourseForSection[]> => {\n  const courses = (await api.get('/courses')).data as CourseDataForSection[]\n  return courses.map((course) => {\n    return {\n      id: course._id,\n      courseName: course.name,\n    }\n  })\n}\n\nexport const getProjectForSection = async (\n  id: string,\n): Promise<ProjectForSection> => {\n  const projects = (await api.get('/projects')).data as ProjectDataForSection[]\n  const project = projects.find(\n    (project) => project.sectionId && project.sectionId === id,\n  )\n  return {\n    id: project?._id || '',\n    projectName: project?.projectName || '',\n  }\n}\n\nexport const getSection = async (id: string): Promise<Section | null> => {\n  let sectionRes: AxiosResponse<SectionData>\n  let section: SectionData\n  try {\n    sectionRes = await api.get(`/sections/${id}`)\n    section = sectionRes.data\n  } catch (err) {\n    return null\n  }\n  return {\n    id: section._id,\n    name: section.name,\n  }\n}\n\nexport const getOneSection = async (id: string): Promise<ManageSection> => {\n  const section = (await api.get(`/sections/${id}`)).data as ManageSectionData\n  let course = null\n  if (section.course) {\n    try {\n      const coursesResponse = await api.get(`/courses/${section.course}`)\n      course = coursesResponse.data as CourseDataForSection\n    } catch (e) {}\n  }\n  return {\n    id: section._id,\n    name: section.name,\n    startDate: section.startDate\n      ? new Date(section.startDate).getTime() / 1000\n      : undefined,\n    endDate: section.endDate\n      ? new Date(section.endDate).getTime() / 1000\n      : undefined,\n    description: section.description,\n    courseName: course ? course.name : '',\n    courseId: course?._id || '',\n  }\n}\n\nexport const patchSection = async (id: string, data: NewSectionData) => {\n  await api.put(`/sections/${id}`, data)\n}\n\nexport const addSection = async (data: NewSectionData) => {\n  await api.post(`/sections`, data)\n}\n\nexport const deleteSection = async (id: string) => {\n  await api.delete(`/sections/${id}`)\n}\n\nexport const displayFormattedDate = (date: number) => {\n  if (!date) return ''\n  const dateObject = new Date(date * 1000)\n\n  return `${dateObject.toLocaleDateString()}`\n}\n","import api from './api.service'\nimport { CourseData, TeamData } from '../models'\nimport {\n  userStatusDict,\n  userTypeDict,\n  User,\n  UserData,\n  UserFilters,\n  IUser,\n} from '../models/User.model'\nimport { calcAvgGrade } from './gradesProcessing'\nimport { getSection } from './Section.api'\nimport { getUserFromLocalStorage } from '../app/utils'\n\nconst endpoint = '/users'\n\nfunction transformUserData(data: UserData): User {\n  return {\n    ...data,\n    id: data._id,\n    type: userTypeDict[data.type],\n    status: userStatusDict[data.status],\n    averageGrade: data.grades.length\n      ? data.grades.map(calcAvgGrade).reduce((a, b) => a + b, 0) /\n        data.grades.length\n      : 0,\n  }\n}\n\nexport const getUsers = async (): Promise<User[]> => {\n  const response = await api.get(endpoint)\n  return response.data.map(transformUserData)\n}\n\nexport const getUser = async (id: string) => {\n  const response = await api.get(`${endpoint}/${id}`)\n  const user = response.data as UserData\n  console.log({ userID: id })\n  return transformUserData(user)\n}\n\nexport const getUsersOfType = async (type: string): Promise<User[]> => {\n  const users = await getUsers()\n  return users.filter((user: User) => user.type === type)\n}\n\nexport const filterUsers = async (filters: UserFilters): Promise<User[]> => {\n  const response = await api.get(endpoint, { data: filters })\n  const users = response.data.map(transformUserData)\n  if (filters.type && filters.type.length > 0) return [users[0]]\n  if (filters.status && filters.status.length > 0) return [users[1]]\n  return [users[3]]\n}\n\nexport const getParticipantsNotInTeam = async (): Promise<User[]> => {\n  const users = await getUsersOfType('Participant')\n  const activeCourse = localStorage.getItem('activeCourse')\n  const courseId: string = activeCourse ? JSON.parse(activeCourse)._id : null\n  const courseRes = await api.get('/courses/' + (courseId ?? ''))\n  const course = courseRes.data as CourseData\n  const teams = (await api.get(`/courses/${course._id}/teams`))\n    .data as TeamData[]\n  const result = users.filter((user) => {\n    return teams.every(\n      (team) =>\n        !team.users ||\n        team.users.every((u) => {\n          if (u._id !== user.id) console.log('asd')\n          return u._id !== user.id\n        }),\n    )\n  })\n  return result\n}\n\nexport const getUserMe = async (userID: string) => {\n  return api.get(`${endpoint}/me/${userID}`)\n}\nexport const deleteUser = async (userID: string) => {\n  return api.delete(`${endpoint}/${userID}`)\n}\nexport const updateUser = async (userID: string, user: IUser) => {\n  return api.patch(`${endpoint}/${userID}`, user)\n}\n\nexport const fetchUserMe = async (): Promise<IUser> => {\n  const userDataLS = getUserFromLocalStorage()\n  const userID = userDataLS.userId ?? ''\n  const response = await getUserMe(userID)\n  const userData = response.data\n\n  const gradesExtended = await Promise.all(\n    userData.grades.map(async (grade: any) => {\n      try {\n        if (!grade?.sectionId) throw Error\n        const section = await getSection(grade.sectionId)\n        return {\n          ...grade,\n          'Section name': section?.name || '',\n        }\n      } catch {\n        return {\n          ...grade,\n          'Section name': 'Section does not exist',\n        }\n      }\n    }),\n  )\n\n  userData.grades = gradesExtended\n  return userData\n}\n\nexport const fetchUserProfile = async (): Promise<IUser> => {\n  const userData = await fetchUserMe()\n  return {\n    name: userData.name,\n    surname: userData.surname,\n    type: userData.type,\n    status: userData.status,\n    email: userData.email,\n  }\n}\n","import { QueryClient } from 'react-query'\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: false,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      notifyOnChangeProps: [\n        'data',\n        'error',\n        'isFetching',\n        'isLoading',\n        'isError',\n      ],\n    },\n  },\n})\n\nexport default queryClient\n","import queryClient from '../../QueryClient'\n\nexport type QueryKey = string[] | string\n\nexport const genericSearch = <T>(queryKey: QueryKey) => (\n  column: keyof T,\n  search: string,\n) => {\n  if (search === '')\n    return queryClient.refetchQueries([queryKey], { active: true })\n\n  queryClient.setQueryData(queryKey, (items) => {\n    if (!items) return items\n\n    return (items as T[]).filter((item) => `${item[column]}`.match(search))\n  })\n}\n\nexport const genericSort = <T>(queryKey: QueryKey) => (column: keyof T) => {\n  queryClient.setQueryData(queryKey, (items) => {\n    if (!items || !(items as T[]).length) return items\n\n    const itemsArr = [...(items as T[])]\n    if (typeof itemsArr[0][column] === 'number')\n      // @ts-ignore\n      return itemsArr.sort((a, b) => a[column] - b[column])\n\n    return itemsArr.sort((a, b) => `${a[column]}`.localeCompare(`${b[column]}`))\n  })\n}\n","import * as api from '../../api/User.api'\nimport queryClient from '../../QueryClient'\nimport { User, UserFilters, userStatusDict, userTypeDict } from '../../models'\nimport { genericSearch, genericSort } from './useGenericQuery'\nimport { useQuery } from 'react-query'\n\nconst useUsers = () => useQuery('users', api.getUsers)\n\nexport default useUsers\nexport const searchUser = genericSearch<User>('users')\nexport const sortUsers = genericSort<User>('users')\n\nexport const filterUsers = async (filters: UserFilters) => {\n  await queryClient.refetchQueries(['users'], { active: true })\n  queryClient.setQueryData('users', (users) => {\n    if (!users) return users\n\n    return (users as User[]).filter(\n      (user) =>\n        (filters.type.length === 0 ||\n          filters.type.some((type) => user.type === userTypeDict[type])) &&\n        (filters.status.length === 0 ||\n          filters.status.some(\n            (status) => user.status === userStatusDict[status],\n          )),\n    )\n  })\n}\n","import * as api from '../../api/User.api'\nimport useMutationWithConfirm, { Options } from '../useMutationWithConfirm'\nimport { IUser, User } from '../../models'\nimport { useQuery, UseQueryOptions } from 'react-query'\n\nconst queryKey = 'user'\n\nconst useUser = (id: string) => useQuery([queryKey, id], () => api.getUser(id))\nexport default useUser\n\nexport const useUserMe = (options?: Partial<UseQueryOptions<any>>) =>\n  useQuery([queryKey, 'me'], () => api.fetchUserMe(), options)\n\nexport const useUserProfile = (options?: Partial<UseQueryOptions<IUser>>) =>\n  useQuery([queryKey, 'myProfile'], () => api.fetchUserProfile(), options)\n\nexport const useUpdateUser = (\n  options?: Partial<Options<User, [string, IUser]>>,\n) =>\n  useMutationWithConfirm(\n    ([id, user]: [string, IUser]) => api.updateUser(id, user),\n    {\n      invalidate: queryKey,\n      ...options,\n    },\n  )\n\nexport const useDeleteUser = (options?: Partial<Options<User[], string>>) =>\n  useMutationWithConfirm(api.deleteUser, {\n    invalidate: queryKey + 's',\n    ...options,\n  })\n\nexport const useParticipantsNotInTeam = (\n  options?: Partial<UseQueryOptions<User[]>>,\n) => useQuery('participantsNotInTeam', api.getParticipantsNotInTeam, options)\n\nexport const useUsersOfType = (\n  type: string,\n  options?: Partial<UseQueryOptions<User[]>>,\n) => useQuery(type + 's', () => api.getUsersOfType(type), options)\n","import api from './api.service'\n\nimport {\n  Course,\n  CourseCreateObject,\n} from '../models/Course.model'\n\nexport interface CourseListElementDto {\n  _id: string\n  name: string\n  description?: string\n  startDate: string\n  endDate: string\n}\n\nconst endpoint: string = 'courses'\n\nexport const getCourse = async (id: string) => {\n  return api.get(`${endpoint}/${id}`)\n}\n\nexport const createCourse = async (course: CourseCreateObject) => {\n  return api.post(endpoint, course)\n}\n\nexport const fetchCourses = async () => {\n  return api.get(endpoint)\n}\n\nexport const updateCourse = async (course: Course) => {\n  return api.put(`${endpoint}/${course._id}`, course)\n}\n\nexport const deleteCourse = async (courseId: string) => {\n  return api.delete(`${endpoint}/${courseId}`)\n}\n\nexport const fetchCourseSections = async (courseId: string) => {\n  return api.get(`${endpoint}/${courseId}/sections`)\n}\n","import * as api from '../../api/Course.api'\nimport { CourseListElementModel } from '../../pages/Admin/CourseList/CourseListSlice'\nimport { useQuery } from 'react-query'\n\nexport const fetchCoursesAndSort = async () => {\n  const response = await api.fetchCourses()\n  const courses: CourseListElementModel[] = response.data\n  courses.sort(function (courseListElement1, courseListElement2) {\n    const courseListElementStartDate1 = new Date(\n      courseListElement1.startDate,\n    ).getTime()\n    const courseListElementStartDate2 = new Date(\n      courseListElement2.startDate,\n    ).getTime()\n    return courseListElementStartDate2 - courseListElementStartDate1\n  })\n\n  return courses\n}\n\nconst useCourses = () => useQuery('courses', fetchCoursesAndSort)\nexport default useCourses\n","import * as api from '../../api/Course.api'\nimport * as sectionsApi from '../../api/Section.api'\nimport {\n  Course,\n  CourseDto,\n  SectionListElement,\n} from '../../models/Course.model'\nimport { useQuery } from 'react-query'\n\nconst fetchCourseAsync = async (courseId: string): Promise<Course> => {\n  const courseResponse = await api.getCourse(courseId)\n  const courseDto: CourseDto = courseResponse.data\n  const sectionsResponse = await api.fetchCourseSections(courseId)\n  const sections: SectionListElement[] = sectionsResponse.data\n  return {\n    ...courseDto,\n    sections: sections,\n  }\n}\n\nconst useCourse = (courseId: string) =>\n  useQuery(['course', courseId], () => fetchCourseAsync(courseId))\nexport default useCourse\n\nexport const updateCourseAsync = async (\n  course: Course,\n  sectionsIdToDelete: string[],\n): Promise<void> => {\n  sectionsIdToDelete.forEach(async (sectionId) => {\n    await sectionsApi.deleteSection(sectionId)\n  })\n  await api.updateCourse(course)\n}\n","import api from './api.service'\nimport * as sectionService from './Section.api'\nimport { ProjectData, SectionData } from '../models'\n\nconst endpoint = `projects`\n\nexport const getRefProjects = async () => {\n  return (await api.getMany<ProjectDto[]>(`${endpoint}`)).data.map((d) => ({\n    ...d,\n    startDate: new Date(d.startDate).toLocaleDateString(),\n    endDate: new Date(d.endDate).toLocaleDateString(),\n  }))\n}\n\nexport const getRefProject = async (projectID: string): Promise<ProjectDto> => {\n  const { data } = await api.get<PopulatedProject>(`${endpoint}/${projectID}`)\n\n  return {\n    ...data,\n    id: data._id,\n    sectionId: data.sectionId._id,\n    sectionName: data.sectionId.name,\n    startDate: new Date(data.sectionId.startDate).toLocaleDateString(),\n    endDate: new Date(data.sectionId.endDate).toLocaleDateString(),\n  }\n}\n\nexport const createRefProject = async (project: Omit<ProjectData, '_id'>) => {\n  return api.post<Omit<ProjectData, '_id'>, Project>(`${endpoint}`, project)\n}\n\nexport const deleteRefProject = async (projectID: string) => {\n  return api.delete<MessageResponse>(`${endpoint}/${projectID}`)\n}\n\nexport const addRefProject = async (project: ProjectData) => {\n  const res = await createRefProject(project)\n  try {\n    const section = await sectionService.getOneSection(res.data.sectionId)\n    return {\n      ...res.data,\n      sectionName: section?.name || '',\n      course: section?.courseName,\n    }\n  } catch {\n    return {\n      ...res.data,\n      sectionName: 'Section does not exist',\n    }\n  }\n}\n\nexport const updateRefProject = async (project: ProjectData) => {\n  return api.patch<ProjectData, PopulatedProject>(\n    `${endpoint}/${project._id}`,\n    project,\n  )\n}\n\nexport interface ProjectDto {\n  id: string\n  projectName: string\n  sectionName: string\n  sectionId: string\n  startDate: string\n  description: string\n  endDate: string\n  projectUrl: string\n}\n\nexport interface Project {\n  _id: string\n  sectionId: string\n  projectName: string\n  projectUrl: string\n  description: string\n  createdAt: string\n  updatedAt?: string\n}\n\nexport interface PopulatedProject {\n  _id: string\n  sectionId: SectionData\n  projectName: string\n  projectUrl: string\n  description: string\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface MessageResponse {\n  message: string\n}\n","import * as api from '../../api/ReferenceProject.api'\nimport { useQuery, UseQueryOptions } from 'react-query'\n\nconst useProjects = (options?: Partial<UseQueryOptions<api.ProjectDto[]>>) =>\n  useQuery('projects', api.getRefProjects, options)\nexport default useProjects\n","import * as api from '../../api/ReferenceProject.api'\nimport useMutationWithConfirm from '../useMutationWithConfirm'\nimport {\n  createRefProject,\n  deleteRefProject,\n  updateRefProject,\n} from '../../api/ReferenceProject.api'\nimport { useQuery, UseQueryOptions } from 'react-query'\nimport queryClient from '../../QueryClient'\n\nconst queryKey = 'project'\n\nexport const useProject = (\n  id: string,\n  options?: Partial<UseQueryOptions<api.ProjectDto, unknown, api.ProjectDto>>,\n) => useQuery([queryKey, id], () => api.getRefProject(id), options)\nexport default useProject\n\nexport const useUpdateProject = () =>\n  useMutationWithConfirm(updateRefProject, {\n    invalidate: queryKey,\n    onSuccess: ({ data: { _id, sectionId, projectName } }) => {\n      queryClient.setQueryData(queryKey + 's', (cachedData) => {\n        if (!cachedData || !Array.isArray(cachedData)) return cachedData\n\n        return cachedData.map((project) => {\n          if (project.id !== _id) return project\n\n          return {\n            id: _id,\n            sectionName: sectionId.name,\n            sectionId: sectionId._id,\n            projectName,\n            startDate: new Date(sectionId.startDate).toLocaleDateString(),\n            endDate: new Date(sectionId.endDate).toLocaleDateString(),\n          }\n        })\n      })\n    },\n  })\n\nexport const useDeleteProject = () =>\n  useMutationWithConfirm(deleteRefProject, {\n    invalidate: queryKey + 's',\n  })\n\nexport const useCreateProject = () =>\n  useMutationWithConfirm(createRefProject, {\n    invalidate: queryKey + 's',\n  })\n","import api from './api.service'\nimport {\n  GradeSheet,\n  GradeSheetData,\n  TeamProjectData,\n  UserData,\n  Grades,\n  Participant,\n  Reviewer,\n} from '../models'\nimport _ from 'lodash'\n\nexport const getSheets = async () => {\n  const response = await api.get('/grade/sheets')\n  const sheetsData = response.data as GradeSheetData[]\n  const sheets: GradeSheet[] = []\n  for (let i in sheetsData) {\n    const sheet = await getSheetInfo(sheetsData[i])\n    sheets.push(sheet)\n  }\n\n  return sheets\n}\n\nexport const getSheetInfo = async (\n  sheet: GradeSheetData,\n): Promise<GradeSheet> => {\n  let mentorName: string, mentorSurname: string\n  try {\n    const mentorRes = await api.get('/users/' + sheet.mentorID)\n    const mentor = mentorRes.data as UserData\n    ;[mentorName, mentorSurname] = [mentor.name, mentor.surname]\n  } catch (err) {\n    ;[mentorName, mentorSurname] = ['---', '---']\n  }\n\n  let projectName: string, projectUrl: string, projectDescription: string\n  try {\n    const projectRes = await api.get('/teams/projects/' + sheet.projectID)\n    const project: TeamProjectData = projectRes.data\n    projectName = project.projectName\n    projectUrl = project.projectUrl\n    projectDescription = project.description\n  } catch (err) {\n    projectName = '---'\n    ;[projectName, projectUrl, projectDescription] = ['---', '---', '---']\n  }\n\n  const participants = sheet.participants ?? []\n  for (let i in participants) {\n    const user = participants[i]\n    try {\n      const userRes = await api.get('/users/' + user.participantID)\n      const userData = userRes.data as UserData\n      participants[i].name = userData.name\n      participants[i].surname = userData.surname\n    } catch (err) {\n      participants[i].name = '---'\n      participants[i].surname = '---'\n    }\n  }\n\n  const reviewers = sheet.reviewers ?? []\n  const reviewersInfo = await Promise.all(\n    reviewers.map(async (userId) => {\n      const reviewer: Reviewer = {\n        _id: userId,\n        name: '---',\n        surname: '---',\n        email: '---',\n      }\n      try {\n        const userRes = await api.get('/users/' + userId)\n        const userData = userRes.data as UserData\n        reviewer._id = userId\n        reviewer.name = userData.name\n        reviewer.surname = userData.surname\n        reviewer.email = userData.surname\n      } catch (err) {}\n      return reviewer\n    }),\n  )\n\n  return {\n    ..._.omit(sheet, '_id'),\n    id: sheet._id,\n    projectID: sheet.projectID ?? '',\n    mentorID: sheet.mentorID ?? '',\n    participants,\n    mentorGrades: sheet.mentorGrades ?? {},\n    mentorName,\n    mentorSurname,\n    projectName,\n    projectUrl,\n    projectDescription,\n    reviewers: reviewersInfo,\n  }\n}\n\nexport const getSheet = async (id: string) => {\n  const response = await api.get('/grade/sheets/' + id)\n  return getSheetInfo(response.data)\n}\n\nexport const createSheet = async () => {\n  await api.post('/grade/sheets', {\n    mentorID: '507f1f77bcf86cd799439011',\n    projectID: '507f1f77bcf86cd799439011',\n  })\n}\n\nexport const deleteSheet = async (id: string) => {\n  await api.delete('/grade/sheets/' + id)\n}\n\nexport const getMentorSheets = async (\n  mentorId?: string,\n): Promise<GradeSheetData[] | null> => {\n  let gradeSheetsRes\n  try {\n    gradeSheetsRes = await api.get(`/mentors/${mentorId}/grade/sheets`)\n  } catch (err) {\n    return null\n  }\n  return gradeSheetsRes.data as GradeSheetData[]\n}\n\nexport const getParticipants = async (\n  id: string,\n): Promise<(Participant & { id: string })[]> => {\n  const sheet = await getSheet(id)\n  return sheet.participants.map((p) => ({\n    ...p,\n    id: p.participantID,\n  }))\n}\n\nexport const getMentorGrades = async (id: string): Promise<Grades> => {\n  const sheet = await getSheet(id)\n  return sheet.mentorGrades\n}\n\nexport const setMentor = async (id: string, mentorId: string) => {\n  await api.put(`/grade/sheets/${id}/set/mentor/${mentorId}`, {})\n}\n\nexport const setProject = async (id: string, projectId: string) => {\n  await api.put(`/grade/sheets/${id}/set/project/${projectId}`, {})\n}\n\nexport const addParticipant = async (id: string, participantId: string) => {\n  await api.post(`/grade/sheets/${id}/add/participant/${participantId}`, {})\n}\n\nexport const deleteParticipant = async (id: string, participantId: string) => {\n  await api.delete(`/grade/sheets/${id}/participants/${participantId}`)\n}\n\nexport const addReviewer = async (id: string, mentorId: string) => {\n  await api.post(`/grade/sheets/${id}/add/reviewer/${mentorId}`, {})\n}\n\nexport const setReviewers = async (id: string, reviewers: string[]) => {\n  await api.put(`/grade/sheets/${id}/reviewers`, { reviewers })\n}\n\nexport const setMentorReviewerGrade = async (\n  id: string,\n  mentorId: string,\n  grades: Grades,\n) => {\n  await api.put(`/grade/sheets/${id}/reviewers/${mentorId}/grades`, { grades })\n}\n\nexport const patchMentorReviewerGrade = async (\n  id: string,\n  mentorId: string,\n  grades: Grades,\n) => {\n  await api.patch(`/grade/sheets/${id}/reviewers/${mentorId}/grades`, {\n    grades,\n  })\n}\n\nexport const setMentorGrade = async (id: string, grades: Grades) => {\n  await api.put(`/grade/sheets/${id}/mentor/grades`, { grades })\n}\n\nexport const patchMentorGrade = async (id: string, grades: Grades) => {\n  await api.patch(`/grade/sheets/${id}/mentor/grades`, { grades })\n}\n","import { genericSearch, genericSort } from './useGenericQuery'\nimport * as api from '../../api/Sheet.api'\nimport { GradeSheet } from '../../models'\nimport { useQuery } from 'react-query'\n\nconst queryKey = 'sheets'\n\nconst useSheets = () => useQuery(queryKey, () => api.getSheets())\nexport default useSheets\n\nexport const searchSheet = genericSearch<GradeSheet>(queryKey)\nexport const sortSheets = genericSort<GradeSheet>(queryKey)\n","import * as api from '../../api/Sheet.api'\nimport useMutationWithConfirm from '../useMutationWithConfirm'\nimport { Grades } from '../../models'\nimport { useQuery } from 'react-query'\n\nconst queryKey = 'sheet'\n\nconst useSheet = (id: string) =>\n  useQuery([queryKey, id], () => api.getSheet(id))\nexport default useSheet\n\ninterface Options {\n  invalidate?: string | string[]\n}\n\nexport const useSetMentorForSheet = (\n  sheetId: string,\n  { invalidate }: Options,\n) =>\n  useMutationWithConfirm(\n    (mentorId: string) => api.setMentor(sheetId, mentorId),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const useAddUserToSheet = (sheetId: string, { invalidate }: Options) =>\n  useMutationWithConfirm(\n    (participantId: string) => api.addParticipant(sheetId, participantId),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const useAddReviewer = (sheetId: string, { invalidate }: Options) =>\n  useMutationWithConfirm(\n    (mentorId: string) => api.addReviewer(sheetId, mentorId),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const useDeleteUserFromSheet = (\n  sheetId: string,\n  { invalidate }: Options,\n) =>\n  useMutationWithConfirm(\n    (participantId: string) => api.deleteParticipant(sheetId, participantId),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const usePatchMentorGrade = (sheetId: string, { invalidate }: Options) =>\n  useMutationWithConfirm(\n    (grades: Grades) => api.patchMentorGrade(sheetId, grades),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const usePatchMentorReviewerGrade = (\n  sheetId: string,\n  { invalidate }: Options,\n) =>\n  useMutationWithConfirm(\n    ([mentorId, grades]: [string, Grades]) =>\n      api.patchMentorReviewerGrade(sheetId, mentorId, grades),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const useSetMentorGrade = (sheetId: string, { invalidate }: Options) =>\n  useMutationWithConfirm(\n    (grades: Grades) => api.setMentorGrade(sheetId, grades),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const useSetMentorReviewerGrade = (\n  sheetId: string,\n  { invalidate }: Options,\n) =>\n  useMutationWithConfirm(\n    ([mentorId, grades]: [string, Grades]) =>\n      api.setMentorReviewerGrade(sheetId, mentorId, grades),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const useSetProjectForSheet = (\n  sheetId: string,\n  { invalidate }: Options,\n) =>\n  useMutationWithConfirm(\n    (projectId: string) => api.setProject(sheetId, projectId),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const useSetReviewersForSheet = (\n  sheetId: string,\n  { invalidate }: Options,\n) =>\n  useMutationWithConfirm(\n    (participantsIds: string[]) => api.setReviewers(sheetId, participantsIds),\n    {\n      invalidate: invalidate ?? queryKey,\n    },\n  )\n\nexport const useDeleteSheet = ({ invalidate }: Options) =>\n  useMutationWithConfirm(api.deleteSheet, {\n    invalidate: invalidate ?? queryKey,\n  })\n\nexport const useCreateSheet = ({ invalidate }: Options) =>\n  useMutationWithConfirm(api.createSheet, {\n    invalidate: invalidate ?? queryKey,\n  })\n","import { IGrade } from '../models/User.model'\nimport api from './api.service'\nimport * as sectionService from './Section.api'\n\nconst endpoint: string = 'grades'\n\nexport const createGrade = async (userID: string, grade: IGrade) => {\n  return api.post(`${endpoint}/${userID}`, grade)\n}\nexport const updateGrade = async (gradeID: string, grade: IGrade) => {\n  return api.patch(`${endpoint}/${gradeID}`, grade)\n}\nexport const deleteGrade = async (gradeID: string) => {\n  return api.delete(`${endpoint}/${gradeID}`)\n}\n\nexport interface ISectionsUtility {\n  _id: string\n  name?: string\n}\n\nasync function getSectionNames(sections: ISectionsUtility[]) {\n  const tmpSections: ISectionsUtility[] = [...sections]\n  for(let index in sections) {\n    const section = sections[index]\n    const res = await sectionService.getSection(section?._id)\n    try {\n      //@ts-ignore\n      tmpSections[index] = { _id: res._id, name: res.name }\n    } catch (err) {\n      tmpSections[index] = { _id: section?._id, name: 'no section' }\n    }\n  }\n  return tmpSections\n}\n\nexport async function getGrades(userID: string) {\n  const response = await api.get(`${endpoint}/${userID}`)\n  const grades = [...response.data]\n  const sectionsIds: ISectionsUtility[] = grades.map((grade: IGrade) => ({\n    _id: grade.sectionId,\n  }))\n  const sections = await getSectionNames(sectionsIds)\n  return { grades, sections }\n}\n","import { AxiosResponse } from 'axios'\nimport api from './api.service'\nimport { getSection } from './Section.api'\nimport { Project, ProjectData } from '../models'\n\nexport const getProject = async (id: string): Promise<Project | null> => {\n  let projectRes: AxiosResponse<ProjectData>\n  let project: ProjectData\n  try {\n    projectRes = await api.get(`/projects/${id}`)\n    project = projectRes.data\n  } catch (err) {\n    return null\n  }\n  const section = await getSection(project.sectionId)\n  return {\n    id: project._id,\n    name: project.projectName,\n    sectionName: section?.name || '',\n    url: project.projectUrl,\n    description: project.description,\n  }\n}\n","import api from './api.service'\nimport {\n  calcProjectGrade,\n  calcUserProjectGrade,\n  calcUserTasksGrade,\n  calcUserTestsGrade,\n} from '.'\nimport {\n  CourseData,\n  Team,\n  TeamData,\n  TeamInfo,\n  TeamProject,\n  TeamProjectData,\n  User,\n  UserData,\n  userStatusDict,\n  userTypeDict,\n} from '../models'\nimport { getMentorSheets } from './Sheet.api'\nimport { getProject } from './Project.api'\n\nasync function getTeamProjects(\n  id: string,\n  mentorId?: string,\n): Promise<TeamProject[]> {\n  const projectsRes = await api.get(`/teams/${id}/projects`)\n  const projectsData = projectsRes.data as TeamProjectData[]\n  const projects = await Promise.all(\n    projectsData.map(async (project) => {\n      const parentProject = await getProject(project.parentProjectId)\n      return {\n        id: project._id,\n        name: project.projectName,\n        overallGrade: 0,\n        sectionName: parentProject?.sectionName ?? '---',\n        url: project.projectUrl,\n        description: project.description,\n      }\n    }),\n  )\n  const grades = await getMentorSheets(mentorId)\n  grades?.forEach((sheet) => {\n    const idx = projects.findIndex((project) => project.id === sheet.projectID)\n    if (idx > -1) {\n      projects[idx].overallGrade = calcProjectGrade(sheet)[0]\n    }\n  })\n  return projects\n}\n\nexport const getTeams = async (courseId?: string): Promise<Team[]> => {\n  const courseRes = await api.get('/courses/' + (courseId ?? ''))\n  const course = courseRes.data as CourseData\n  const teams = (await api.get(`courses/${course._id}/teams`))\n    .data as TeamData[]\n  return teams.map((team) => ({\n    id: team._id,\n    name: team?.mentor?.name ?? '---',\n    surname: team?.mentor?.surname ?? '---',\n    courseName: course.name,\n    users: team.users,\n  }))\n}\n\nexport const getTeam = async (id: string): Promise<TeamInfo> => {\n  const teamRes = await api.get('/teams/' + id)\n  const team = teamRes.data as TeamData\n  const projects = await getTeamProjects(id, team.mentor?._id)\n  const sheets = await getMentorSheets(team.mentor?._id)\n  const teamInfo: TeamInfo = {\n    id: team._id,\n    mentor: {\n      id: team?.mentor?._id ?? '---',\n      name: team?.mentor?.name ?? '---',\n      surname: team?.mentor?.surname ?? '---',\n    },\n    users: [],\n    projects,\n    teamAvgGrade: 100,\n    maxPoints: 99,\n  }\n  teamInfo.users = team.users.map(\n    (user: UserData): User => {\n      const [tasksPoints, tasksMaxPoints] = calcUserTasksGrade(user)\n      const [testsPoints, testsMaxPoints] = calcUserTestsGrade(user)\n      let [projectsPoints, projectsMaxPoints] = [0, 0]\n      sheets?.forEach((sheet) => {\n        const grade = calcUserProjectGrade(sheet, user._id)\n        if (grade) {\n          projectsPoints += grade[0]\n          projectsMaxPoints += grade[1]\n        }\n      })\n      const averageGrade =\n        3 * tasksPoints + 2 * testsPoints + 5 * projectsPoints\n      const maxGrade =\n        3 * tasksMaxPoints + 2 * testsMaxPoints + 5 * projectsMaxPoints\n      return {\n        ...user,\n        id: user._id,\n        name: user.name,\n        surname: user.surname,\n        type: userTypeDict[user.type],\n        status: userStatusDict[user.status],\n        averageGrade,\n        maxGrade,\n      }\n    },\n  )\n  teamInfo.teamAvgGrade =\n    teamInfo.users.reduce((acc, user) => user.averageGrade ?? 0 + acc, 0) /\n    teamInfo.users.length\n  return teamInfo\n}\n\nexport const setMentor = async (teamId: string, mentorId: string) => {\n  const reqBody = {\n    mentor: mentorId,\n  }\n  await api.patch(`/teams/${teamId}`, reqBody)\n}\n\nexport const addUserToTeam = async (teamId: string, userId: string) => {\n  await api.post(`teams/${teamId}/users`, { userId })\n}\n\nexport const deleteUserFromTeam = async (teamId: string, userId: string) => {\n  await api.delete(`teams/${teamId}/users/${userId}`)\n}\n\nexport const createTeam = async ({\n  courseId,\n  mentorId,\n}: {\n  courseId: string\n  mentorId: string\n}) => {\n  await api.post('/teams', { course: courseId ?? null, mentor: mentorId })\n}\n\nexport const deleteTeam = async (id: string) => {\n  await api.delete('/teams/' + id)\n}\n","import {\n  genericSearch,\n  genericSort,\n  QueryKey,\n} from './useGenericQuery'\nimport * as api from '../../api/Team.api'\nimport { Team } from '../../models'\nimport { useQuery, UseQueryOptions } from 'react-query'\n\nconst queryKey = 'teams'\n\nconst useTeams = (\n  courseId?: string,\n  options?: UseQueryOptions<Team[], unknown, Team[], QueryKey>,\n) => useQuery(queryKey, () => api.getTeams(courseId), options)\nexport default useTeams\n\nexport const searchTeam = genericSearch<Team>(queryKey)\nexport const sortTeams = genericSort<Team>(queryKey)\n","import { useQuery } from 'react-query'\nimport * as api from '../../api/Team.api'\nimport useMutationWithConfirm from '../useMutationWithConfirm'\n\nconst queryKey = 'teams'\n\nconst useTeam = (id: string) => useQuery([queryKey, id], () => api.getTeam(id))\nexport default useTeam\n\nexport const useSetMentor = () =>\n  useMutationWithConfirm((vars: [string, string]) => api.setMentor(...vars), {\n    invalidate: queryKey,\n  })\n\nexport const useAddUserToTeam = () =>\n  useMutationWithConfirm((vars: [string, string]) => api.addUserToTeam(...vars), {\n    invalidate: queryKey,\n  })\n\nexport const useDeleteUserFromTeam = () =>\n  useMutationWithConfirm((vars: [string, string]) => api.deleteUserFromTeam(...vars), {\n    invalidate: queryKey,\n  })\n\nexport const useDeleteTeam = () =>\n  useMutationWithConfirm(api.deleteTeam, {\n    invalidate: queryKey,\n  })\n\nexport const useCreateTeam = (onSuccess?: () => void) =>\n  useMutationWithConfirm(api.createTeam, {\n    invalidate: queryKey,\n    onSuccess\n  })\n\n","import { genericSearch, genericSort } from './useGenericQuery'\nimport * as api from '../../api/Section.api'\nimport { ManageSection } from '../../models'\nimport { useQuery, UseQueryOptions } from 'react-query'\n\nconst queryKey = 'sections'\n\nconst useSections = (options?: Partial<UseQueryOptions<ManageSection[]>>) =>\n  useQuery(queryKey, () => api.getSections(), options)\nexport default useSections\n\nexport const searchSection = genericSearch<ManageSection>(queryKey)\nexport const sortSections = genericSort<ManageSection>(queryKey)\n","import * as api from '../../api/Section.api'\nimport useMutationWithConfirm from '../useMutationWithConfirm'\nimport { NewSectionData } from '../../models'\nimport { useQuery } from 'react-query'\n\nconst queryKey = 'section'\n\nconst useSection = (id: string) =>\n  useQuery([queryKey, id], () => api.getOneSection(id))\nexport default useSection\n\nexport const useProjectForSection = (id: string) =>\n  useQuery([queryKey, id], () => api.getProjectForSection(id))\n\nexport const usePatchSection = () =>\n  useMutationWithConfirm(\n    (vars: [string, NewSectionData]) => api.patchSection(...vars),\n    {\n      invalidate: queryKey,\n    },\n  )\n\nexport const useDeleteSection = () =>\n  useMutationWithConfirm(api.deleteSection, {\n    invalidate: queryKey+'s',\n  })\n\nexport const useCreateSection = () =>\n  useMutationWithConfirm(api.addSection, {\n    invalidate: queryKey+'s',\n  })\n","import * as api from '../../api/Grade.api'\nimport { useQuery } from 'react-query'\nimport { IGrade } from '../../models/User.model'\nimport useMutationWithConfirm from '../useMutationWithConfirm'\n\nconst queryKey = 'grades'\n\nconst useGrades = (userID: string) =>\n  useQuery(queryKey, () => api.getGrades(userID), {\n    enabled: !!userID,\n  })\nexport default useGrades\n\nexport const useUpdateGrade = () =>\n  useMutationWithConfirm(\n    ([gradeID, grade]: [string, IGrade]) => api.updateGrade(gradeID, grade),\n    {\n      invalidate: queryKey,\n      successMessage: 'Update finished successfully',\n      errorMessage: 'Action failed',\n    },\n  )\n\nexport const useDeleteGrade = () =>\n  useMutationWithConfirm(api.deleteGrade, {\n    invalidate: queryKey,\n    successMessage: 'Action finished successfully',\n    errorMessage: 'Action failed',\n  })\n\nexport const useCreateGrade = (userID: string) =>\n  useMutationWithConfirm((grade: IGrade) => api.createGrade(userID, grade), {\n    invalidate: queryKey,\n    successMessage: 'Grade added successfully',\n    errorMessage: 'Action failed',\n  })\n","import React, { useEffect } from 'react'\nimport { UserType } from '../../models/User.model'\nimport { getUserFromLocalStorage } from '../../app/utils'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectMenu } from './MenuSlice'\nimport MenuAdmin from './MenuAdmin'\nimport { setMenu, clearMenu } from './MenuSlice'\nimport debounce from 'lodash.debounce'\nimport MenuParticipant from './MenuParticipant'\nimport MenuMentor from './MenuMentor'\nimport { useUserMe } from '../../hooks'\n\nexport const WIDTH_SMALL_MENU_ON_PX = 900\nexport const DEBOUNCE_RESIZE_MS = 100\n\nexport interface MenuProps {}\n\nconst Menu: React.FC<MenuProps> = (props) => {\n  const dispatch = useDispatch()\n\n  const { showSmallMenu, showSmallMenuUserAction } = useSelector(selectMenu)\n\n  const { userType, userId } = getUserFromLocalStorage()\n  const { data: userData } = useUserMe({\n    enabled: !!userId,\n  })\n  const { name, surname } = userData ?? { name: '', surname: '' }\n\n  useEffect(() => {\n    showSmallMenuUserAction ? dispatch(setMenu()) : dispatch(clearMenu())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showSmallMenuUserAction])\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  })\n\n  const handleResize = debounce(() => {\n    if (window.innerWidth <= WIDTH_SMALL_MENU_ON_PX) {\n      dispatch(setMenu())\n    } else {\n      if (!showSmallMenuUserAction) dispatch(clearMenu())\n    }\n  }, DEBOUNCE_RESIZE_MS)\n\n  //@ts-ignore\n  switch (parseInt(userType)) {\n    case UserType.Admin:\n      return (\n        <MenuAdmin name={name} surname={surname} smallMenu={showSmallMenu} />\n      )\n    case UserType.Mentor:\n      return (\n        <MenuMentor name={name} surname={surname} smallMenu={showSmallMenu} />\n      )\n    default:\n      return (\n        <MenuParticipant\n          name={name}\n          surname={surname}\n          smallMenu={showSmallMenu}\n        />\n      )\n  }\n}\n\nexport default Menu\n","import React from 'react'\nimport styles from './PrivateRoute.module.css'\nimport { Route, RouteProps } from 'react-router-dom'\nimport Menu from '../Menu'\n\nexport interface PrivateRouteProps extends RouteProps {}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = (props) => {\n  return (\n    <div className={styles.container}>\n      <Menu />\n      <div className={styles.content}>\n        <Route {...props} />\n      </div>\n    </div>\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport styles from './PageHeader.module.css'\n\nexport interface PageHeaderProps {\n  name?: string\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = (props) => {\n  return (\n    <div className={styles.headerContainer}>\n      {props.name}\n      {props.children}\n    </div>\n  )\n}\n\nexport default PageHeader\n","import React, { useEffect, useState } from 'react'\nimport styles from './HomePage.module.css'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport PageHeader from '../../../components/PageHeader'\n\nexport interface HomePageProps {}\n\nconst HomePage: React.FC<HomePageProps> = (props) => {\n  const [course, setCourse] = useState<any>(null)\n\n  useEffect(() => {\n    setCourse(JSON.parse(localStorage.getItem('activeCourse')!))\n  }, [])\n\n  return (\n    <div className={styles.container}>\n      <PageHeader name=\"Homepage\" />\n      <div className={styles.description}>\n        <div>\n          <NotificationsIcon\n            fontSize=\"large\"\n            style={{ paddingRight: '20px' }}\n          ></NotificationsIcon>\n          <h2> Next event</h2>\n        </div>\n        <div>\n          {course ? (\n            <div style={{ display: 'block', textAlign: 'center' }}>\n              <h1>{course?.name}</h1>\n              <h3 style={{ marginTop: '2rem' }}>\n                Start date: {new Date(course?.startDate).toLocaleDateString()}\n              </h3>\n              <p style={{ marginTop: '2rem' }}>{course?.description}</p>\n            </div>\n          ) : (\n            <h2>Information soon!</h2>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport default createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#292929',\n      paper: '#1C1C1C',\n    },\n    text: {\n      primary: '#fff',\n    },\n  },\n})\n\nexport const mainTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#ffffff',\n    },\n    secondary: {\n      main: '#ff384a',\n    },\n  },\n  typography: {\n    fontFamily: 'Montserrat',\n  },\n})\n\nexport const addBtnTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2196F3',\n    },\n  },\n})\n\nexport const UButtonTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1a90ff',\n    },\n    secondary: {\n      main: '#ff384a',\n    },\n  },\n})\n","import React, { useState } from 'react'\nimport { CourseCreateObject, Course } from '../../../models'\nimport TextField from '@material-ui/core/TextField'\nimport { Button, ThemeProvider } from '@material-ui/core'\nimport { useHistory } from 'react-router-dom'\nimport PageHeader from '../../../components/PageHeader'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport 'date-fns'\n\nimport DateFnsUtils from '@date-io/date-fns'\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'\nimport { mainTheme } from '../../../theme/customMaterialTheme'\nimport { createCourse } from '../../../api'\n\nexport interface CourseCreateProps {}\n\nconst CourseCreate: React.FC<CourseCreateProps> = (props) => {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: '90%',\n        },\n      },\n      nameInput: {\n        '&.MuiTextField-root': {\n          width: '50%',\n          paddingBottom: '2%',\n        },\n      },\n      container: {\n        textAlign: 'left',\n        fontFamily: 'Montserrat',\n        backgroundColor: '#1C1C1C',\n        border: '1px solid #666666',\n      },\n      inputs: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        borderTop: '1px solid #666666',\n        paddingTop: '2%',\n      },\n      header: {\n        paddingLeft: '3%',\n      },\n      dateContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '2% 15%',\n      },\n      datePicker: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '50px',\n      },\n      button: {\n        backgroundColor: '#1a90ff',\n        margin: '2% 0',\n        width: '120px',\n        '&:hover': {\n          backgroundColor: '#2272bd',\n        },\n      },\n      buttonAlignment: {\n        display: 'flex',\n        justifyContent: 'center',\n      },\n    }),\n  )\n\n  const classes = useStyles()\n\n  const [courseName, changeCourseName] = useState('')\n  const [description, changeDescription] = useState('')\n  const [startDate, changeStartDate] = useState<Date | null>(new Date())\n  const [endDate, changeEndDate] = useState<Date | null>(new Date())\n  const history = useHistory()\n\n  const handleCourseNameChange = (e: any) => {\n    changeCourseName(e.target.value)\n  }\n\n  const handleDescriptionChange = (e: any) => {\n    changeDescription(e.target.value)\n  }\n\n  const handleStartDateChange = (date: Date | null) => {\n    changeStartDate(date)\n  }\n\n  const handleEndDateChange = (date: Date | null) => {\n    changeEndDate(date)\n  }\n\n  const handleSaveButtonClick = async () => {\n    const course: CourseCreateObject = {\n      name: courseName,\n      description: description,\n      startDate: startDate!,\n      endDate: endDate!,\n    }\n\n    createCourse(course).then((response: any) => {\n      const createdCourse: Course = response.data\n      history.push('/courses/' + createdCourse._id)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <PageHeader name={'Create Course'} />\n      <div className={classes.container}>\n        <div className={classes.header}>\n          <h3>Manage course</h3>\n        </div>\n        <div className={classes.inputs}>\n          <TextField\n            label=\"Course name\"\n            className={classes.nameInput}\n            onChange={handleCourseNameChange}\n            variant=\"outlined\"\n          ></TextField>\n          <TextField\n            label=\"Course description\"\n            variant=\"outlined\"\n            multiline\n            onChange={handleDescriptionChange}\n          ></TextField>\n        </div>\n        <div>\n          <div className={classes.dateContainer}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline1\"\n                label=\"Start date\"\n                inputVariant=\"outlined\"\n                value={startDate}\n                onChange={handleStartDateChange}\n              />\n              <DatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"dd/MM/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline2\"\n                label=\"End date\"\n                inputVariant=\"outlined\"\n                value={endDate}\n                onChange={handleEndDateChange}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n          <ThemeProvider theme={mainTheme}>\n            <div className={classes.buttonAlignment}>\n              <Button\n                className={classes.button}\n                onClick={handleSaveButtonClick}\n                variant=\"text\"\n                disabled={!courseName || !startDate || !endDate}\n              >\n                SAVE\n              </Button>\n            </div>\n          </ThemeProvider>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CourseCreate\n","import React from 'react'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Slide,\n} from '@material-ui/core'\nimport { TransitionProps } from '@material-ui/core/transitions'\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\ntype EventType = React.MouseEvent<HTMLButtonElement, MouseEvent>\nexport interface ConfirmationDialogProps {\n  title?: string\n  content?: string\n  isOpen: boolean\n  onClose: (event?: EventType) => void\n  handleCancel: (event?: EventType) => void\n  handleConfirm: (event?: EventType) => void\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = (props) => {\n  return (\n    <Dialog\n      open={props.isOpen}\n      onClose={() => props.onClose()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      TransitionComponent={Transition}\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {props.content}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleCancel} color=\"primary\">\n          CANCEL\n        </Button>\n        <Button onClick={props.handleConfirm} color=\"primary\" autoFocus>\n          CONFIRM\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default ConfirmationDialog\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { UButtonTheme } from '../../theme/customMaterialTheme'\nimport Button from '@material-ui/core/Button'\n\nexport interface UButtonProps {\n  text: string\n  color?: 'primary' | 'secondary'\n  onClick: (event?: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\n\nconst UButton: React.FC<UButtonProps> = ({\n  text,\n  color = 'primary',\n  onClick,\n}) => {\n  return (\n    <ThemeProvider theme={UButtonTheme}>\n      <div style={{ margin: '.5rem' }}>\n        <Button variant=\"contained\" color={color} onClick={onClick}>\n          <span>{text}</span>\n        </Button>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default UButton\n","import React, { useState } from 'react'\nimport ConfirmationDialog from '../ConfirmationDialog'\nimport UButton from '../UButton'\n\ntype EventType = React.MouseEvent<HTMLButtonElement, MouseEvent>\n\nexport interface ConfirmButtonProps {\n  text: string\n  confirmTitle: string\n  confirmContent?: string\n  onConfirm: (event?: EventType) => void\n  onClose?: (event?: EventType) => void\n}\nconst ConfirmButton: React.FC<ConfirmButtonProps> = ({\n  text,\n  confirmTitle,\n  confirmContent = 'This action is irreversible.',\n  onConfirm,\n  onClose,\n}) => {\n  const [isConfirmOpen, setIsConfirmOpen] = useState(false)\n\n  const handleCancelConfirm = (e?: EventType) => {\n    setIsConfirmOpen(false)\n    onClose && onClose(e)\n  }\n  const handleConfirm = (e?: EventType) => {\n    onConfirm(e)\n    setIsConfirmOpen(false)\n  }\n  return (\n    <>\n      <ConfirmationDialog\n        title={confirmTitle}\n        content={confirmContent}\n        isOpen={isConfirmOpen}\n        onClose={handleCancelConfirm}\n        handleConfirm={handleConfirm}\n        handleCancel={handleCancelConfirm}\n      />\n      <UButton\n        text={text}\n        color=\"secondary\"\n        onClick={() => setIsConfirmOpen(true)}\n      />\n    </>\n  )\n}\n\nexport default ConfirmButton\n","import React from 'react'\nimport ConfirmButton from '../ConfirmButton'\n\ntype EventType = React.MouseEvent<HTMLButtonElement, MouseEvent>\n\nexport interface DeleteButtonProps {\n  confirmTitle: string\n  confirmContent?: string\n  onConfirm: (event?: EventType) => void\n  onClose?: (event?: EventType) => void\n}\nconst DeleteButton: React.FC<DeleteButtonProps> = (props) => {\n  return <ConfirmButton {...props} text={'DELETE'} />\n}\n\nexport default DeleteButton\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { CourseState } from '../../../models'\n\nconst initialState: CourseState = { sectionsIdToDelete: [] }\n\nexport const courseSlice = createSlice({\n  name: 'course',\n  initialState,\n  reducers: {\n    resetSectionsToDelete: (state) => {\n      state.sectionsIdToDelete = []\n    },\n    deleteSection: (state, action: PayloadAction<string>) => {\n      const sectionId = action.payload\n      state.sectionsIdToDelete.push(sectionId)\n    },\n  },\n})\n\nexport const { resetSectionsToDelete, deleteSection } = courseSlice.actions\n\nexport default courseSlice.reducer\n","import { Box } from '@material-ui/core'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport DeleteButton from '../../../components/DeleteButton'\nimport { SectionListElement } from '../../../models'\nimport { deleteSection } from './CourseDetailsSlice'\n\ninterface CourseSectionElementProps {\n  section: SectionListElement\n  isEdit: boolean\n}\n\nconst CourseSectionElement = ({\n  section,\n  isEdit,\n}: CourseSectionElementProps) => {\n  const dispatch = useDispatch()\n  const handleDeleteButtonClick = () => {\n    dispatch(deleteSection(section._id))\n  }\n\n  return (\n    <Box\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      width=\"350px\"\n    >\n      <Box>\n        <p>{section.name}</p>\n      </Box>\n      {isEdit && (\n        <DeleteButton\n          confirmTitle=\"Are you sure you want to delete this section?\"\n          onConfirm={handleDeleteButtonClick}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default CourseSectionElement\n","import { Breadcrumbs, Link, Typography } from '@material-ui/core'\nimport React from 'react'\nimport styles from './ReusableGoBack.module.css'\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded'\nimport { useHistory } from 'react-router-dom'\n\nexport interface ReusableGoBackProps {\n  pageName: string\n  pageLink?: string\n  elementName: string\n}\n\nconst ReusableGoBack: React.FC<ReusableGoBackProps> = ({\n  pageName,\n  elementName,\n}) => {\n  const history = useHistory()\n  return (\n    <div className={styles.container_goback}>\n      <Breadcrumbs aria-label=\"breadcrumb\" className={styles.breadcrumbs}>\n        <Link\n          onClick={() => history.goBack()}\n          color=\"textPrimary\"\n          className={styles.breadcrumbs_link}\n        >\n          <ArrowBackRoundedIcon className={styles.icon_back} />\n          {pageName}\n        </Link>\n        <Typography>{elementName}</Typography>\n      </Breadcrumbs>\n    </div>\n  )\n}\n\nexport default ReusableGoBack\n","import React, { useEffect, useState } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField'\nimport CourseSectionElement from './CourseSectionListElement'\nimport {\n  Button,\n  makeStyles,\n  Theme,\n  createStyles,\n  Box,\n  ThemeProvider,\n  LinearProgress,\n} from '@material-ui/core'\nimport PageHeader from '../../../components/PageHeader'\nimport UButton from '../../../components/UButton'\n\nimport DateFnsUtils from '@date-io/date-fns'\nimport { format } from 'date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers'\nimport { useHistory } from 'react-router-dom'\nimport { mainTheme } from '../../../theme/customMaterialTheme'\nimport ReusableGoBack from '../../../components/ReusableGoBack'\nimport { Course, SectionListElement } from '../../../models'\nimport useCourse, { updateCourseAsync } from '../../../hooks/useQuery/useCourse'\nimport { useAppSelector } from '../../../hooks/hooks'\nimport { resetSectionsToDelete } from './CourseDetailsSlice'\nimport { useMutationWithConfirm } from '../../../hooks'\n\nexport interface CourseProps {\n  id: string\n}\n\nconst CourseComponent = ({ match }: RouteComponentProps<CourseProps>) => {\n  const history = useHistory()\n  const { sectionsIdToDelete } = useAppSelector((state) => state.courseDetails)\n  const [courseName, changeCourseName] = useState('')\n  const [description, changeDescription] = useState('')\n  const [startDate, changeStartDate] = useState<Date | null>(new Date())\n  const [endDate, changeEndDate] = useState<Date | null>(new Date())\n  const [isEdit, setIsEdit] = useState(false)\n  const { isLoading, data, error } = useCourse(match.params.id)\n  const { mutate: updateCourse } = useMutationWithConfirm(\n    (vars: [Course, string[]]) => updateCourseAsync(...vars),\n    {\n      onSettled: () => resetSectionsToDelete(),\n      invalidate: 'course',\n    },\n  )\n\n  const classes = useStyles()\n\n  const toggleEdit = () => {\n    setIsEdit(!isEdit)\n  }\n\n  const handleCourseNameChange = (e: any) => {\n    changeCourseName(e.target.value)\n  }\n\n  const handleDescriptionChange = (e: any) => {\n    changeDescription(e.target.value)\n  }\n\n  const handleAddButtonClick = () => {\n    history.push('/sections/create')\n  }\n\n  const handleSaveButtonClick = () => {\n    const courseToSave: Course = {\n      ...data!,\n      name: courseName,\n      description: description,\n      startDate: startDate!.toISOString(),\n      endDate: endDate!.toISOString(),\n    }\n\n    updateCourse([courseToSave, sectionsIdToDelete])\n  }\n\n  const handleStartDateChange = (date: Date | null) => {\n    changeStartDate(date)\n  }\n\n  const handleEndDateChange = (date: Date | null) => {\n    changeEndDate(date)\n  }\n\n  useEffect(() => {\n    if (!data) {\n      return\n    }\n    changeCourseName(data.name)\n    changeDescription(data.description ?? '')\n    changeStartDate(new Date(Date.parse(data.startDate)))\n    changeEndDate(new Date(Date.parse(data.endDate)))\n  }, [data])\n\n  if (isLoading) return <LinearProgress />\n  if (error) return <div>{(error as Error).message}</div>\n\n  return (\n    <div className={classes.root}>\n      <PageHeader>\n        <ReusableGoBack\n          pageName=\"Course\"\n          pageLink=\"/courses\"\n          elementName={courseName}\n        />\n      </PageHeader>\n      <div className={classes.container}>\n        <div className={classes.header}>\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <h3>Manage course</h3>\n            <Box marginRight=\"1%\">\n              <UButton\n                text=\"EDIT\"\n                color=\"primary\"\n                onClick={toggleEdit}\n              ></UButton>\n            </Box>\n          </Box>\n        </div>\n        <div className={classes.inputs}>\n          {isEdit ? (\n            <div>\n              <TextField\n                label=\"Course name\"\n                className={classes.nameInput}\n                onChange={handleCourseNameChange}\n                variant=\"outlined\"\n                value={courseName}\n              ></TextField>\n              <TextField\n                label=\"Course description\"\n                variant=\"outlined\"\n                multiline\n                onChange={handleDescriptionChange}\n                value={description}\n              ></TextField>\n            </div>\n          ) : (\n            <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n              <h3>{courseName}</h3>\n              <Box>\n                <p>{description}</p>\n              </Box>\n            </Box>\n          )}\n        </div>\n        <Box\n          display=\"flex\"\n          justifyContent=\"start\"\n          borderTop=\"1px solid #666666\"\n          alignContent=\"space-between\"\n          margin=\"3% 0\"\n        >\n          <Box marginLeft=\"3%\" marginTop=\"2%\" width=\"400px\">\n            <h4>Sections:</h4>\n            {data?.sections.map((section: SectionListElement) => (\n              <CourseSectionElement\n                section={section}\n                isEdit={isEdit}\n                key={section._id}\n              />\n            ))}\n            {isEdit && <UButton text=\"ADD\" onClick={handleAddButtonClick} />}\n          </Box>\n          <Box marginTop=\"2%\">\n            <h4>Dates:</h4>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              {isEdit ? (\n                <Box>\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label=\"Start date\"\n                    inputVariant=\"outlined\"\n                    value={startDate}\n                    onChange={handleStartDateChange}\n                  />\n                  <KeyboardDatePicker\n                    disableToolbar\n                    variant=\"inline\"\n                    format=\"dd/MM/yyyy\"\n                    margin=\"normal\"\n                    id=\"date-picker-inline\"\n                    label=\"End date\"\n                    inputVariant=\"outlined\"\n                    value={endDate}\n                    onChange={handleEndDateChange}\n                  />\n                </Box>\n              ) : (\n                <Box display=\"flex\">\n                  <Box\n                    paddingRight=\"6rem\"\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                  >\n                    <p>Start date:</p>\n                    <p>End date:</p>\n                  </Box>\n                  <Box display=\"flex\" flexDirection=\"column\">\n                    <p>{startDate ? format(startDate, 'dd/MM/yyyy') : ''}</p>\n                    <p>{endDate ? format(endDate, 'dd/MM/yyyy') : ''}</p>\n                  </Box>\n                </Box>\n              )}\n            </MuiPickersUtilsProvider>\n          </Box>\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          borderTop=\"1px solid #666666\"\n        >\n          {isEdit ? (\n            <ThemeProvider theme={mainTheme}>\n              <Button\n                className={classes.button}\n                onClick={handleSaveButtonClick}\n                variant=\"text\"\n                disabled={!courseName || !startDate || !endDate}\n              >\n                SAVE\n              </Button>\n            </ThemeProvider>\n          ) : null}\n        </Box>\n      </div>\n    </div>\n  )\n}\n\nexport default CourseComponent\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '90%',\n      },\n    },\n    nameInput: {\n      '&.MuiTextField-root': {\n        width: '100%',\n        paddingBottom: '2%',\n      },\n    },\n    container: {\n      textAlign: 'left',\n      fontFamily: 'Montserrat',\n      backgroundColor: '#1C1C1C',\n      border: '1px solid #666666',\n    },\n    inputs: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      borderTop: '1px solid #666666',\n      paddingTop: '2%',\n    },\n    header: {\n      paddingLeft: '3%',\n    },\n    datePicker: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '50px',\n    },\n    button: {\n      backgroundColor: '#1a90ff',\n      margin: '2% 0',\n      width: '120px',\n      '&:hover': {\n        backgroundColor: '#2272bd',\n      },\n    },\n  }),\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport * as ActiveCourse from '../../../app/utils'\n\nexport interface CourseListElementModel {\n  _id: string\n  name: string\n  description?: string\n  startDate: string\n  endDate: string\n}\n\ninterface CourseListState {\n  activeCourse?: CourseListElementModel\n}\n\nconst initialState: CourseListState = {\n  activeCourse: ActiveCourse.getActiveCourse(),\n}\n\nexport const courseListSlice = createSlice({\n  name: 'courseList',\n  initialState,\n  reducers: {\n    setActiveCourse: (state, action: PayloadAction<CourseListElementModel>) => {\n      const course = action.payload\n      ActiveCourse.setActiveCourse(course)\n      state.activeCourse = course\n    },\n  },\n})\n\nexport const { setActiveCourse } = courseListSlice.actions\n\nexport default courseListSlice.reducer\n","import React from 'react'\nimport { Box } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { useHistory } from 'react-router-dom'\nimport { setActiveCourse, CourseListElementModel } from './CourseListSlice'\nimport * as courseApi from '../../../api/Course.api'\nimport { useAppDispatch, useMutationWithConfirm } from '../../../hooks'\nimport UButton from '../../../components/UButton'\nimport { format } from 'date-fns'\nimport DeleteButton from '../../../components/DeleteButton'\n\nexport interface CourseListElementProps {\n  course: CourseListElementModel\n  isActive: boolean\n}\n\nconst CourseListElement: React.FC<CourseListElementProps> = ({\n  course,\n  isActive,\n}) => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useAppDispatch()\n  const { mutate: deleteCourse } = useMutationWithConfirm(\n    courseApi.deleteCourse,\n    {\n      successMessage: 'Success!',\n      errorMessage: 'Something went wrong :(',\n      invalidate: 'courses',\n    },\n  )\n\n  const handleConfirmButtonClick = (event: any) => {\n    deleteCourse(course._id)\n    event.stopPropagation()\n  }\n\n  const handleEditButtonClick = (event?: any) => {\n    history.push('courses/' + course._id)\n    event?.stopPropagation()\n  }\n\n  const handleCourseClick = (event?: any) => {\n    dispatch(setActiveCourse(course))\n    event?.stopPropagation()\n  }\n\n  const boxClasses = isActive\n    ? `${classes.box} ${classes.boxActive}`\n    : classes.box\n\n  return (\n    <div\n      className={boxClasses}\n      onClick={handleCourseClick}\n      data-testid=\"course-list-element\"\n    >\n      <div className={classes.name}>{course.name}</div>\n      <div>\n        <Box display=\"flex\" justifyContent=\"space-between\" padding=\"4% 8%\">\n          <div className={classes.date}>Start date:</div>\n          <div>{format(new Date(course.startDate), 'dd/MM/yyyy')}</div>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"space-between\" padding=\"4% 8%\">\n          <div className={classes.date}>End date:</div>\n          <div>{format(new Date(course.endDate), 'dd/MM/yyyy')}</div>\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\" padding=\"7% 0%\">\n          <DeleteButton\n            confirmTitle={'Are you sure you want to delete this course?'}\n            onConfirm={handleConfirmButtonClick}\n          />\n          <UButton\n            text=\"EDIT\"\n            color=\"primary\"\n            onClick={handleEditButtonClick}\n          ></UButton>\n        </Box>\n      </div>\n    </div>\n  )\n}\n\nexport default CourseListElement\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    box: {\n      border: '1px solid #666666',\n      width: '25%',\n      margin: '2%',\n      backgroundColor: '#1C1C1C',\n      '&:hover': {\n        borderColor: '#2196F3',\n        cursor: 'pointer',\n        outlineStyle: 'solid',\n        outlineColor: '#2196F3',\n      },\n    },\n    boxActive: {\n      borderColor: '#FBA846',\n      outlineStyle: 'solid',\n      outlineColor: '#FBA846',\n      backgroundColor: '#1C1C1C',\n      '&:hover': {\n        borderColor: '#FBA846',\n        outlineColor: '#FBA846',\n      },\n    },\n    name: {\n      borderBottom: '1px solid #666666',\n      padding: '5% 0',\n      marginBottom: '10%',\n    },\n    buttonEdit: {\n      backgroundColor: '#2196F3',\n    },\n    buttonDelete: {\n      backgroundColor: '#F03738',\n    },\n    date: {\n      fontWeight: 'bold',\n    },\n  }),\n)\n","import React from 'react'\nimport styles from './CourseList.module.css'\nimport { useAppSelector } from '../../../hooks/hooks'\nimport CourseListElement from './CourseListElement'\nimport PageHeader from '../../../components/PageHeader'\nimport { useHistory } from 'react-router-dom'\nimport UButton from '../../../components/UButton'\nimport { useCourses } from '../../../hooks'\nimport { CircularProgress, LinearProgress } from '@material-ui/core'\nimport useSnackbar from '../../../hooks/useSnackbar'\n\nexport interface CourseListProps {}\n\nconst CourseList: React.FC<CourseListProps> = (props) => {\n  const history = useHistory()\n  const { activeCourse } = useAppSelector((state) => state.courseList)\n  const { data: courseList, error, isLoading, isFetching } = useCourses()\n  const { showError } = useSnackbar()\n\n  const listElements = courseList?.map((courseListElement) => (\n    <CourseListElement\n      key={courseListElement._id}\n      course={courseListElement}\n      isActive={courseListElement._id === activeCourse?._id}\n    />\n  ))\n\n  const handleAddButtonClick = (event: any) => {\n    history.push('coursecreate/')\n  }\n\n  if (error) showError('Something went wrong :(')\n\n  if (isLoading) return <CircularProgress />\n  \n  if (isFetching) return <LinearProgress />\n\n  return (\n    <div>\n      <PageHeader name=\"Courses\"></PageHeader>\n      <div>\n        <div className={styles.manageCourseBar}>\n          <h3>Manage courses</h3>\n          <UButton\n            text=\"ADD\"\n            color=\"primary\"\n            onClick={handleAddButtonClick}\n          ></UButton>\n        </div>\n        <div className={styles.listContainer}>{listElements}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default CourseList\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles((theme) => ({\n  cssLabel: {\n    color: '#FFF !important',\n  },\n\n  cssFocused: {},\n\n  notchedOutline: {\n    borderWidth: '1px',\n    borderColor: '#696969',\n  },\n\n  outlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      border: '1px solid #FFF',\n    },\n  },\n}))\n","import React from 'react'\n\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField'\nimport useStyles from './StyledTextField.style'\n\nexport interface StyledTextFieldOwnProps {\n  variant?: 'filled' | 'outlined' | 'standard'\n}\n\nexport type StyledTextFieldProps = TextFieldProps & StyledTextFieldOwnProps\n\nconst StyledTextField: React.FC<StyledTextFieldProps> = (props) => {\n  const classes = useStyles()\n\n  return (\n    <TextField\n      variant={'outlined' as any}\n      required\n      fullWidth\n      InputLabelProps={{\n        classes: {\n          root: classes.cssLabel,\n          focused: classes.cssLabel,\n        },\n      }}\n      InputProps={{\n        classes: {\n          root: classes.outlinedInput,\n          focused: classes.cssFocused,\n          notchedOutline: classes.notchedOutline,\n        },\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default StyledTextField\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n\n  errorStyle: {\n    color: '#fff !important',\n  },\n}))\n","import React from 'react'\nimport styles from './HeaderRegistration.module.css'\n\nconst HeaderRegistration: React.FC = () => {\n  return (\n    <div className={styles.header}>\n      <div className={styles.logo}>\n        <span>.</span>Coders<span>Camp</span>\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderRegistration\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { AxiosResponse } from 'axios'\nimport { setActiveCourse } from '../../Admin/CourseList/CourseListSlice'\n\nimport {\n  Button,\n  CssBaseline,\n  Link,\n  Grid,\n  Typography,\n  Container,\n} from '@material-ui/core'\nimport StyledTextField from '../../../components/StyledTextField'\nimport useStyles from './LogIn.style'\nimport HeaderRegistration from '../../../components/HeaderRegistration'\nimport { useAppDispatch, fetchCoursesAndSort } from '../../../hooks'\nimport useSnackbar from '../../../hooks/useSnackbar'\nimport { api } from '../../../api'\n\nexport interface LogInProps {\n  onLogin?: Function\n}\n\nexport default function SignIn(props: LogInProps) {\n  const classes = useStyles()\n  const appDispatch = useAppDispatch()\n  const { showError } = useSnackbar()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const history = useHistory()\n  const routeChange = () => {\n    let path = `/home`\n    history.push(path)\n  }\n\n  const setResponseDataToLocalStorage = (response: AxiosResponse) => {\n    const userId = response.data?.['_id']\n    const userType = response.data?.['type']\n\n    localStorage.setItem('id', userId)\n    localStorage.setItem('type', userType)\n  }\n\n  const handleSignInClick = async () => {\n    try {\n      const response = await api.post('login', { email, password })\n      setResponseDataToLocalStorage(response)\n      const courses = await fetchCoursesAndSort()\n      const mostRecentCourse = courses[0]\n      appDispatch(setActiveCourse(mostRecentCourse))\n      routeChange()\n      if (props.onLogin) props.onLogin()\n    } catch (error) {\n      showError(\n        error?.response?.data?.message ?? 'Error while trying to sign in',\n      )\n    }\n  }\n\n  return (\n    <div>\n      <HeaderRegistration />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <StyledTextField\n              margin=\"normal\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              autoFocus\n              data-testid=\"li-email\"\n            />\n            <StyledTextField\n              margin=\"normal\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              data-testid=\"li-password\"\n            />\n            <Button\n              type=\"button\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={handleSignInClick}\n              data-testid=\"li-button\"\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"/resetpassword\" variant=\"body2\" color=\"inherit\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/registration\" variant=\"body2\" color=\"inherit\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  buttonDisabled: {\n    backgroundColor: '#4c4c4c !important',\n  },\n\n  errorStyle: {\n    color: '#fff !important',\n  },\n}))\n","import React, { useEffect, useState } from 'react'\n\nimport {\n  Button,\n  CssBaseline,\n  Link,\n  Grid,\n  Typography,\n  Container,\n  CircularProgress,\n} from '@material-ui/core'\nimport StyledTextField from '../../../components/StyledTextField'\nimport useStyles from './Registration.style'\nimport HeaderRegistration from '../../../components/HeaderRegistration'\nimport useSnackbar from '../../../hooks/useSnackbar'\nimport { useHistory } from 'react-router-dom'\nimport { api } from '../../../api'\n\nexport interface formProps {\n  name: string\n  surname: string\n  email: string\n  password: string\n  confirmPassword: string\n}\n\nexport function Registration() {\n  const classes = useStyles()\n  const history = useHistory()\n  const { showError, showSuccess } = useSnackbar()\n\n  const [loading, setLoading] = useState(false)\n  const [invalidName, setInvalidName] = useState(false)\n  const [invalidSurname, setInvalidSurname] = useState(false)\n  const [invalidEmail, setInvalidEmail] = useState(false)\n  const [invalidPasswd, setInvalidPasswd] = useState(false)\n  const [invalidConfirmPasswd, setInvalidConfirmPasswd] = useState(false)\n  const [form, setForm] = useState<formProps>({\n    name: '',\n    surname: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  })\n\n  const validateName = (): boolean => {\n    const flag = form['name'].length >= 3 && form['name'].length <= 30\n    setInvalidName(!flag)\n    return flag\n  }\n\n  const validateSurname = () => {\n    const flag = form['surname'].length >= 3 && form['surname'].length <= 30\n    setInvalidSurname(!flag)\n    return flag\n  }\n\n  const validateEmail = (): boolean => {\n    const flag = form['email'].indexOf('@') > -1\n    setInvalidEmail(!flag)\n    return flag\n  }\n\n  const validatePasswd = (): boolean => {\n    // min: 8, max: 26, lowerCase: 1, upperCase: 1\n    const flag =\n      (form['password'].length >= 8 && form['password'].length <= 26) ||\n      /\\d/.test(form['password']) ||\n      /[A-Z]/.test(form['password'])\n    setInvalidPasswd(!flag)\n    return flag\n  }\n\n  const validateConfirmPasswd = (): boolean => {\n    const flag = form['confirmPassword'] === form['password']\n    setInvalidConfirmPasswd(!flag)\n    return flag\n  }\n\n  const validateForm = (): boolean => {\n    const isValidName = validateName()\n    const isValidSurname = validateSurname()\n    const isValidEmail = validateEmail()\n    const isValidPasswd = validatePasswd()\n    const isValidConfirmPasswd = validateConfirmPasswd()\n\n    return (\n      isValidName &&\n      isValidSurname &&\n      isValidEmail &&\n      isValidPasswd &&\n      isValidConfirmPasswd\n    )\n  }\n\n  const handleFormChange = (e: any) => {\n    setForm((prevState) => ({ ...prevState, [e.target.name]: e.target.value }))\n  }\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault()\n\n    if (!validateForm()) return\n\n    setLoading(true)\n    try {\n      await api.post('register', form)\n      showSuccess('Registration completed. You can log in now.')\n      setLoading(false)\n      history.push('/login')\n    } catch (error) {\n      showError(error?.response?.data?.message ?? 'Unable to register')\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (\n      invalidName ||\n      invalidSurname ||\n      invalidEmail ||\n      invalidPasswd ||\n      invalidConfirmPasswd\n    )\n      validateForm()\n  }, [form]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const areAllFieldsFilled =\n    form.name &&\n    form.surname &&\n    form.email &&\n    form.password &&\n    form.confirmPassword\n\n  return (\n    <div>\n      <HeaderRegistration />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <StyledTextField\n                  value={form.name}\n                  onChange={handleFormChange}\n                  autoFocus\n                  autoComplete=\"fname\"\n                  name=\"name\"\n                  label=\"Name\"\n                  data-testid=\"r-fname\"\n                  error={invalidName}\n                  helperText={invalidName && 'Name is too short or too long!'}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <StyledTextField\n                  value={form.surname}\n                  onChange={handleFormChange}\n                  label=\"Surname\"\n                  name=\"surname\"\n                  autoComplete=\"lname\"\n                  data-testid=\"r-lname\"\n                  error={invalidSurname}\n                  helperText={\n                    invalidSurname && 'Surname is too short or too long!'\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <StyledTextField\n                  value={form.email}\n                  onChange={handleFormChange}\n                  label=\"Email Address\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  data-testid=\"r-email\"\n                  error={invalidEmail}\n                  helperText={invalidEmail && 'Incorrect email address!'}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <StyledTextField\n                  value={form.password}\n                  onChange={handleFormChange}\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  data-testid=\"r-password\"\n                  error={invalidPasswd}\n                  helperText={\n                    invalidPasswd && 'Pasword should be more complex!'\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <StyledTextField\n                  value={form.confirmPassword}\n                  onChange={handleFormChange}\n                  name=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  data-testid=\"r-cpassword\"\n                  error={invalidConfirmPasswd}\n                  helperText={\n                    invalidConfirmPasswd &&\n                    'Confirm password should match the password!'\n                  }\n                />\n              </Grid>\n            </Grid>\n            {loading ? (\n              <CircularProgress color=\"primary\" className={classes.submit} />\n            ) : (\n              <>\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  disabled={!areAllFieldsFilled}\n                  classes={{\n                    disabled: classes.buttonDisabled,\n                  }}\n                  data-testid=\"r-button\"\n                  type=\"submit\"\n                >\n                  Sign Up\n                </Button>\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link href=\"/\" variant=\"body2\" color=\"inherit\">\n                      Already have an account? Sign in\n                    </Link>\n                  </Grid>\n                </Grid>\n              </>\n            )}\n          </form>\n        </div>\n      </Container>\n    </div>\n  )\n}\n","import React from 'react'\nimport AddIcon from '@material-ui/icons/Add'\nimport Button, { ButtonProps } from '@material-ui/core/Button'\nimport { addBtnTheme } from '../../theme/customMaterialTheme'\nimport { ThemeProvider } from '@material-ui/styles'\n\nexport type AddButtonProps = {\n  text: string\n} & ButtonProps\n\nconst AddButton: React.FC<AddButtonProps> = ({ text, ...restOfProps }) => {\n  return (\n    <ThemeProvider theme={addBtnTheme}>\n      <Button variant=\"contained\" color=\"primary\" {...restOfProps}>\n        <AddIcon /> <span>{text}</span>\n      </Button>\n    </ThemeProvider>\n  )\n}\n\nexport default AddButton\n","import React, { useState } from 'react'\nimport { DataGrid, DataGridProps } from '@material-ui/data-grid'\nimport styles from './ReusableTable.module.css'\nimport { LinearProgress } from '@material-ui/core'\n\ninterface Column {\n  field: string\n  headerName?: string\n  width?: number\n  type?: string\n  description?: string\n  sortable?: boolean\n  valueGetter?: (params: { getValue: (fieldName: string) => any }) => any\n  sortComparator?: (v1: any, v2: any, cellParams1: any, cellParams2: any) => any\n}\n\nexport type ReusableTableProps = {\n  name: string\n  columns?: Column[]\n  isLoading: boolean\n  error: unknown\n  data?: any[]\n  isFetching: boolean\n} & Omit<DataGridProps, 'rows'>\n\nconst ReusableTableFC: React.FC<ReusableTableProps> = ({\n  name,\n  columns = [],\n  isLoading,\n  error,\n  data,\n  isFetching,\n  ...restOfProps\n}) => {\n  const [tableName] = useState(name)\n\n  if (isLoading) return <LinearProgress />\n  if (error) {console.trace(); return <div>{error.message}</div>}\n  if (data === undefined) return <div>Error</div>\n  return (\n    <div className={styles.container} aria-label={'Table - ' + tableName}>\n      <DataGrid\n        rows={data}\n        columns={columns}\n        pageSize={5}\n        autoHeight\n        disableSelectionOnClick={true}\n        {...restOfProps}\n      />\n    </div>\n  )\n}\n\nexport default React.memo(ReusableTableFC)\n","import React, { createRef, useState } from 'react'\nimport styles from './SearchInput.module.css'\nimport {\n  InputAdornment,\n  IconButton,\n  FormControl,\n  OutlinedInput,\n} from '@material-ui/core'\nimport { ArrowForwardOutlined, SearchRounded } from '@material-ui/icons'\nimport { useDidUpdateEffect } from '../../hooks'\n\nexport interface SearchInputProps {\n  onSubmit: (value: string) => void\n  placeholder: string\n}\n\nconst SearchInput: React.FC<SearchInputProps> = ({ placeholder, onSubmit }) => {\n  const [value, setValue] = useState('')\n  const inputRef = createRef<HTMLInputElement>()\n  const handleSubmit: React.MouseEventHandler = () => {\n    if (inputRef.current) setValue(inputRef.current.value)\n  }\n  const onKeyPress: React.KeyboardEventHandler = (e) => {\n    if (e.key === 'Enter' && inputRef.current) setValue(inputRef.current.value)\n  }\n  useDidUpdateEffect(() => {\n    onSubmit(value)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value])\n  return (\n    <FormControl variant=\"outlined\" className={styles.searchInput}>\n      <OutlinedInput\n        inputRef={inputRef}\n        placeholder={placeholder}\n        onKeyPress={onKeyPress}\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <SearchRounded />\n          </InputAdornment>\n        }\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"arrow button\"\n              onClick={handleSubmit}\n              edge=\"end\"\n            >\n              <ArrowForwardOutlined />\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  )\n}\n\nexport default React.memo(SearchInput)\n","import React, { useEffect, useState } from 'react'\nimport { Backdrop, CssBaseline, Fade, Modal } from '@material-ui/core'\n\nimport ReusableTable from '../ReusableTable'\nimport SearchInput from '../SearchInput'\n\nimport styles from './FindModal.module.css'\nimport { UseQueryResult } from 'react-query'\nimport { genericSearch } from '../../hooks/useQuery/useGenericQuery'\n\n\ninterface FindModalProps<T> {\n  onRowSelection: any\n  query: UseQueryResult<T[]>\n  columns: { field: string; width: number; fieldName?: string }[]\n  searchPlaceholder?: string\n  searchBy: keyof T\n  name: string\n  queryKey: string\n  open: boolean\n  handleClose: () => void\n  handleOpen: () => void\n}\n\nconst FindModal = <T extends unknown>(\n  props: FindModalProps<T>,\n) => {\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    props.handleOpen()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    genericSearch<T>(props.queryKey)(`${props.searchBy}` as keyof T, search)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search])\n\n  function onSearch(name: string) {\n    setSearch(name)\n  }\n\n  function handleRowClick(params: any, e: any) {\n    props.onRowSelection(params.row)\n    props.handleClose()\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={styles.modal}\n        open={props.open}\n        onClose={props.handleClose}\n        closeAfterTransition={true}\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.open}>\n          <div className={styles.container}>\n            <div className={styles.container__header}>\n              <span>{props.name}</span>\n            </div>\n\n            <div className={styles.container__body}>\n              <div className={styles.container__body__search}>\n                <SearchInput\n                  onSubmit={onSearch}\n                  placeholder={props.searchPlaceholder ?? ''}\n                />\n              </div>\n              <div className={styles.container__body__table}>\n                <ReusableTable\n                  name={props.name}\n                  data={props.query.data}\n                  isLoading={props.query.isLoading}\n                  isFetching={props.query.isFetching}\n                  error={props.query.error}\n                  columns={props.columns}\n                  onRowClick={handleRowClick}\n                />\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  )\n}\n\nexport default FindModal","import React, { useState } from 'react'\nimport styles from './ManageTeam.module.css'\nimport AddButton from '../../../components/AddButton'\nimport UButton from '../../../components/UButton'\nimport ReusableTable from '../../../components/ReusableTable'\nimport { Container, CssBaseline, Paper } from '@material-ui/core'\nimport { User } from '../../../models'\nimport { GridSelectionModelChangeParams } from '@material-ui/data-grid'\nimport { useParams } from 'react-router-dom'\nimport DeleteButton from '../../../components/DeleteButton'\nimport PageHeader from '../../../components/PageHeader'\nimport ReusableGoBack from '../../../components/ReusableGoBack'\nimport {\n  useAddUserToTeam,\n  useDeleteUserFromTeam,\n  useParticipantsNotInTeam,\n  useSetMentor,\n  useTeam,\n  useUsersOfType,\n} from '../../../hooks'\nimport FindModal from '../../../components/FindModal/FindModal'\n\nexport interface ManageTeamProps {}\n\nconst ManageTeam: React.FC<ManageTeamProps> = () => {\n  const [openMentorsModal, setOpenMentorsModal] = useState<boolean>(false)\n  const [openUsersModal, setOpenUsersModal] = useState<boolean>(false)\n\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([])\n\n  let { teamId } = useParams<{ teamId: string }>()\n  const { data: team, isLoading, isFetching, error } = useTeam(teamId)\n  const participantsNotInTeamQuery = useParticipantsNotInTeam({\n    enabled: openUsersModal,\n  })\n  const mentorsQuery = useUsersOfType('Mentor', {\n    enabled: openMentorsModal,\n  })\n  const { mutate: setMentor } = useSetMentor()\n  const { mutate: addUserToTeam } = useAddUserToTeam()\n  const { mutate: deleteUserFromTeam } = useDeleteUserFromTeam()\n\n  const handleMentorSelection = (row: User) => {\n    setOpenMentorsModal(false)\n    setMentor([teamId, row.id])\n  }\n\n  const handleAddUserSelection = (row: User) => {\n    setOpenUsersModal(false)\n    addUserToTeam([teamId, row.id])\n  }\n\n  const columns = [\n    { field: 'surname', headerName: 'Last name', width: 150, sortable: true },\n    { field: 'name', headerName: 'First name', width: 150, sortable: true },\n    {\n      field: 'averageGrade',\n      headerName: 'Average grade',\n      width: 150,\n      sortable: true,\n    },\n    { field: 'status', headerName: 'Status', width: 150, sortable: true },\n  ]\n\n  const handleUserSelection = (params: GridSelectionModelChangeParams) => {\n    setSelectedUsers(params.selectionModel as string[])\n  }\n\n  const deleteSelectedUsers = () => {\n    selectedUsers.forEach((user) => {\n      deleteUserFromTeam([teamId, user])\n    })\n    setSelectedUsers([])\n  }\n\n  const mentorColumns = [\n    { field: 'name', headerName: 'Mentor name', width: 270 },\n    { field: 'surname', headerName: 'Mentor surname', width: 250 },\n  ]\n\n  const participantColumns = [\n    { field: 'name', headerName: 'Participant name', width: 270 },\n    { field: 'surname', headerName: 'Participant surname', width: 250 },\n  ]\n\n  const projectColumns = [\n    { field: 'name', headerName: 'Name', width: 270 },\n    { field: 'overallGrade', headerName: 'Overall grade', width: 270 },\n    { field: 'sectionName', headerName: 'Section', width: 270 },\n  ]\n\n  return (\n    <Container className={styles.manageTeams} aria-label=\"Manage Teams\">\n      <CssBaseline />\n      <PageHeader>\n        <ReusableGoBack\n          pageName=\"Teams\"\n          pageLink=\"/teams\"\n          elementName={\n            team?.mentor\n              ? `${team?.mentor?.name} ${team?.mentor?.surname}`\n              : teamId\n          }\n        />\n      </PageHeader>\n      <Paper className={styles.container}>\n        <Container className={styles.manageHeader}>\n          <h2>Manage Team</h2>\n        </Container>\n        <div>\n          {openMentorsModal && (\n            <FindModal<User>\n              onRowSelection={handleMentorSelection}\n              query={mentorsQuery}\n              queryKey=\"Mentors\"\n              columns={mentorColumns}\n              searchPlaceholder=\"Search by surname\"\n              searchBy=\"surname\"\n              name=\"Find mentor\"\n              open={openMentorsModal}\n              handleClose={() => setOpenMentorsModal(false)}\n              handleOpen={() => setOpenMentorsModal(true)}\n            />\n          )}\n          <ul className={styles.teamInfo}>\n            <li className={styles.teamInfoRow}>\n              <span>Mentor:</span>\n              <span>\n                {team?.mentor?.name ?? '---'} {team?.mentor?.surname ?? '---'}\n              </span>\n              <UButton\n                test-id=\"change-mentor\"\n                text=\"Change\"\n                color=\"primary\"\n                onClick={() => setOpenMentorsModal(true)}\n              />\n            </li>\n            <li className={styles.teamInfoRow}>\n              <span>Average grade:</span>\n              <span>{team?.teamAvgGrade}%</span>\n            </li>\n          </ul>\n        </div>\n      </Paper>\n      <Paper className={styles.container}>\n        <div className={styles.manageContainer}>\n          {openUsersModal && (\n            <FindModal<User>\n              onRowSelection={handleAddUserSelection}\n              query={participantsNotInTeamQuery}\n              queryKey=\"participantsNotInTeam\"\n              columns={participantColumns}\n              searchPlaceholder=\"Search by surname\"\n              searchBy=\"surname\"\n              name=\"Find participant\"\n              open={openUsersModal}\n              handleClose={() => setOpenUsersModal(false)}\n              handleOpen={() => setOpenUsersModal(true)}\n            />\n          )}\n          <h2 className={styles.manageHeader}>Users</h2>\n          <div className={styles.buttons}>\n            <AddButton\n              aria-label=\"Add user\"\n              text=\"Add\"\n              onClick={() => setOpenUsersModal(true)}\n            />\n            <DeleteButton\n              confirmTitle={`Are you sure you want to delete selected (${selectedUsers.length}) users?`}\n              onConfirm={deleteSelectedUsers}\n            />\n          </div>\n        </div>\n        <div className={styles.table}>\n          <ReusableTable\n            aria-label=\"Team members table\"\n            name=\"Team\"\n            columns={columns}\n            data={team?.users}\n            isLoading={isLoading}\n            isFetching={isFetching}\n            error={error}\n            checkboxSelection={true}\n            onSelectionModelChange={handleUserSelection}\n          />\n        </div>\n        <div className={styles.manageContainer}>\n          <h2 className={styles.manageHeader}>Projects</h2>\n        </div>\n        <div className={styles.table}>\n          <ReusableTable\n            name=\"TeamProjects\"\n            columns={projectColumns}\n            data={team?.projects}\n            isLoading={isLoading}\n            isFetching={isFetching}\n            error={error}\n          />\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default ManageTeam\n","import React from 'react'\nimport {\n  Container,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n} from '@material-ui/core'\nimport styles from './SelectSortBy.module.css'\nimport { useDidUpdateEffect } from '../../hooks'\n\nexport interface SelectSortByProps {\n  onChange: (value: string) => void\n  options: string[]\n  labels?: { [option: string]: string }\n  initialValue: string\n}\n\nconst SelectSortBy: React.FC<SelectSortByProps> = ({\n  onChange,\n  options,\n  labels = {},\n  initialValue,\n}) => {\n  const [value, setValue] = React.useState(initialValue)\n  const handleChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n    setValue(e.target.value as string)\n  }\n  useDidUpdateEffect(() => {\n    onChange(value)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value])\n  return (\n    <Container>\n      <FormControl variant=\"outlined\">\n        <InputLabel>Sort by</InputLabel>\n        <Select\n          data-testid=\"sort-by\"\n          className={styles.select}\n          onChange={handleChange}\n          value={value}\n          label=\"Sort by\"\n        >\n          {options.map((option) => (\n            <MenuItem className={styles.select} key={option} value={option}>\n              {' '}\n              {labels[option] ?? option}{' '}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </Container>\n  )\n}\n\nexport default React.memo(SelectSortBy)\n","import React, { useRef } from 'react'\nimport styles from './ManageSheets.module.css'\nimport AddButton from '../../../components/AddButton'\nimport SelectSortBy from '../../../components/SelectSortBy'\nimport SearchInput from '../../../components/SearchInput'\nimport ReusableTable from '../../../components/ReusableTable'\nimport { Container, CssBaseline, Paper } from '@material-ui/core'\nimport { GridSelectionModelChangeParams } from '@material-ui/data-grid'\nimport { useHistory } from 'react-router-dom'\nimport DeleteButton from '../../../components/DeleteButton'\nimport PageHeader from '../../../components/PageHeader'\nimport {\n  sortSheets,\n  searchSheet,\n  useSheets,\n  useCreateSheet,\n  useDeleteSheet,\n} from '../../../hooks'\nimport { GradeSheet } from '../../../models'\n\nexport interface ManageSheetsProps {}\n\nconst ManageSheets: React.FC<ManageSheetsProps> = () => {\n  const history = useHistory()\n  const selectedSheets = useRef([] as string[])\n\n  const tableName = 'Sheets'\n  const { data: sheets, error, isLoading, isFetching } = useSheets()\n  const { mutate: createSheet } = useCreateSheet({ invalidate: 'sheets' })\n  const { mutate: deleteSheet } = useDeleteSheet({ invalidate: 'sheets' })\n\n  const changeSortBy = (value: string) => {\n    sortSheets(value as keyof GradeSheet)\n  }\n\n  const changeSearch = (value: string) => {\n    const column = /^[0-9a-fA-F]{1,16}$/.test(value) ? 'id' : 'mentorSurname'\n    const search = value\n    searchSheet(column, search)\n  }\n\n  const sortByOptions = ['mentorName', 'mentorSurname', 'projectName']\n  const sortByLabels = {\n    mentorName: 'Mentor name',\n    mentorSurname: 'Mentor surname',\n    projectName: 'Project name',\n  }\n  const columns = [\n    {\n      field: 'mentorSurname',\n      headerName: 'Mentor surname',\n      width: 200,\n      sortable: true,\n    },\n    {\n      field: 'mentorName',\n      headerName: 'Mentor name',\n      width: 150,\n      sortable: true,\n    },\n    {\n      field: 'projectName',\n      headerName: 'Project name',\n      width: 250,\n      sortable: true,\n    },\n  ]\n\n  const handleSheetSelection = (params: GridSelectionModelChangeParams) => {\n    selectedSheets.current = params.selectionModel as string[]\n  }\n\n  const deleteSelectedSheets = () => {\n    selectedSheets.current.forEach((sheetId) => {\n      deleteSheet(sheetId)\n    })\n    selectedSheets.current = []\n  }\n\n  const handleRowClick = (data: { id: string | number }) => {\n    history.push(`/gradesheets/${data.id}`)\n  }\n\n  return (\n    <Container className={styles.manageSheets} aria-label=\"Manage Sheets\">\n      <CssBaseline />\n      <PageHeader name=\"Sheets\">\n        <SearchInput\n          onSubmit={changeSearch}\n          placeholder=\"Search by ID or mentor surname\"\n        />\n      </PageHeader>\n      <Paper className={styles.container}>\n        <div className={styles.manageContainer}>\n          <h2 className={styles.manageHeader}>Manage Sheets</h2>\n          <div className={styles.buttons}>\n            <AddButton\n              text=\"Add\"\n              onClick={() => createSheet(null)}\n              aria-label=\"Add sheet\"\n            />\n            <DeleteButton\n              confirmTitle=\"Are you sure you want to delete selected grade sheets?\"\n              onConfirm={deleteSelectedSheets}\n            />\n          </div>\n          <span className={styles.selectSortBy}>\n            <SelectSortBy\n              onChange={changeSortBy}\n              initialValue=\"\"\n              options={sortByOptions}\n              labels={sortByLabels}\n            />\n          </span>\n        </div>\n        <div className={styles.table}>\n          <ReusableTable\n            name={tableName}\n            columns={columns}\n            isLoading={isLoading}\n            error={error}\n            data={sheets}\n            isFetching={isFetching}\n            onRowClick={handleRowClick}\n            onSelectionModelChange={handleSheetSelection}\n            checkboxSelection\n          />\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default ManageSheets\n","import React, { useEffect, useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { Backdrop, Button, Fade, Modal, ThemeProvider } from '@material-ui/core'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport 'date-fns'\n\nimport styles from './EditGrade.module.css'\nimport { mainTheme } from '../../theme/customMaterialTheme'\nimport { Grades } from '../../models'\n\nexport interface EditGradeProps {\n  quality: string\n  initPoints?: number\n  initComment?: string\n  initDescription?: string\n  open: boolean\n  handleClose: () => void\n  handleOpen: () => void\n  onClickSave: (grades: Grades) => void\n}\n\nconst EditGrade: React.FC<EditGradeProps> = (props) => {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      root: {\n        '& .MuiTextField-root': {\n          margin: theme.spacing(1),\n          width: '70vw',\n        },\n      },\n      nameInput: {\n        '&.MuiTextField-root': {\n          width: '100px',\n          paddingBottom: '2%',\n          textAlign: 'center',\n        },\n      },\n      container: {\n        textAlign: 'center',\n        fontFamily: 'Montserrat',\n        backgroundColor: '#1C1C1C',\n        border: '1px solid #666666',\n      },\n      inputs: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        borderTop: '1px solid #666666',\n        paddingTop: '2%',\n        paddingRight: '5rem',\n        paddingLeft: '5rem',\n      },\n      header: {\n        width: '100%',\n        display: 'flex',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n      },\n      button: {\n        backgroundColor: '#1a90ff',\n        margin: '2% 0',\n        width: '120px',\n        '&:hover': {\n          backgroundColor: '#2272bd',\n        },\n      },\n      buttonAlignment: {\n        display: 'flex',\n        justifyContent: 'center',\n      },\n    }),\n  )\n\n  const classes = useStyles()\n\n  const [quality, changeQualty] = useState('')\n  const [points, changePoints] = useState(props.initPoints ?? 0)\n  const [description, changeDescription] = useState(props.initDescription ?? '')\n  const [comment, changeComment] = useState(props.initComment ?? '')\n\n  const handlePointsChange = (e: any) => {\n    changePoints(+e.target.value)\n  }\n\n  const handleCommentChange = (e: any) => {\n    changeComment(e.target.value)\n  }\n\n  const handleDescriptionChange = (e: any) => {\n    changeDescription(e.target.value)\n  }\n\n  const handleSaveButtonClick = async () => {\n    const grade = {\n      [!!quality ? quality : props.quality]: {\n        points,\n        description,\n        comment,\n      },\n    }\n\n    props.onClickSave(grade)\n    props.handleClose()\n  }\n\n  useEffect(() => {\n    props.handleOpen()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      className={styles.modal}\n      open={props.open}\n      onClose={props.handleClose}\n      closeAfterTransition={true}\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Fade in={props.open}>\n        <div className={classes.root}>\n          <div className={classes.container}>\n            <div className={classes.header}>\n              <h3>Edit grade:</h3>\n              <TextField\n                label={props.quality}\n                className={classes.nameInput}\n                onChange={(e) => changeQualty(e.target.value)}\n                variant=\"outlined\"\n                placeholder=\"Quality\"\n              ></TextField>\n            </div>\n            <div className={classes.inputs}>\n              <TextField\n                label=\"Points\"\n                value={points}\n                className={classes.nameInput}\n                onChange={handlePointsChange}\n                variant=\"outlined\"\n              ></TextField>\n              <TextField\n                label=\"Grade description\"\n                variant=\"outlined\"\n                value={description}\n                multiline\n                onChange={handleDescriptionChange}\n              ></TextField>\n              <TextField\n                label=\"Grade comment\"\n                variant=\"outlined\"\n                value={comment}\n                multiline\n                onChange={handleCommentChange}\n              ></TextField>\n            </div>\n            <div>\n              <ThemeProvider theme={mainTheme}>\n                <div className={classes.buttonAlignment}>\n                  <Button\n                    className={classes.button}\n                    onClick={handleSaveButtonClick}\n                    variant=\"text\"\n                    disabled={!points}\n                  >\n                    SAVE\n                  </Button>\n                </div>\n              </ThemeProvider>\n            </div>\n          </div>\n        </div>\n      </Fade>\n    </Modal>\n  )\n}\n\nexport default EditGrade\n","import api from './api.service'\n\n// todo: get projects for course\n\nconst getTeamProjects = async () => {\n  const response = await api.getMany<TeamProjectDto[]>('/teams/projects')\n  return response.data\n}\nconst getTeamProject = async (id: string) => {\n  const response = await api.get<TeamProjectDetails>(`/teams/projects/${id}`)\n  return response.data\n}\n\nconst deleteTeamProject = async (id: string) => {\n  const response = await api.delete(`/teams/projects/${id}`)\n  console.log('projects details ', response)\n  return response.data\n}\n\nconst createTeamProject = async (data: TeamProject) => {\n  const response = await api.post<TeamProject>(`/teams/projects`, data)\n  return response.data\n}\nconst updateTeamProject = async (data: TeamProject) => {\n  const response = await api.put<TeamProject>(\n    `/teams/projects/${data._id}`,\n    data,\n  )\n  return response.data\n}\n\nexport {\n  getTeamProjects,\n  getTeamProject,\n  deleteTeamProject,\n  createTeamProject,\n  updateTeamProject,\n}\n\nexport interface TeamProject {\n  _id?: string\n  teamId?: string\n  parentProjectId?: string\n  projectName?: string\n  projectUrl?: string\n  description?: string\n}\n\nexport interface TeamProjectDto {\n  id: string\n  teamProjectName: string\n  mentorName: string\n  mentorId: string\n  referenceProjectId: string\n  referenceProjectName: string\n  sectionId: string\n  sectionName: string\n}\n\nexport interface TeamProjectDetails {\n  _id: string\n  parentProjectId?: {\n    _id: string\n    projectName: string\n    sectionId: {\n      id: string\n      statDate: Date\n      endDate: Date\n      name: string\n      description: string\n      tests: []\n    }\n  }\n  projectName?: string\n  projectUrl?: string\n  description?: string\n  teamId?: {\n    users: string[]\n    _id: string\n    mentor: {\n      _id: string\n      name: string\n      surname: string\n    }\n  }\n}\n","import * as api from '../../api/TeamProjects.api'\nimport { useQuery, UseQueryOptions } from 'react-query'\nimport useMutationWithConfirm from '../useMutationWithConfirm'\n\nconst TEAM_PROJECTS = 'teamProjects'\nconst useTeamProjects = (options?: Partial<UseQueryOptions<api.TeamProjectDto[]>>) => {\n  return useQuery(TEAM_PROJECTS, () => api.getTeamProjects(), options)\n}\nconst useTeamProject = (id: string) => {\n  return useQuery([TEAM_PROJECTS, id], () => api.getTeamProject(id))\n}\nconst useDeleteTeamProject = (onSuccess?: () => void, onError?: () => void) => {\n  const mutation = useMutationWithConfirm(api.deleteTeamProject, {\n    successMessage: 'Project for the team has been deleted.',\n    errorMessage: 'Something went wrong when trying to delete team project.',\n    invalidate: TEAM_PROJECTS,\n    onError,\n    onSuccess,\n  })\n  return mutation.mutate\n}\n\nconst useCreateTeamProject = (onSuccess?: () => void, onError?: () => void) => {\n  const mutation = useMutationWithConfirm(api.createTeamProject, {\n    successMessage: 'New project for the team has been successfully added.',\n    errorMessage:\n      'Something went wrong when trying to add new project for the team.',\n    invalidate: TEAM_PROJECTS,\n    onError,\n    onSuccess,\n  })\n  return mutation.mutate\n}\n\nconst useUpdateTeamProject = (onSuccess?: () => void, onError?: () => void) => {\n  const mutation = useMutationWithConfirm(api.updateTeamProject, {\n    successMessage: 'Selected project has been successfully updated.',\n    errorMessage: 'Something went wrong when trying to update project.',\n    invalidate: TEAM_PROJECTS,\n    onError,\n    onSuccess,\n  })\n  return mutation.mutate\n}\nexport {\n  useTeamProjects,\n  useTeamProject,\n  useDeleteTeamProject,\n  useCreateTeamProject,\n  useUpdateTeamProject,\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport styles from './ManageSheet.module.css'\nimport AddButton from '../../../components/AddButton'\nimport UButton from '../../../components/UButton'\nimport ReusableTable from '../../../components/ReusableTable'\nimport { Container, CssBaseline, Paper } from '@material-ui/core'\nimport { User, Grades, SheetGrade, Reviewer } from '../../../models'\nimport _ from 'lodash'\nimport { GridSelectionModelChangeParams } from '@material-ui/data-grid'\nimport { useParams } from 'react-router-dom'\nimport EditGradeModal from '../../../components/EditGradeModal'\nimport DeleteButton from '../../../components/DeleteButton'\nimport PageHeader from '../../../components/PageHeader'\nimport ReusableGoBack from '../../../components/ReusableGoBack'\nimport {\n  useAddReviewer,\n  useAddUserToSheet,\n  useDeleteUserFromSheet,\n  usePatchMentorGrade,\n  useSetMentorForSheet,\n  useSetMentorGrade,\n  useSetProjectForSheet,\n  useSetReviewersForSheet,\n  useSheet,\n  useUsersOfType,\n} from '../../../hooks'\nimport FindModal from '../../../components/FindModal/FindModal'\nimport { useTeamProjects } from '../../../hooks/useQuery/useTeamProjects'\nimport { TeamProjectDto } from '../../../api/TeamProjects.api'\n\ntype Grade = SheetGrade & { quality: string }\n\nfunction gradesObjectToArray(grades: Grades): Grade[] {\n  return Object.entries(grades).map(([quality, grade]) => ({\n    ...grade,\n    quality,\n    id: quality,\n  }))\n}\n\nexport interface ManageSheetProps {}\n\nconst ManageSheet: React.FC<ManageSheetProps> = () => {\n  const mentorGradesTableName = 'Mentor Grades'\n  const participantsTableName = 'Participants'\n\n  const [loading, setLoading] = useState<'loading' | 'idle'>('loading')\n  const [mentor, setMentor] = useState<User>()\n  const [project, setProject] = useState({\n    id: '',\n    Name: '---',\n    Mentor: '--- ---',\n    projectUrl: '---',\n    description: '---',\n  })\n  const [reviewers, setReviewers] = useState<Reviewer[]>([])\n  const [mentorGrades, setMentorGrades] = useState<Grades>({})\n\n  const selectedParticipants = useRef<string[]>([])\n  const selectedGrades = useRef<string[]>([])\n\n  const [openMentorsModal, setOpenMentorsModal] = useState<boolean>(false)\n  const [openProjectsModal, setOpenProjectsModal] = useState<boolean>(false)\n  const [openReviewersModal, setOpenReviewersModal] = useState<boolean>(false)\n  const [openUsersModal, setOpenUsersModal] = useState<boolean>(false)\n\n  const [editedGrade, setEditedGrade] = useState<Grade>({\n    quality: '',\n    points: 0,\n  })\n\n  let { sheetId } = useParams<{ sheetId: string }>()\n  const { data: sheet, error, isLoading, isFetching } = useSheet(sheetId)\n  const { mutate: setMentorForSheet } = useSetMentorForSheet(sheetId, {})\n  const { mutate: setProjectForSheet } = useSetProjectForSheet(sheetId, {})\n  const { mutate: addParticipant } = useAddUserToSheet(sheetId, {})\n  const { mutate: deleteParticipant } = useDeleteUserFromSheet(sheetId, {})\n  const { mutate: addReviewer } = useAddReviewer(sheetId, {})\n  const { mutate: setReviewersForSheet } = useSetReviewersForSheet(sheetId, {})\n  const { mutate: patchMentorGrade } = usePatchMentorGrade(sheetId, {})\n  const { mutate: setMentorGrade } = useSetMentorGrade(sheetId, {})\n  // TODO: Mentor reviewers grades\n  // const { mutate: patchMentorReviewerGrade } = usePatchMentorReviewerGrade(\n  //   sheetId,\n  //   {},\n  // )\n  // const { mutate: setMentorReviewerGrade } = useSetMentorReviewerGrade(\n  //   sheetId,\n  //   {},\n  // )\n  const participantsQuery = useUsersOfType('Participant', {\n    enabled: openUsersModal,\n  })\n  const mentorsQuery = useUsersOfType('Mentor', {\n    enabled: openMentorsModal || openReviewersModal,\n  })\n  const teamProjectsQuery = useTeamProjects({\n    enabled: openProjectsModal,\n  })\n\n  useEffect(() => {\n    if (sheet) {\n      setMentor({\n        id: sheet.mentorID,\n        name: sheet.mentorName,\n        surname: sheet.mentorSurname,\n      })\n      setProject({\n        id: sheet.projectID,\n        Name: sheet.projectName,\n        Mentor: `${sheet.mentorName} ${sheet.mentorSurname}`,\n        projectUrl: sheet.projectUrl,\n        description: sheet.projectDescription,\n      })\n      const reviewersArr = sheet.reviewers.map((rev) => ({\n        ...rev,\n        id: rev._id,\n      }))\n      setReviewers(reviewersArr)\n      setMentorGrades(sheet.mentorGrades)\n      setLoading('idle')\n      setOpenUsersModal(false)\n    }\n  }, [sheet])\n\n  const handleMentorSelection = (row: User) => {\n    setOpenMentorsModal(false)\n    setMentorForSheet(row.id)\n  }\n\n  const handleAddUserSelection = (row: User) => {\n    addParticipant(row.id)\n  }\n\n  const handleProjectSelection = (row: any) => {\n    setOpenProjectsModal(false)\n    setProjectForSheet(row.id)\n  }\n\n  const handleReviewerSelection = (row: any) => {\n    setOpenReviewersModal(false)\n    addReviewer(row.id)\n  }\n\n  const deleteReviewer = (id: string) => {\n    const newReviewers = reviewers\n      .map((rev) => rev._id)\n      .filter((rev) => rev !== id)\n    setReviewersForSheet(newReviewers)\n  }\n\n  const handleParticipantSelection = (row: GridSelectionModelChangeParams) => {\n    selectedParticipants.current = row.selectionModel as string[]\n  }\n\n  const deleteSelectedUsers = () => {\n    selectedParticipants.current.forEach((user) => deleteParticipant(user))\n    selectedParticipants.current = []\n  }\n\n  const handleGradeSelection = (row: GridSelectionModelChangeParams) => {\n    selectedGrades.current = row.selectionModel as string[]\n  }\n\n  const handleEditGrade = (grade: Grades) => {\n    const newGrades = {\n      ...mentorGrades,\n      ...grade,\n    }\n    if (editedGrade.quality !== Object.keys(grade)[0])\n      delete newGrades[editedGrade.quality]\n\n    patchMentorGrade(newGrades)\n  }\n\n  const deleteSelectedGrades = () => {\n    const newMentorGrades = _.omit(mentorGrades, selectedGrades.current)\n    patchMentorGrade(newMentorGrades)\n    selectedGrades.current = []\n    setMentorGrades(newMentorGrades)\n  }\n\n  const addMentorGrade = (id: string, grade: Grade) => {\n    const newGrades = {\n      [grade.quality]: _.omit(grade, 'quality'),\n    }\n    setMentorGrade(newGrades)\n    setMentorGrades({ ...mentorGrades, ...newGrades })\n  }\n\n  const mentorColumns = [\n    { field: 'name', headerName: 'Mentor name', width: 270 },\n    { field: 'surname', headerName: 'Mentor surname', width: 250 },\n  ]\n\n  const participantColumns = [\n    { field: 'name', headerName: 'Participant name', width: 270 },\n    { field: 'surname', headerName: 'Participant surname', width: 250 },\n  ]\n\n  const gradeColumns = [\n    { field: 'quality', headerName: 'Quality', width: 270 },\n    { field: 'points', headerName: 'Points', width: 250 },\n    { field: 'comment', headerName: 'Comment', width: 250 },\n  ]\n\n  const projectColumns = [\n    { field: 'teamProjectName', headerName: 'Name', width: 250 },\n    { field: 'mentorName', headerName: 'Mentor', width: 250 },\n    { field: 'projectUrl', headerName: 'Url', width: 250 },\n    { field: 'sectionName', headerName: 'Section', width: 250 },\n  ]\n\n  if (loading === 'loading') return <p>...Loading</p>\n\n  return (\n    <Container className={styles.manageSheet} aria-label=\"Manage Sheet\">\n      <CssBaseline />\n      <PageHeader>\n        <ReusableGoBack\n          pageName=\"Sheets\"\n          pageLink=\"/gradesheets\"\n          elementName={mentor ? `${mentor.name} ${mentor.surname}` : sheetId}\n        />\n      </PageHeader>\n\n      <Paper className={styles.container}>\n        <Container className={styles.manageHeader}>\n          <h2>Manage Sheet</h2>\n        </Container>\n        <div>\n          {openMentorsModal && (\n            <FindModal<User>\n              onRowSelection={handleMentorSelection}\n              query={mentorsQuery}\n              queryKey=\"Mentors\"\n              columns={mentorColumns}\n              searchPlaceholder=\"Search by surname\"\n              searchBy=\"surname\"\n              name=\"Find mentor\"\n              open={openMentorsModal}\n              handleClose={() => setOpenMentorsModal(false)}\n              handleOpen={() => setOpenMentorsModal(true)}\n            />\n          )}\n          {openProjectsModal && (\n            <FindModal<TeamProjectDto>\n              onRowSelection={handleProjectSelection}\n              query={teamProjectsQuery}\n              queryKey=\"teamProjects\"\n              columns={projectColumns}\n              searchPlaceholder=\"Search by name\"\n              searchBy=\"teamProjectName\"\n              name=\"Find project\"\n              open={openProjectsModal}\n              handleClose={() => setOpenProjectsModal(false)}\n              handleOpen={() => setOpenProjectsModal(true)}\n            />\n          )}\n          {openReviewersModal && (\n            <FindModal<User>\n              onRowSelection={handleReviewerSelection}\n              query={mentorsQuery}\n              queryKey=\"Mentors\"\n              columns={mentorColumns}\n              searchPlaceholder=\"Search by surname\"\n              searchBy=\"surname\"\n              name=\"Find mentor reviewer\"\n              open={openReviewersModal}\n              handleClose={() => setOpenReviewersModal(false)}\n              handleOpen={() => setOpenReviewersModal(true)}\n            />\n          )}\n          <ul className={styles.teamInfo}>\n            <li className={styles.teamInfoRow}>\n              <span>Project:</span>\n              <span>{project.Name}</span>\n              <UButton\n                test-id=\"change-mentor\"\n                text=\"Change\"\n                color=\"primary\"\n                onClick={() => setOpenProjectsModal(true)}\n              />\n            </li>\n            <li className={styles.teamInfoRow}>\n              <span>Mentor:</span>\n              <span>\n                {mentor?.name ?? '---'} {mentor?.surname ?? '---'}\n              </span>\n              <UButton\n                test-id=\"change-mentor\"\n                text=\"Change\"\n                color=\"primary\"\n                onClick={() => setOpenMentorsModal(true)}\n              />\n            </li>\n            <li className={styles.reviewersInfo}>\n              <span>Reviewers:</span>\n              <ul className={styles.reviewers}>\n                {reviewers.map((reviewer) => (\n                  <li className={styles.reviewerInfoRow} key={reviewer._id}>\n                    <span>\n                      {reviewer.name} {reviewer.surname}\n                    </span>\n                    <DeleteButton\n                      confirmTitle={`Are you sure you want to delete reviewer ${reviewer.name} ${reviewer.surname}?`}\n                      onConfirm={() => deleteReviewer(reviewer._id)}\n                    />\n                  </li>\n                ))}\n                <li>\n                  <AddButton\n                    text=\"Add reviewer\"\n                    onClick={() => setOpenReviewersModal(true)}\n                  />\n                </li>\n              </ul>\n            </li>\n          </ul>\n\n          <ul className={styles.teamInfo}>\n            <li className={styles.teamInfoRow}>\n              <span>Url:</span>\n              <span>{project.projectUrl}</span>\n            </li>\n            <li className={styles.teamInfoRow}>\n              <span>Description:</span>\n              <span>{project.description}</span>\n            </li>\n          </ul>\n        </div>\n      </Paper>\n      <Paper className={styles.container}>\n        <div className={styles.manageContainer}>\n          {openUsersModal && (\n            <FindModal<User>\n              onRowSelection={handleAddUserSelection}\n              query={participantsQuery}\n              queryKey=\"Participants\"\n              columns={participantColumns}\n              searchPlaceholder=\"Search by surname\"\n              searchBy=\"surname\"\n              name=\"Find participant\"\n              open={openUsersModal}\n              handleClose={() => setOpenUsersModal(false)}\n              handleOpen={() => setOpenUsersModal(true)}\n            />\n          )}\n          <h2 className={styles.manageHeader}>Users</h2>\n          <div className={styles.buttons}>\n            <AddButton\n              aria-label=\"Add participant\"\n              text=\"Add\"\n              onClick={() => setOpenUsersModal(true)}\n            />\n            <DeleteButton\n              confirmTitle=\"Are you sure you want to delete this user?\"\n              onConfirm={deleteSelectedUsers}\n            />\n          </div>\n        </div>\n        <div className={styles.table}>\n          <ReusableTable\n            aria-label=\"Participants table\"\n            name={participantsTableName}\n            columns={participantColumns}\n            data={sheet?.participants.map((user) => ({\n              id: user.participantID,\n              name: user.name,\n              surname: user.surname,\n            }))}\n            isLoading={isLoading}\n            isFetching={isFetching}\n            error={error}\n            checkboxSelection={true}\n            onSelectionModelChange={handleParticipantSelection}\n          />\n        </div>\n      </Paper>\n      <Paper className={styles.container}>\n        <div className={styles.manageContainer}>\n          {editedGrade.quality && (\n            <EditGradeModal\n              quality={editedGrade.quality}\n              initPoints={editedGrade.points}\n              initComment={editedGrade.comment}\n              initDescription={editedGrade.description}\n              onClickSave={handleEditGrade}\n              open={!!editedGrade.quality}\n              handleClose={() => setEditedGrade({ quality: '', points: 0 })}\n              handleOpen={() => 0}\n            />\n          )}\n          <h2 className={styles.manageHeader}>Mentor grades</h2>\n          <div className={styles.buttons}>\n            <AddButton\n              aria-label=\"Add grade\"\n              text=\"Add\"\n              onClick={() =>\n                addMentorGrade(sheetId, { quality: '---', points: 0 })\n              }\n            />\n            <DeleteButton\n              confirmTitle=\"Are you sure you want to delete this grade?\"\n              onConfirm={deleteSelectedGrades}\n            />\n          </div>\n        </div>\n        <div className={styles.table}>\n          <ReusableTable\n            aria-label=\"Grades table\"\n            name={mentorGradesTableName}\n            columns={gradeColumns}\n            data={gradesObjectToArray(sheet?.mentorGrades ?? {})}\n            isLoading={isLoading}\n            isFetching={isFetching}\n            error={error}\n            onSelectionModelChange={handleGradeSelection}\n            onRowClick={(params) =>\n              setEditedGrade({\n                quality: params.row.quality,\n                points: params.row.points,\n                comment: params.row.comment,\n                description: params.row.description,\n              })\n            }\n            checkboxSelection\n          />\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default ManageSheet\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { AppThunk, RootState } from '../../app/store'\n\ntype Filter = { column: string; values: string[] }\n\ninterface ReusableTableState {\n  [name: string]: {\n    loading: 'pending' | 'idle'\n    rows: any[]\n    displayedRows: any[]\n  }\n}\n\nconst initialState: ReusableTableState = {}\n\nexport const reusableTableSlice = createSlice({\n  name: 'reusableTable',\n  initialState,\n  reducers: {\n    initTable: (state, { payload }) => {\n      state[payload.name] = {\n        loading: 'pending',\n        rows: [],\n        displayedRows: [],\n      }\n    },\n    dataLoading(state, action: PayloadAction<{ name: string }>) {\n      state[action.payload.name].loading = 'pending'\n    },\n\n    dataReceived(state, action: PayloadAction<{ name: string; data: any[] }>) {\n      const { name, data } = action.payload\n      if (state[name].loading === 'pending') {\n        state[name].rows = [...data]\n        state[name].displayedRows = [...data]\n        state[name].loading = 'idle'\n      }\n    },\n\n    filterData(\n      state,\n      action: PayloadAction<{ table: string; filters: Filter[] }>,\n    ) {\n      const { table, filters } = action.payload\n      if (!state[table] || state[table].loading !== 'idle') return\n      state[table].displayedRows = [...state[table].rows]\n      if (filters[0].values[0] === '') return\n\n      filters.forEach(({ column, values }) => {\n        if (values.length)\n          state[table].displayedRows = state[\n            table\n          ].displayedRows.filter((row) => values.includes(`${row[column]}`))\n      })\n    },\n\n    searchData(\n      state,\n      action: PayloadAction<{ table: string; column: string; search: string }>,\n    ) {\n      const { table, column, search } = action.payload\n      if (!state[table] || state[table].loading !== 'idle') return\n      state[table].displayedRows = [...state[table].rows]\n      if (search === '') return\n      state[table].displayedRows = state[table].displayedRows.filter((row) =>\n        `${row[column]}`.match(search),\n      )\n    },\n\n    sortData(\n      state,\n      action: PayloadAction<{ table: string; column: string; type?: string }>,\n    ) {\n      const { table, column, type } = action.payload\n      if (column) {\n        if (type && type === 'number')\n          state[table].displayedRows.sort((a, b) => a - b)\n        else\n          state[table].displayedRows.sort((a, b) =>\n            `${a[column]}`.localeCompare(`${b[column]}`),\n          )\n      }\n    },\n  },\n})\n\nexport const {\n  initTable,\n  dataLoading,\n  dataReceived,\n  filterData,\n  sortData,\n  searchData,\n} = reusableTableSlice.actions\n\nexport const fetchData = (\n  name: string,\n  getData: () => Promise<any[]>,\n): AppThunk => async (dispatch) => {\n  dispatch(dataLoading({ name }))\n  const data = await getData()\n  dispatch(dataReceived({ name, data }))\n}\n\n// if you want, add selectors here, change the one below, remember to register reducer in store.ts\nexport const selectTables = (state: RootState) => state.tables\n\nexport default reusableTableSlice.reducer\n","import React, { useState, useEffect } from 'react'\nimport styles from './TeamProjects.module.css'\nimport ReusableTable from '../../../components/ReusableTable/index'\nimport { CssBaseline, Paper } from '@material-ui/core'\nimport { useAppDispatch } from '../../../hooks/hooks'\nimport { filterData } from '../../../components/ReusableTable/ReusableTableSlice'\nimport { useHistory } from 'react-router-dom'\nimport PageHeader from '../../../components/PageHeader'\nimport SearchInput from '../../../components/SearchInput'\nimport { useTeamProjects } from '../../../hooks/useQuery/useTeamProjects'\n\nexport interface TeamProjectsProps {}\n\nconst TeamProjects: React.FC<TeamProjectsProps> = () => {\n  const info = useTeamProjects()\n  const history = useHistory()\n  const dispatch = useAppDispatch()\n  const [search, setSearch] = useState('')\n\n  useEffect(() => {\n    const f = {\n      column: 'Name',\n      values: [search],\n    }\n    dispatch(filterData({ table: 'Manage Team Projects', filters: [f] }))\n  }, [search, dispatch])\n\n  const columns = [\n    {\n      field: 'teamProjectName',\n      width: 250,\n      sortable: true,\n      headerName: 'Project name',\n    },\n    {\n      field: 'mentorName',\n      width: 250,\n      sortable: true,\n      headerName: 'Mentor name',\n    },\n    { field: 'sectionName', width: 250, sortable: true, headerName: 'Section' },\n  ]\n\n  return (\n    <CssBaseline>\n      <PageHeader name={'Team Projects'}>\n        <SearchInput\n          onSubmit={setSearch}\n          placeholder=\"Search for project name\"\n        />\n      </PageHeader>\n      <Paper className={styles.main}>\n        <ReusableTable\n          name={'Team projects'}\n          columns={columns}\n          onRowClick={(params) => history.push(`/teamprojects/${params.id}`)}\n          {...info}\n        />\n      </Paper>\n    </CssBaseline>\n  )\n}\n\nexport default TeamProjects\n","import React, { ChangeEvent, Dispatch, SetStateAction, useState } from 'react'\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core'\nimport {\n  useAppDispatch,\n  useAppSelector,\n  useCreateTeam,\n  useUsersOfType,\n} from '../../../hooks'\n\nimport styles from './CreateTeam.module.css'\nimport AddButton from '../../../components/AddButton'\nimport UButton from '../../../components/UButton'\nimport { showSnackbar } from '../../../components/Snackbar'\n\ninterface Props {\n  setIsCreateTeam: Dispatch<SetStateAction<boolean>>\n}\n\nconst CreateTeam = ({ setIsCreateTeam }: Props) => {\n  const dispatch = useAppDispatch()\n  const { activeCourse } = useAppSelector((state) => state.courseList)\n  const [selectedMentor, setSelectedMentor] = useState('')\n  const { data: mentors } = useUsersOfType('Mentor')\n  const { mutate: createTeam } = useCreateTeam()\n\n  // TODO: mobile view\n  // TODO: add loader (should be a global component)\n\n  const handleMentorSelection = (e: ChangeEvent<{ value: unknown }>) => {\n    setSelectedMentor(e.target.value as string)\n  }\n\n  const handleSubmit = (e: { preventDefault: () => void }) => {\n    e.preventDefault()\n    if (!selectedMentor) {\n      return dispatch(\n        showSnackbar({ message: 'Please choose a mentor.', severity: 'error' }),\n      )\n    }\n\n    createTeam(\n      {\n        courseId: activeCourse?._id || '',\n        mentorId: selectedMentor,\n      },\n      {\n        onSuccess: () => {\n          setIsCreateTeam(false)\n          setSelectedMentor('')\n        },\n      },\n    )\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.container}>\n      <h2 className={styles.manageHeader}>Create Team</h2>\n      <FormControl variant=\"outlined\">\n        <InputLabel>Select Mentor</InputLabel>\n        <Select\n          data-testid=\"select-mentor\"\n          labelId=\"select-mentor\"\n          value={selectedMentor}\n          onChange={handleMentorSelection}\n          className={styles.select}\n          label=\"Select Mentor\"\n        >\n          {mentors?.map((mentor) => (\n            <MenuItem\n              value={mentor.id}\n              key={mentor.id}\n            >{`${mentor.name} ${mentor.surname}`}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <div className={styles.buttons}>\n        <AddButton text=\"CREATE\" type=\"submit\" />\n        <UButton\n          text=\"CANCEL\"\n          onClick={() => {\n            setIsCreateTeam(false)\n          }}\n          color=\"secondary\"\n        />\n      </div>\n    </form>\n  )\n}\n\nexport { CreateTeam }\n","import React, { FC, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Container, CssBaseline, Paper } from '@material-ui/core'\nimport { GridSelectionModelChangeParams } from '@material-ui/data-grid'\nimport styles from './ManageTeams.module.css'\nimport AddButton from '../../../components/AddButton'\nimport SelectSortBy from '../../../components/SelectSortBy'\nimport SearchInput from '../../../components/SearchInput'\nimport ReusableTable from '../../../components/ReusableTable'\nimport PageHeader from '../../../components/PageHeader'\nimport DeleteButton from '../../../components/DeleteButton'\nimport {\n  useTeams,\n  sortTeams,\n  searchTeam,\n  useDeleteTeam,\n  useAppSelector,\n} from '../../../hooks'\nimport { Team } from '../../../models'\nimport { CreateTeam } from '../CreateTeam'\n\nexport interface ManageTeamsProps {}\n\nconst ManageTeams: FC<ManageTeamsProps> = () => {\n  const history = useHistory()\n  const { activeCourse } = useAppSelector((state) => state.courseList)\n  const [selectedTeams, setSelectedTeams] = useState<string[]>([])\n  const { data: teams, isLoading, isFetching, error } = useTeams(\n    activeCourse?._id,\n  )\n  const { mutate: deleteTeam } = useDeleteTeam()\n  const [isCreateTeam, setIsCreateTeam] = useState(false)\n\n  // TODO: mobile view\n\n  const tableName = 'Teams'\n\n  const changeSortBy = (value: string) => {\n    sortTeams(value as keyof Team)\n  }\n\n  const changeSearch = (value: string) => {\n    const column = /^[0-9a-fA-F]{1,16}$/.test(value) ? 'id' : 'surname'\n    searchTeam(column, value)\n  }\n\n  const sortByOptions = ['name', 'surname', 'courseName']\n  const columns = [\n    {\n      field: 'surname',\n      headerName: 'Mentor surname',\n      width: 200,\n      sortable: true,\n    },\n    { field: 'name', headerName: 'Mentor name', width: 150, sortable: true },\n    {\n      field: 'courseName',\n      headerName: 'Course name',\n      width: 250,\n      sortable: true,\n    },\n  ]\n\n  const handleTeamSelection = (params: GridSelectionModelChangeParams) => {\n    setSelectedTeams([...params.selectionModel] as string[])\n  }\n\n  const deleteSelectedTeams = () => {\n    selectedTeams.forEach((teamId) => {\n      deleteTeam(teamId)\n    })\n    setSelectedTeams([])\n  }\n\n  const handleRowClick = (data: { id: string | number }) => {\n    history.push(`/teams/${data.id}`)\n  }\n\n  return (\n    <Container className={styles.manageTeams} aria-label=\"Manage Teams\">\n      <CssBaseline />\n      <PageHeader name=\"Teams\">\n        <SearchInput\n          onSubmit={changeSearch}\n          placeholder=\"Search by ID or mentor surname\"\n        />\n      </PageHeader>\n      <Paper className={styles.container}>\n        <div className={styles.manageContainer}>\n          {isCreateTeam ? (\n            <CreateTeam setIsCreateTeam={setIsCreateTeam} />\n          ) : (\n            <>\n              <h2 className={styles.manageHeader}>Manage Teams</h2>\n              <span className={styles.selectSortBy}>\n                <SelectSortBy\n                  onChange={changeSortBy}\n                  initialValue=\"\"\n                  options={sortByOptions}\n                />\n              </span>\n              <div className={styles.buttons}>\n                <AddButton\n                  text=\"Add\"\n                  onClick={() => setIsCreateTeam(true)}\n                  aria-label=\"Add team\"\n                />\n                <DeleteButton\n                  confirmTitle={`Are you sure you want to delete selected (${selectedTeams.length}) teams?`}\n                  onConfirm={deleteSelectedTeams}\n                />\n              </div>\n            </>\n          )}\n        </div>\n        <div className={styles.table}>\n          <ReusableTable\n            name={tableName}\n            columns={columns}\n            data={teams}\n            error={error}\n            isLoading={isLoading}\n            isFetching={isFetching}\n            onSelectionModelChange={handleTeamSelection}\n            onRowClick={handleRowClick}\n            checkboxSelection\n          />\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default ManageTeams\n","import React from 'react'\nimport { Paper, CssBaseline, Container } from '@material-ui/core'\nimport styles from './ManageUsers.module.css'\nimport SelectSortBy from '../../../components/SelectSortBy'\nimport SearchInput from '../../../components/SearchInput'\nimport ReusableTable from '../../../components/ReusableTable'\nimport { useHistory } from 'react-router-dom'\nimport useMultipleSelect from '../../../hooks/useMultipleSelect'\nimport {\n  User,\n  UserType,\n  UserStatus,\n  UserTypeName,\n  UserStatusName,\n  UserFilters,\n  invUserStatusDict,\n  invUserTypeDict,\n} from '../../../models'\nimport PageHeader from '../../../components/PageHeader'\nimport {\n  useUsers,\n  searchUser,\n  sortUsers,\n  filterUsers,\n  useDidUpdateEffect,\n} from '../../../hooks'\n\nexport interface ManageUsersProps {}\n\nconst ManageUsers: React.FC<ManageUsersProps> = () => {\n  const { isLoading, error, data, isFetching } = useUsers()\n  const history = useHistory()\n  const tableName = 'Users'\n\n  const [statusSelect, statusFilters] = useMultipleSelect<UserStatusName>({\n    options: Object.keys(invUserStatusDict),\n    label: 'Filter by status',\n  })\n  const [typeSelect, typeFilters] = useMultipleSelect<UserTypeName>({\n    options: Object.keys(invUserTypeDict),\n    label: 'Filter by type',\n  })\n\n  const changeSortBy = (value: string) => {\n    sortUsers(value as keyof User)\n  }\n  const changeSearch = (value: string) => {\n    const column = /^[0-9a-fA-F]{1,16}$/.test(value) ? 'id' : 'surname'\n    searchUser(column as keyof User, value)\n  }\n\n  useDidUpdateEffect(() => {\n    const filters: UserFilters = {\n      type: typeFilters.map(\n        (type) => invUserTypeDict[type] as UserType,\n      ) as UserType[],\n      status: statusFilters.map(\n        (status) => invUserStatusDict[status] as UserStatus,\n      ) as UserStatus[],\n    }\n    filterUsers(filters)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [typeFilters, statusFilters])\n\n  const sortByOptions = ['name', 'surname', 'type', 'status']\n  const columns = [\n    { field: 'name', headerName: 'Name', width: 150, sortable: true },\n    { field: 'surname', headerName: 'Surname', width: 150, sortable: true },\n    { field: 'type', headerName: 'Type', width: 150, sortable: true },\n    { field: 'status', headerName: 'Status', width: 150, sortable: true },\n  ]\n\n  function handleSelection(params: any) {\n    const userID = params.row.id\n    const path = `users/${userID}`\n    history.push(path)\n  }\n\n  return (\n    <Container className={styles.container} aria-label=\"Manage Users\">\n      <CssBaseline />\n      <PageHeader name=\"Users\">\n        <SearchInput\n          onSubmit={changeSearch}\n          placeholder=\"User last name or ID\"\n        />\n      </PageHeader>\n      <Paper className={styles.tableContainer}>\n        <div className={styles.manageContainer}>\n          <h2 className={styles.manageHeader}>Manage Users</h2>\n          <div className={styles.filtersContainer}>\n            {statusSelect}\n            {typeSelect}\n          </div>\n          <span className={styles.selectSortBy}>\n            <SelectSortBy\n              onChange={changeSortBy}\n              initialValue=\"\"\n              options={sortByOptions}\n            />\n          </span>\n        </div>\n        <ReusableTable\n          name={tableName}\n          columns={columns}\n          onRowClick={handleSelection}\n          isLoading={isLoading}\n          error={error}\n          data={data}\n          isFetching={isFetching}\n        />\n      </Paper>\n    </Container>\n  )\n}\n\nexport default React.memo(ManageUsers)\n","import React from 'react'\nimport styles from './UserGrades.module.css'\nimport { Box, CircularProgress } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { mainTheme } from '../../../theme/customMaterialTheme'\nimport {\n  MAX_PROJECT,\n  PROJECT_WEIGHT,\n  QUIZ_WEIGHT,\n  TASK_WEIGHT,\n} from '../../../app/constants'\nimport PageHeader from '../../../components/PageHeader'\nimport { useUserMe } from '../../../hooks'\n\nexport interface UserGradesProps {}\n\nconst UserGrades: React.FC<UserGradesProps> = (props) => {\n  const userID = localStorage.getItem('id') ?? ''\n  const { data: userData, isLoading, error } = useUserMe({\n    enabled: !!userID,\n  })\n\n  let finalResult = 0\n\n  function getColor(percentage: number) {\n    if (percentage > 80) return '#3E66FB'\n    else if (percentage > 50) return '#3CC13B'\n    else if (percentage > 30) return '#FCE205'\n    else return '#FF384A'\n  }\n\n  if (error) {\n    return <div className={styles.error}>Error</div>\n  } else if (isLoading) {\n    return <CircularProgress className={styles.loading} />\n  } else {\n    return (\n      <ThemeProvider theme={mainTheme}>\n        <PageHeader name=\"My Grades\" />\n\n        <Box className={styles.container}>\n          <Box display=\"flex\" className={styles.container__header}>\n            <span>My Grades</span>\n          </Box>\n          {!userData?.grades.length ? (\n            <h1 style={{ margin: '3rem', fontWeight: 500 }}>No grades yet.</h1>\n          ) : (\n            <>\n              <table\n                style={{ width: '100%' }}\n                className={styles.container__body}\n              >\n                <tr>\n                  <th></th>\n                  <th>Test</th>\n                  <th>Task</th>\n                  <th>Project</th>\n                  <th>Average</th>\n                </tr>\n\n                {userData?.grades.map((grade: any) => {\n                  const testPointsPer = grade?.testMaxPoints\n                    ? ((grade?.testPoints || 0) / grade.testMaxPoints) * 100\n                    : 0\n\n                  const taskPointsPer = grade?.taskMaxPoints\n                    ? ((grade?.taskPoints || 0) / grade.taskMaxPoints) * 100\n                    : 0\n                  const projectPointsPer =\n                    ((grade?.projectPoints || 0) / MAX_PROJECT) * 100\n\n                  let weight = QUIZ_WEIGHT\n                  let average = QUIZ_WEIGHT * testPointsPer\n                  if (grade?.taskMaxPoints) {\n                    average += TASK_WEIGHT * taskPointsPer\n                    weight += TASK_WEIGHT\n                  }\n                  if (grade?.projectPoints) {\n                    average += PROJECT_WEIGHT * projectPointsPer\n                    weight += PROJECT_WEIGHT\n                  }\n\n                  average /= weight\n                  finalResult += average\n\n                  return (\n                    <tr>\n                      <th>{grade['Section name']}</th>\n                      <td>\n                        <span\n                          className={styles.table__percentage}\n                          style={{ color: getColor(testPointsPer) }}\n                        >\n                          {testPointsPer.toFixed(2)}%\n                        </span>\n                        <span className={styles.table__points}>\n                          {grade?.testPoints} / {grade?.testMaxPoints}\n                        </span>\n                      </td>\n                      <td>\n                        {grade?.taskMaxPoints ? (\n                          <>\n                            <span\n                              className={styles.table__percentage}\n                              style={{ color: getColor(taskPointsPer) }}\n                            >\n                              {taskPointsPer.toFixed(2)}%\n                            </span>\n                            <span className={styles.table__points}>\n                              {grade?.taskPoints} / {grade?.taskMaxPoints}\n                            </span>\n                          </>\n                        ) : (\n                          <span> - </span>\n                        )}\n                      </td>\n                      <td>\n                        {grade?.projectPoints ? (\n                          <>\n                            <span\n                              className={styles.table__percentage}\n                              style={{ color: getColor(projectPointsPer) }}\n                            >\n                              {projectPointsPer.toFixed(2)}%\n                            </span>\n                            <span className={styles.table__points}>\n                              {grade?.projectPoints} / {MAX_PROJECT}\n                            </span>\n                          </>\n                        ) : (\n                          <span> - </span>\n                        )}\n                      </td>\n                      <td>\n                        <span\n                          className={styles.table__percentage}\n                          style={{ color: getColor(average) }}\n                        >\n                          {average.toFixed(2)} %\n                        </span>\n                      </td>\n                    </tr>\n                  )\n                })}\n              </table>\n\n              <h2>Your current overall result</h2>\n\n              <div\n                style={{\n                  height: '1rem',\n                  width: '400px',\n                  background: 'rgba(255,255,255,.90)',\n                  borderRadius: '1rem',\n                  margin: '1rem auto 1rem auto',\n                  position: 'relative',\n                }}\n              >\n                <div\n                  style={{\n                    height: '1rem',\n                    width: `${\n                      (400 * (finalResult / userData?.grades?.length)) / 100\n                    }px`,\n                    background: getColor(\n                      finalResult / userData?.grades?.length,\n                    ),\n                    borderRadius: '1rem',\n                  }}\n                />\n                <div\n                  style={{\n                    width: '5px',\n                    height: '1rem',\n                    background: '#000',\n                    position: 'absolute',\n                    top: '0',\n                    left: '320px',\n                  }}\n                />\n              </div>\n              <h3 style={{ marginBottom: '3rem' }}>\n                {(finalResult / userData?.grades?.length).toFixed(2)}%\n              </h3>\n            </>\n          )}\n        </Box>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default UserGrades\n","export const MAX_PROJECT = 60\nexport const EXTRA_PROJECT = 10\nexport const SUM_PROJECT = 70\nexport const MIN_PASSED = 30\n\nexport const QUIZ_WEIGHT = 3\nexport const TASK_WEIGHT = 2\nexport const PROJECT_WEIGHT = 5\nexport const SUM_WEIGHT = QUIZ_WEIGHT + TASK_WEIGHT + PROJECT_WEIGHT\n","import React, { useEffect, useState } from 'react'\nimport { Box, CircularProgress } from '@material-ui/core'\n\nimport { IGrade } from '../../../models/User.model'\nimport UButton from '../../../components/UButton'\n\nimport styles from './ManageGrades.module.css'\nimport DeleteButton from '../../../components/DeleteButton'\nimport useSnackbar from '../../../hooks/useSnackbar'\nimport {\n  useCreateGrade,\n  useDeleteGrade,\n  useGrades,\n  useSections,\n  useUpdateGrade,\n} from '../../../hooks'\nimport { Section } from '../../../models'\nimport FindModal from '../../../components/FindModal/FindModal'\n\nexport interface ManageGradesProps {\n  userID: string\n}\n\nexport interface ISectionsUtility {\n  _id: string\n  name?: string\n}\n\nconst ManageGrades: React.FC<ManageGradesProps> = (props) => {\n  const [isEdit, setIsEdit] = useState<Array<boolean>>([])\n\n  const [grades, setGrades] = useState<IGrade[]>([])\n  const [sections, setSections] = useState<ISectionsUtility[]>([])\n\n  const [isOpenSectionsModal, setIsOpenSectionsModal] = useState(false)\n  const { showError, showWarning } = useSnackbar()\n  const { data: gradesData, isLoading, error } = useGrades(props.userID)\n  const sectionsQuery = useSections({\n    enabled: isOpenSectionsModal,\n  })\n  const { mutate: createGrade } = useCreateGrade(props.userID)\n  const { mutate: deleteGrade } = useDeleteGrade()\n  const { mutate: updateGrade } = useUpdateGrade()\n\n  const sectionColumns = [\n    { field: 'name', headerName: 'Section name', width: 150, sortable: true },\n  ]\n\n  useEffect(() => {\n    gradesData?.grades && setGrades(gradesData.grades)\n    gradesData?.sections && setSections(gradesData.sections)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [gradesData])\n\n  function toggleEdit(index: number) {\n    let edits = [...isEdit]\n    edits[index] = !edits[index]\n    setIsEdit([...edits])\n  }\n\n  function openSectionsModal() {\n    setIsOpenSectionsModal(true)\n  }\n  function closeSectionsModal() {\n    setIsOpenSectionsModal(false)\n  }\n\n  function handleInputChangeGrade(event: React.ChangeEvent<HTMLInputElement>) {\n    const target = event.target\n    const index = target.tabIndex\n    const name = target.name\n    const value = +target.value\n\n    const tmpGrades: IGrade[] = [...((grades ?? []) as IGrade[])]\n    const grade = tmpGrades[index]\n    // @ts-ignore\n    grade[name] = +value\n    tmpGrades[index] = grade\n    setGrades(tmpGrades)\n  }\n\n  function onClickDelete(index: number) {\n    if (gradesData?.grades[index]) {\n      deleteGrade(gradesData?.grades[index]?._id)\n      toggleEdit(index)\n    }\n  }\n\n  function saveGrade(index: number) {\n    try {\n      if (gradesData?.grades[index]) {\n        updateGrade([gradesData?.grades[index], gradesData.grades[index]])\n      } else {\n        console.log(grades![index])\n        createGrade(grades![index])\n      }\n      toggleEdit(index)\n    } catch (err) {\n      if (err?.response?.data?.message.match('sectionId'))\n        showWarning('Section must be selected.')\n    }\n  }\n\n  function addGrade(event: any) {\n    const idx = grades.length\n    const tmpGrade: Omit<IGrade, '_id'> = {\n      sectionId: '',\n      testPoints: 0,\n      testMaxPoints: 0,\n      taskPoints: 0,\n      taskMaxPoints: 0,\n      projectPoints: 0,\n    }\n    //@ts-ignore\n    setGrades([...grades, tmpGrade])\n    setSections([...sections, { _id: 'exampleID' }])\n\n    toggleEdit(idx)\n  }\n\n  function handleSectionSelection(index: number) {\n    return function onSectionSelection(sectionRow: Section) {\n      closeSectionsModal()\n      const tmpGrades = [...grades]\n      tmpGrades[index].sectionId = sectionRow.id\n      setGrades([...tmpGrades])\n\n      console.log({ sections })\n      console.log({ grades })\n      const tmpSections = [...sections]\n      tmpSections[index].name = sectionRow.name\n      setSections([...tmpSections])\n    }\n  }\n\n  if (error) showError((error as Error).message)\n\n  if (isLoading) return <CircularProgress className={styles.loading} />\n\n  return (\n    <Box className={styles.container}>\n      <Box display=\"flex\" className={styles.container__header}>\n        <span>Manage Grades</span>\n        <UButton text=\"ADD\" color=\"primary\" onClick={addGrade} />\n      </Box>\n      <Box display=\"flex\" flexWrap=\"wrap\">\n        {grades?.map((grade, index) => (\n          <div className={styles.gradeContainer} key={index}>\n            {isOpenSectionsModal && isEdit[index] && (\n              <FindModal<Section>\n                onRowSelection={handleSectionSelection(index)}\n                query={sectionsQuery}\n                queryKey=\"sections\"\n                columns={sectionColumns}\n                searchPlaceholder=\"Search by name\"\n                searchBy=\"name\"\n                name=\"Find section\"\n                open={isOpenSectionsModal}\n                handleClose={closeSectionsModal}\n                handleOpen={() => setIsOpenSectionsModal(true)}\n              />\n            )}\n\n            <div className={styles.gradeContainer__header}>\n              <span>{sections[index]?.name ?? 'Section Name'}</span>\n              {isEdit[index] && grades[index]?.sectionId === '' && (\n                <UButton\n                  text=\"SELECT\"\n                  color=\"primary\"\n                  onClick={openSectionsModal}\n                />\n              )}\n              {isEdit[index] && grades[index]?.sectionId !== '' && (\n                <UButton\n                  text=\"CHANGE\"\n                  color=\"primary\"\n                  onClick={openSectionsModal}\n                />\n              )}\n            </div>\n\n            <form className={`${styles.gradeContainer__body}`}>\n              <div className={styles.gradeContainer__body__row}>\n                <div className={styles.gradeContainer__body__row__key}>\n                  <label htmlFor=\"test\">Test</label>\n                </div>\n                <div className={`${styles.gradeContainer__body__row__value}`}>\n                  {isEdit[index] ? (\n                    <div>\n                      <input\n                        type=\"text\"\n                        tabIndex={index}\n                        name=\"testPoints\"\n                        placeholder={grade?.testPoints?.toString()}\n                        onChange={handleInputChangeGrade}\n                      />\n                      <input\n                        type=\"text\"\n                        tabIndex={index}\n                        name=\"testMaxPoints\"\n                        placeholder={grade?.testMaxPoints?.toString()}\n                        onChange={handleInputChangeGrade}\n                      />\n                    </div>\n                  ) : (\n                    <p>\n                      {Math.round(\n                        grade?.testMaxPoints === 0\n                          ? 0\n                          : (grade.testPoints / grade.testMaxPoints) * 100,\n                      )}\n                      %\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <div className={styles.gradeContainer__body__row}>\n                <div className={styles.gradeContainer__body__row__key}>\n                  <label htmlFor=\"test\">Task</label>\n                </div>\n                <div className={`${styles.gradeContainer__body__row__value}`}>\n                  {isEdit[index] ? (\n                    <div>\n                      <input\n                        type=\"text\"\n                        tabIndex={index}\n                        name=\"taskPoints\"\n                        placeholder={grade?.taskPoints?.toString()}\n                        onChange={handleInputChangeGrade}\n                      />\n                      <input\n                        type=\"text\"\n                        tabIndex={index}\n                        name=\"taskMaxPoints\"\n                        placeholder={grade?.taskMaxPoints?.toString()}\n                        onChange={handleInputChangeGrade}\n                      />\n                    </div>\n                  ) : (\n                    <p>\n                      {Math.round(\n                        grade.taskMaxPoints === 0\n                          ? 0\n                          : (grade.taskPoints / grade.taskMaxPoints) * 100,\n                      )}\n                      %\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <div className={styles.gradeContainer__body__row}>\n                <div className={styles.gradeContainer__body__row__key}>\n                  <label htmlFor=\"test\">Project</label>\n                </div>\n                <div className={`${styles.gradeContainer__body__row__value}`}>\n                  <div>\n                    {isEdit[index] ? (\n                      <input\n                        type=\"text\"\n                        tabIndex={index}\n                        name=\"projectPoints\"\n                        placeholder={grade?.projectPoints?.toString()}\n                        onChange={handleInputChangeGrade}\n                      />\n                    ) : (\n                      <p>{grade?.projectPoints}pkt</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </form>\n            <Box display=\"flex\" justifyContent=\"center\">\n              <DeleteButton\n                confirmTitle=\"Are you sure you want to delete this grade? XX\"\n                onConfirm={() => onClickDelete(index)}\n              />\n\n              {isEdit[index] ? (\n                <UButton text=\"SAVE\" onClick={() => saveGrade(index)} />\n              ) : (\n                <UButton text=\"EDIT\" onClick={() => toggleEdit(index)} />\n              )}\n            </Box>\n          </div>\n        ))}\n      </Box>\n    </Box>\n  )\n}\n\nexport default ManageGrades\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Box, CircularProgress } from '@material-ui/core'\nimport { mainTheme } from '../../../theme/customMaterialTheme'\nimport { ThemeProvider } from '@material-ui/styles'\n\nimport { convertUserToIUser, IUser, userStatusDict, userTypeDict } from '../../../models/User.model'\nimport { UserStatus as Status } from '../../../models/User.model'\nimport { UserType as Role } from '../../../models/User.model'\nimport ManageGrades from '../ManageGrades'\nimport UButton from '../../../components/UButton'\nimport styles from './ManageUser.module.css'\nimport DeleteButton from '../../../components/DeleteButton'\nimport ReusableGoBack from '../../../components/ReusableGoBack'\nimport PageHeader from '../../../components/PageHeader'\nimport { useDeleteUser, useUpdateUser, useUser } from '../../../hooks'\nimport useSnackbar from '../../../hooks/useSnackbar'\n\nexport interface ManageUserProps {}\n\nconst ManageUser: React.FC<ManageUserProps> = (props: any) => {\n  const history = useHistory()\n\n  const [isEdit, setIsEdit] = useState(false)\n  const [userToSave, setUserToSave] = useState<IUser | undefined>()\n  const { showError } = useSnackbar()\n\n  let { userID } = useParams<{userID: string}>()\n  const { data: user, isLoading, error } = useUser(userID)\n  const { mutate: updateUser } = useUpdateUser({\n    successMessage: 'User updated correctly!',\n    errorMessage: 'User not updated!',\n    onSuccess: toggleEdit,\n    invalidate: ['user', userID],\n    newData: ([id, newUser], previousData) => ({\n      ...previousData,\n      name: newUser.name,\n      surname: newUser.surname,\n      email: newUser.email,\n      type: userTypeDict[newUser.type],\n      status: userStatusDict[newUser.status],\n    }),\n  })\n  const { mutate: deleteUser } = useDeleteUser({\n    successMessage: 'User deleted!',\n    errorMessage: 'User not deleted!',\n    onSuccess: () => history.push('/users'),\n    newData: (id, previousData) =>\n      previousData.filter((user) => user.id !== id),\n  })\n\n  useEffect(() => {\n    if (user) setUserToSave(convertUserToIUser(user))\n  }, [user])\n\n  function toggleEdit() {\n    setIsEdit(!isEdit)\n  }\n\n  function handleInputChange(event: any) {\n    const target = event.target\n    const name = target.name\n    let value = target.value\n    if (!isNaN(value)) value = +value\n    // @ts-ignore\n    setUserToSave({\n      ...userToSave,\n      [name]: value,\n    })\n  }\n\n  if (error) showError((error as Error).message)\n\n  if (isLoading) return <CircularProgress className={styles.loading} />\n\n  return (\n    <ThemeProvider theme={mainTheme}>\n      <PageHeader>\n        <ReusableGoBack\n          pageName=\"Users\"\n          pageLink=\"/users\"\n          elementName={`${user?.name} ${user?.surname}`}\n        />\n      </PageHeader>\n\n      <Box className={styles.container}>\n        <Box display=\"flex\" className={styles.container__header}>\n          <span>Manage user</span>\n          <div className={styles.container__header__button}>\n            <DeleteButton\n              confirmTitle={`Are you sure you want to delete the user?`}\n              onConfirm={() => deleteUser(userID)}\n            />\n            {isEdit ? (\n              <UButton\n                text=\"SAVE\"\n                color=\"primary\"\n                onClick={() => updateUser([userID, userToSave!])}\n              />\n            ) : (\n              <UButton text=\"EDIT\" color=\"primary\" onClick={toggleEdit} />\n            )}\n          </div>\n        </Box>\n\n        <form className={styles.manageUserForm}>\n          <div className={styles.manageUserForm__row}>\n            <div className={styles.manageUserForm__row__key}>\n              <label htmlFor=\"status\">Status</label>\n            </div>\n            <div\n              className={`\n                          ${styles.manageUserForm__row__value}\n                          ${styles.status_radio_button}\n                          ${isEdit && styles.status_radio_button__edit}\n                      `}\n            >\n              {(isEdit || (userToSave?.status as Status) === Status.Active) && (\n                <>\n                  <input\n                    type=\"radio\"\n                    id=\"Active\"\n                    name=\"status\"\n                    value={Status.Active}\n                    checked={(userToSave?.status as Status) === Status.Active}\n                    onChange={handleInputChange}\n                  />\n                  <label\n                    className={`${styles.status_radio_button__blue}`}\n                    htmlFor=\"Active\"\n                  >\n                    Active\n                  </label>\n                </>\n              )}\n\n              {(isEdit ||\n                (userToSave?.status as Status) === Status.Resigned) && (\n                <>\n                  <input\n                    type=\"radio\"\n                    id=\"Resigned\"\n                    name=\"status\"\n                    value={Status.Resigned}\n                    checked={(userToSave?.status as Status) === Status.Resigned}\n                    onChange={handleInputChange}\n                  />\n                  <label\n                    className={`${styles.status_radio_button__red}`}\n                    htmlFor=\"Resigned\"\n                  >\n                    Resigned\n                  </label>\n                </>\n              )}\n\n              {(isEdit ||\n                (userToSave?.status as Status) === Status.Archived) && (\n                <>\n                  <input\n                    type=\"radio\"\n                    id=\"Archived\"\n                    name=\"status\"\n                    value={Status.Archived}\n                    checked={(userToSave?.status as Status) === Status.Archived}\n                    onChange={handleInputChange}\n                  />\n                  <label\n                    className={`${styles.status_radio_button__green}`}\n                    htmlFor=\"Archived\"\n                  >\n                    Archived\n                  </label>\n                </>\n              )}\n            </div>\n          </div>\n\n          <div className={styles.manageUserForm__row}>\n            <div className={styles.manageUserForm__row__key}>\n              <label htmlFor=\"name\">First Name</label>\n            </div>\n            <div className={styles.manageUserForm__row__value}>\n              {isEdit ? (\n                <input\n                  type=\"text\"\n                  id=\"name\"\n                  name=\"name\"\n                  placeholder={user?.name}\n                  onChange={handleInputChange}\n                />\n              ) : (\n                <p>{user?.name}</p>\n              )}\n            </div>\n          </div>\n\n          <div className={styles.manageUserForm__row}>\n            <div className={styles.manageUserForm__row__key}>\n              <label htmlFor=\"surnname\">Last Name</label>\n            </div>\n            <div className={styles.manageUserForm__row__value}>\n              {isEdit ? (\n                <input\n                  type=\"text\"\n                  id=\"surnname\"\n                  name=\"surname\"\n                  placeholder={user?.surname}\n                  onChange={handleInputChange}\n                />\n              ) : (\n                <p>{user?.surname}</p>\n              )}\n            </div>\n          </div>\n\n          <div className={styles.manageUserForm__row}>\n            <div className={styles.manageUserForm__row__key}>\n              <label htmlFor=\"email\">Email</label>\n            </div>\n            <div className={styles.manageUserForm__row__value}>\n              {isEdit ? (\n                <input\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  placeholder={user?.email}\n                  onChange={handleInputChange}\n                />\n              ) : (\n                <p>{user?.email}</p>\n              )}\n            </div>\n          </div>\n\n          <div className={styles.manageUserForm__row}>\n            <div className={styles.manageUserForm__row__key}>\n              <label htmlFor=\"type\">Type</label>\n            </div>\n            <div className={styles.manageUserForm__row__value}>\n              {isEdit ? (\n                <select\n                  name=\"type\"\n                  value={userToSave?.type}\n                  onChange={handleInputChange}\n                >\n                  <option value={Role.Candidate}>Candidate</option>\n                  <option value={Role.Participant}>Participant</option>\n                  <option value={Role.Mentor}>Mentor</option>\n                  <option value={Role.Admin}>Admin</option>\n                </select>\n              ) : (\n                <p>{Role[userToSave?.type!]}</p>\n              )}\n            </div>\n          </div>\n        </form>\n      </Box>\n      <ManageGrades userID={userID} />\n    </ThemeProvider>\n  )\n}\n\nexport default ManageUser\n","import { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\nexport default useStyles\n","import React from 'react'\nimport { Button, CssBaseline, Typography, Container } from '@material-ui/core'\nimport HeaderRegistration from '../../../components/HeaderRegistration'\nimport { useHistory } from 'react-router-dom'\nimport useStyles from './ResetPasswordStyles'\n\ninterface SuccessfulResetPasswordInfoProps {\n  title: string\n}\nconst SuccessfulResetPasswordInfo: React.FC<SuccessfulResetPasswordInfoProps> = ({\n  title,\n}) => {\n  const history = useHistory()\n  const classes = useStyles()\n\n  const routeChange = () => {\n    let path = `/login`\n    history.push(path)\n  }\n  return (\n    <div>\n      <HeaderRegistration />\n      <Container component=\"main\" maxWidth=\"sm\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            {title}\n          </Typography>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            data-testid=\"rp-button\"\n            onClick={routeChange}\n          >\n            Go back to the login page\n          </Button>\n        </div>\n      </Container>\n    </div>\n  )\n}\nexport default SuccessfulResetPasswordInfo\n","import React, { useState } from 'react'\nimport {\n  Button,\n  CssBaseline,\n  Typography,\n  Container,\n  Grid,\n} from '@material-ui/core'\nimport StyledTextField from '../../../components/StyledTextField'\nimport HeaderRegistration from '../../../components/HeaderRegistration'\nimport useSnackbar from '../../../hooks/useSnackbar'\nimport useStyles from './ResetPasswordStyles'\nimport SuccessfulResetPasswordInfo from './SuccessfulResetPasswordInfo'\nimport { api } from '../../../api'\n\nexport interface ResetPasswordProps {}\n\nexport default function ResetPasswordFromLink() {\n  const classes = useStyles()\n  const { showError } = useSnackbar()\n\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [beenSent, setBeenSent] = useState(false)\n\n  const urlParams = new URLSearchParams(window.location.search)\n  const userId = urlParams.get('id')\n  const token = urlParams.get('token')\n  console.log(userId, token)\n\n  const handleSubmit = async () => {\n    try {\n      await api.post('users/resetpassword', { userId, token, password })\n      setBeenSent(true)\n    } catch (error) {\n      showError('Incorrect password or the reset link expired!')\n    }\n  }\n\n  if (beenSent)\n    return (\n      <SuccessfulResetPasswordInfo title={'Your password has been changed!'} />\n    )\n\n  return (\n    <div>\n      <HeaderRegistration />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Reset Password\n          </Typography>\n          <div className={classes.form}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <StyledTextField\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  name=\"password\"\n                  label=\"New Password\"\n                  type=\"password\"\n                  data-testid=\"r-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <StyledTextField\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  name=\"passwordconfirm\"\n                  label=\"Confirm New Password\"\n                  type=\"password\"\n                  data-testid=\"r-cpassword\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              data-testid=\"rp-button\"\n              onClick={handleSubmit}\n            >\n              Send\n            </Button>\n          </div>\n        </div>\n      </Container>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Container, CssBaseline, Paper } from '@material-ui/core'\nimport { GridValueFormatterParams } from '@material-ui/data-grid'\nimport styles from './ManageSections.module.css'\nimport SelectSortBy from '../../../components/SelectSortBy'\nimport SearchInput from '../../../components/SearchInput'\nimport ReusableTable from '../../../components/ReusableTable'\nimport UButton from '../../../components/UButton'\nimport PageHeader from '../../../components/PageHeader'\nimport { searchSection, sortSections, useSections } from '../../../hooks'\nimport { ManageSection } from '../../../models'\nimport { displayFormattedDate } from '../../../api'\n\nexport interface ManageSectionsProps {}\n\nconst ManageSections: React.FC<ManageSectionsProps> = () => {\n  const history = useHistory()\n  const tableName = 'Sections'\n  const { data: sections, isLoading, isFetching, error } = useSections()\n\n  const changeSortBy = (value: string) => {\n    sortSections(value as keyof ManageSection)\n  }\n\n  const changeSearch = (value: string) => {\n    const column = /^[0-9a-fA-F]{1,16}$/.test(value) ? 'id' : 'name'\n    searchSection(column, value)\n  }\n\n  const handleRowClick = (data: { id: string | number }) => {\n    history.push(`/sections/${data.id}/edit`)\n  }\n\n  const handleAddClick = () => {\n    history.push('/sections/create')\n  }\n\n  const sortByOptions = ['name', 'startDate', 'endDate', 'courseName']\n  const columns = [\n    { field: 'name', headerName: 'Name', width: 200, sortable: true },\n    {\n      field: 'startDate',\n      headerName: 'Start date',\n      width: 200,\n      sortable: true,\n      valueFormatter: (params: GridValueFormatterParams) =>\n        displayFormattedDate(params.value as number),\n    },\n    {\n      field: 'endDate',\n      headerName: 'End date',\n      width: 200,\n      sortable: true,\n      valueFormatter: (params: GridValueFormatterParams) =>\n        displayFormattedDate(params.value as number),\n    },\n    {\n      field: 'courseName',\n      headerName: 'Course name',\n      width: 150,\n      sortable: true,\n    },\n  ]\n\n  return (\n    <Container className={styles.manageSections} aria-label=\"Manage Sections\">\n      <CssBaseline />\n      <PageHeader name=\"Sections\">\n        <SearchInput\n          onSubmit={changeSearch}\n          placeholder=\"Search by ID or section name\"\n        />\n      </PageHeader>\n      <Paper className={styles.container}>\n        <div className={styles.manageContainer}>\n          <h2 className={styles.manageHeader}>Manage Sections</h2>\n          <span className={styles.addButton} aria-label=\"Add section\">\n            <UButton text=\"ADD\" color=\"primary\" onClick={handleAddClick} />\n          </span>\n          <span className={styles.selectSortBy}>\n            <SelectSortBy\n              onChange={changeSortBy}\n              initialValue=\"\"\n              options={sortByOptions}\n            />\n          </span>\n        </div>\n        <div className={styles.table}>\n          <ReusableTable\n            name={tableName}\n            columns={columns}\n            onRowClick={handleRowClick}\n            data={sections}\n            isFetching={isFetching}\n            isLoading={isLoading}\n            error={error}\n          />\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default ManageSections\n","import React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport DateFnsUtils from '@date-io/date-fns'\nimport 'date-fns'\n//\nimport {\n  Container,\n  CssBaseline,\n  Paper,\n  InputLabel,\n  MenuItem,\n  Select,\n  CircularProgress,\n  LinearProgress,\n} from '@material-ui/core'\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers'\nimport styles from './SectionView.module.css'\nimport { NewSectionData } from '../../../models/Section.model'\nimport StyledTextField from '../../../components/StyledTextField'\nimport UButton from '../../../components/UButton'\nimport DeleteButton from '../../../components/DeleteButton'\nimport PageHeader from '../../../components/PageHeader'\nimport ReusableGoBack from '../../../components/ReusableGoBack'\nimport {\n  useCourses,\n  useCreateSection,\n  useDeleteSection,\n  usePatchSection,\n  useProjectForSection,\n  useSection,\n} from '../../../hooks'\nimport useSnackbar from '../../../hooks/useSnackbar'\n\nconst SectionView = () => {\n  const [sectionName, setSectionName] = useState('')\n  const [courseName, setCourseName] = useState('')\n  const [courseId, setCourseId] = useState('')\n  const [description, setDescription] = useState('')\n  const [startDate, setStartDate] = useState<Date | undefined>(new Date())\n  const [endDate, setEndDate] = useState<Date | undefined>(new Date())\n  const [referenceProject, setReferenceProject] = useState('')\n  const coursesQuery = useCourses()\n  const [isInEditMode, setIsInEditMode] = useState(false)\n\n  const { id } = useParams<Record<'id', string>>()\n  const { data: section, isLoading, isFetching, error } = useSection(id)\n  const projectQuery = useProjectForSection(id)\n  const { mutate: patchSection } = usePatchSection()\n  const { mutate: addSection } = useCreateSection()\n  const { mutate: deleteSection } = useDeleteSection()\n  const { showError } = useSnackbar()\n  const history = useHistory()\n\n  useEffect(() => {\n    setReferenceProject(projectQuery.data?.projectName ?? '---')\n  }, [projectQuery.data])\n\n  useEffect(() => {\n    if (section) {\n      setSectionName(section.name)\n      setCourseName(section.courseName)\n      setCourseId(section.courseId)\n      setDescription(section.description || '')\n      setStartDate(\n        section.startDate ? new Date(section.startDate * 1000) : undefined,\n      )\n      setEndDate(section.endDate ? new Date(section.endDate * 1000) : undefined)\n    }\n  }, [section])\n\n  const saveSection = async () => {\n    const sectionData: NewSectionData = {\n      name: sectionName,\n      startDate: startDate?.toISOString() || undefined,\n      endDate: endDate?.toISOString() || undefined,\n      description: description,\n      course: courseId,\n    }\n\n    id ? patchSection([id, sectionData]) : addSection(sectionData)\n    setIsInEditMode(false)\n  }\n\n  const handleDeleteClick = async () => {\n    deleteSection(id)\n    history.push('/sections')\n  }\n\n  const renderButtonEditSave = () => {\n    return isInEditMode ? (\n      <span\n        onClick={saveSection}\n        className={styles.saveButton}\n        aria-label=\"Save section\"\n      >\n        <UButton\n          text=\"SAVE\"\n          color=\"primary\"\n          onClick={() => setIsInEditMode(true)}\n        />\n      </span>\n    ) : (\n      <span className={styles.editButton} aria-label=\"Edit section\">\n        <UButton\n          text=\"EDIT\"\n          color=\"primary\"\n          onClick={() => setIsInEditMode(true)}\n        />\n      </span>\n    )\n  }\n\n  const renderSectionName = () => {\n    return isInEditMode ? (\n      <div className={styles.textFieldSectionName}>\n        <InputLabel>Section Name</InputLabel>\n        <StyledTextField\n          value={sectionName}\n          onChange={(e) => setSectionName(e.target.value)}\n        />\n      </div>\n    ) : (\n      <span className={styles.section_title}> {sectionName} </span>\n    )\n  }\n\n  const renderDescription = () => {\n    return isInEditMode ? (\n      <div className={styles.textFieldDescription}>\n        <InputLabel>Description</InputLabel>\n        <StyledTextField\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          multiline={true}\n        />\n      </div>\n    ) : (\n      <span> Description: {description} </span>\n    )\n  }\n\n  const handleChangeCourse = (e: any) => {\n    const newCourseId = e.target.value\n    const newCourse = coursesQuery.data?.find(\n      (course) => course.name === newCourseId,\n    )\n    const newCourseName = newCourse ? newCourse.name : ''\n\n    setCourseId(newCourseId)\n    setCourseName(newCourseName)\n  }\n\n  const renderCourse = () => {\n    return isInEditMode ? (\n      <div className={styles.textFieldCourse}>\n        <InputLabel>Select Course</InputLabel>\n        <Select\n          variant=\"outlined\"\n          className={styles.select}\n          value={courseId}\n          onChange={handleChangeCourse}\n        >\n          <MenuItem disabled>Pick a course</MenuItem>\n          {coursesQuery.data?.map((course) => (\n            <MenuItem value={course._id} key={course._id}>\n              {course.name}\n            </MenuItem>\n          ))}\n        </Select>\n      </div>\n    ) : (\n      <span className={styles.course_title}> {courseName}</span>\n    )\n  }\n\n  const renderButtonDelete = () => {\n    return (\n      id &&\n      !isInEditMode && (\n        <DeleteButton\n          confirmTitle=\"Are you sure you want to delete this section?\"\n          onConfirm={handleDeleteClick}\n        />\n      )\n    )\n  }\n\n  const displayedError = error ?? coursesQuery.error ?? projectQuery.error\n  if (displayedError) showError((displayedError as Error).message)\n\n  if (isLoading || coursesQuery.isLoading || projectQuery.isLoading)\n    return <CircularProgress />\n\n  if (isFetching || coursesQuery.isFetching || projectQuery.isFetching)\n    return <LinearProgress />\n\n  return (\n    <Container className={styles.manageSections} aria-label=\"Manage Section\">\n      <CssBaseline />\n      <PageHeader>\n        <ReusableGoBack\n          pageName=\"Sections\"\n          pageLink=\"/sections\"\n          elementName={sectionName}\n        />\n      </PageHeader>\n      <Paper className={styles.container}>\n        <div className={styles.manageContainer}>\n          <h2 className={styles.manageHeader}>Manage Section</h2>\n          <div className={styles.buttonContainer}>\n            <span className={styles.deleteButton} aria-label=\"Delete section\">\n              {renderButtonDelete()}\n            </span>\n            {renderButtonEditSave()}\n          </div>\n        </div>\n        <div className={styles.manageDescription}>\n          {renderSectionName()}\n          {renderCourse()}\n          {renderDescription()}\n        </div>\n        <div className={styles.manageSectionInfo}>\n          <div className={styles.manageSectionMaterial}>\n            <h3>Materials:</h3>\n            <span>Introduction</span>\n          </div>\n          <div className={styles.manageSectionDates}>\n            <h3>Dates:</h3>\n            <div className={styles.textFieldDateContainerOnEdit}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DatePicker\n                  disableToolbar={!isInEditMode}\n                  disabled={!isInEditMode}\n                  variant=\"inline\"\n                  format=\"dd/MM/yyyy\"\n                  label=\"Start date\"\n                  inputVariant=\"outlined\"\n                  value={startDate}\n                  onChange={(e) => setStartDate(e || undefined)}\n                />\n                <DatePicker\n                  disableToolbar={!isInEditMode}\n                  disabled={!isInEditMode}\n                  variant=\"inline\"\n                  format=\"dd/MM/yyyy\"\n                  label=\"End date\"\n                  inputVariant=\"outlined\"\n                  autoOk\n                  value={endDate}\n                  onChange={(e) => setEndDate(e || undefined)}\n                />\n              </MuiPickersUtilsProvider>\n            </div>\n          </div>\n          <div className={styles.manageSectionRefPro}>\n            <h3>Reference project:</h3>\n            <p>{referenceProject}</p>\n          </div>\n        </div>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default SectionView\n","import React, { useState } from 'react'\nimport styles from './MyProfile.module.css'\nimport { CircularProgress, Button, Grid } from '@material-ui/core'\nimport StyledTextField from '../../../components/StyledTextField'\nimport PageHeader from '../../../components/PageHeader'\nimport useSnackbar from '../../../hooks/useSnackbar'\nimport { useUserMe } from '../../../hooks'\nimport { api } from '../../../api'\n\nexport interface MyProfileProps {}\n\nconst MyProfile = () => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [isPasswordChange, setIsPasswordChange] = useState(false)\n  const [passwordChanged, setPasswordChanged] = useState(false)\n  const { showError } = useSnackbar()\n  const userID = localStorage.getItem('id') ?? ''\n  const { data: user, isLoading, error } = useUserMe({\n    enabled: !!userID,\n  })\n\n  const handleSubmit = async () => {\n    const id = localStorage.getItem('id')\n    try {\n      await api.post('users/changepassword', {\n        id,\n        oldPassword,\n        newPassword,\n      })\n      setPasswordChanged(true)\n    } catch (error) {\n      console.log(error)\n      showError('Something went wrong :( Please try again')\n    }\n  }\n\n  if (error) return <div className={styles.error}>Something went wrong :(</div>\n\n  if (isLoading || !user) return <CircularProgress className={styles.loading} />\n\n  if (isPasswordChange && !passwordChanged) {\n    return (\n      <div className={styles.modal}>\n        <div className={styles.modalContent}>\n          <h2>Please provide old and new password to proceed:</h2>\n          <Grid container spacing={2} className={styles.passwordInput}>\n            <Grid item xs={12}>\n              <StyledTextField\n                value={oldPassword}\n                onChange={(e) => setOldPassword(e.target.value)}\n                name=\"password\"\n                label=\"Old Password\"\n                type=\"password\"\n                data-testid=\"r-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <StyledTextField\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                name=\"passwordconfirm\"\n                label=\"New Password\"\n                type=\"password\"\n                data-testid=\"r-cpassword\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            id={styles.buttonEditPassword}\n            data-testid=\"rp-button\"\n            onClick={handleSubmit}\n          >\n            Send\n          </Button>\n          <div>\n            <Button\n              id={styles.buttonAbort}\n              onClick={() => setIsPasswordChange(!isPasswordChange)}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  if (isPasswordChange && passwordChanged) {\n    return (\n      <div className={styles.modal}>\n        <div className={styles.modalContent}>\n          <h2>Your password had been changed :)</h2>\n          <div>\n            <Button\n              id={styles.buttonConfirm}\n              onClick={() => {\n                setIsPasswordChange(!isPasswordChange)\n                setPasswordChanged(false)\n              }}\n            >\n              Cool, thank you!\n            </Button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div className={styles.myProfileContainer}>\n      <PageHeader name=\"My Profile\" />\n\n      <div className={styles.teamProjectDetailsContainer}>\n        <div className={styles.attributeNamesContainer}>\n          <div>Name:</div>\n          <div>Surname:</div>\n          <div>Permission Level:</div>\n          <div>Status:</div>\n          <div>Email:</div>\n          <br />\n          <br />\n          <div>Change password</div>\n        </div>\n        <div className={styles.attributeValuesContainer}>\n          <div>{user.name}</div>\n          <div>{user.surname}</div>\n          <div>\n            <PermissionLabel type={user.type} />\n          </div>\n          <div>\n            <StatusLabel status={user.status} />\n          </div>\n          <div>{user.email}</div>\n          <br />\n          <br />\n          <div>\n            <Button\n              id={styles.buttonEdit}\n              onClick={() => {\n                setIsPasswordChange(!isPasswordChange)\n              }}\n            >\n              Change\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MyProfile\n\nconst StatusLabel = (props: any) => {\n  if (props.status === 0)\n    return <label className={styles.status_radio_button__blue}>Active</label>\n  else if (props.status === 1)\n    return <label className={styles.status_radio_button__red}>Resigned</label>\n  else\n    return <label className={styles.status_radio_button__green}>Archived</label>\n}\n\nconst PermissionLabel = (props: any) => {\n  if (props.type === 1)\n    return (\n      <label className={styles.status_radio_button__blue}>Participant</label>\n    )\n  else if (props.type === 2)\n    return <label className={styles.status_radio_button__red}>Mentor</label>\n  else return <label className={styles.status_radio_button__green}>Admin</label>\n}\n","import React from 'react'\nimport { Box, LinearProgress } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles'\nimport { useHistory } from 'react-router-dom'\n\nimport UButton from '../../../components/UButton'\nimport ReusableTable from '../../../components/ReusableTable'\n\nimport styles from './ReferenceProjects.module.css'\nimport { mainTheme } from '../../../theme/customMaterialTheme'\nimport PageHeader from '../../../components/PageHeader'\nimport { useProjects } from '../../../hooks'\nimport useSnackbar from '../../../hooks/useSnackbar'\n\nexport interface ReferenceProjectsProps {}\n\nconst ReferenceProjects: React.FC<ReferenceProjectsProps> = () => {\n  const history = useHistory()\n  const { data: refProjects, isLoading, error, isFetching } = useProjects()\n  const { showError } = useSnackbar()\n\n  const columns = [\n    { field: 'projectName', width: 300, headerName: 'Project name' },\n    { field: 'sectionName', width: 250, headerName: 'SectionName' },\n    { field: 'startDate', width: 150, headerName: 'Start date' },\n    { field: 'endDate', width: 150, headerName: 'End date' },\n  ]\n\n  function handleSelection(params: any, e: any) {\n    const sectionID: string = params.row.id\n    const path = `projects/${sectionID}`\n    history.push(path)\n  }\n\n  function handleAddButton(e: any) {\n    const path = `projects/add`\n    history.push(path)\n  }\n\n  if (error) showError((error as Error).message)\n\n  if (isLoading) return <LinearProgress />\n  if (!refProjects) return <div>Error...</div>\n\n  return (\n    <ThemeProvider theme={mainTheme}>\n      <PageHeader name=\"Projects\" />\n      <Box className={styles.container}>\n        <Box display=\"flex\" className={styles.container__header}>\n          <span>Manage Reference Projects</span>\n          <div className={styles.container__header__button}>\n            <UButton text=\"ADD\" color=\"primary\" onClick={handleAddButton} />\n          </div>\n        </Box>\n        <div className={styles.projectsTable}>\n          <ReusableTable\n            name=\"\"\n            columns={columns}\n            onRowClick={handleSelection}\n            isLoading={isLoading}\n            error={error}\n            data={refProjects}\n            isFetching={isFetching}\n          />\n        </div>\n      </Box>\n    </ThemeProvider>\n  )\n}\n\nexport default ReferenceProjects\n","import React from 'react'\nimport styles from './EditableField.module.css'\nimport UButton from '../UButton'\nimport { Box } from '@material-ui/core'\n\nexport interface EditableFieldProps {\n  isEdit: boolean\n  isAdding?: boolean\n  fieldName: string\n  fieldID: string\n  fieldValue: string\n  placeholder?: string\n  onChange?: any\n  textArea?: boolean\n  modalAction?: any\n}\n\nconst EditableField = (props: EditableFieldProps) => {\n  return (\n    <div className={styles.manageForm__row}>\n      <div\n        className={\n          props.textArea\n            ? styles.manageForm__row__key__desc\n            : styles.manageForm__row__key\n        }\n      >\n        <label htmlFor={props.fieldName}>{props.fieldName}</label>\n      </div>\n\n      <div\n        className={\n          props.textArea\n            ? `${styles.manageForm__row__value} ${styles.manageForm__row__value__desc}`\n            : styles.manageForm__row__value\n        }\n      >\n        {props.isEdit && !props?.textArea && !props?.modalAction ? (\n          <input\n            type=\"text\"\n            id={props.fieldID}\n            name={props.fieldName}\n            value={props.fieldValue}\n            placeholder={props.placeholder}\n            onChange={props.onChange}\n          />\n        ) : props.isEdit && props?.textArea ? (\n          <textarea\n            id={props.fieldID}\n            name={props.fieldName}\n            value={props.fieldValue}\n            placeholder={props.placeholder}\n            onChange={props.onChange}\n          />\n        ) : props.isEdit && props?.modalAction ? (\n          <Box display=\"flex\">\n            <p style={{ marginRight: '4rem' }}> {props.fieldValue} </p>\n            <UButton\n              text={props.isAdding ? 'FIND' : 'CHANGE'}\n              color=\"primary\"\n              onClick={props.modalAction}\n            />\n          </Box>\n        ) : (\n          <p> {props.fieldValue} </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default EditableField\n","import React from 'react'\nimport PageHeader from '../../components/PageHeader'\nimport ReusableGoBack from '../../components/ReusableGoBack'\n\nexport interface DetailPageProps {\n  pageName: string\n  elementName: string\n}\n\nconst DetailPage: React.FC<DetailPageProps> = ({ children, ...restProps }) => {\n  return (\n    <div>\n      <PageHeader>\n        <ReusableGoBack {...restProps} />\n      </PageHeader>\n      {children}\n    </div>\n  )\n}\n\nexport default DetailPage\n","import React, { useEffect, useState } from 'react'\nimport { Box, LinearProgress } from '@material-ui/core'\nimport { match, useHistory, useParams } from 'react-router-dom'\nimport { GridValueFormatterParams } from '@material-ui/data-grid'\n\nimport EditableField from '../../../components/EditableField'\nimport UButton from '../../../components/UButton'\nimport DeleteButton from '../../../components/DeleteButton'\nimport useSnackbar from '../../../hooks/useSnackbar'\nimport {\n  useUpdateProject,\n  useDeleteProject,\n  useCreateProject,\n  useSections,\n  useProjects,\n  useProject,\n} from '../../../hooks'\nimport DetailPage from '../../../components/DetailPage'\nimport { Section } from '../../../models'\nimport FindModal from '../../../components/FindModal'\nimport { displayFormattedDate } from '../../../api'\n\nimport { InputValues } from './types'\nimport styles from './ManageReferenceProject.module.css'\n\nexport interface ManageReferenceProjectProps {\n  history: any\n  location: Location\n  match: match\n}\n\nconst initialValues = {\n  _id: '',\n  description: '',\n  projectName: '',\n  projectUrl: '',\n  sectionId: '',\n  sectionName: '',\n}\n\nconst ManageReferenceProject = (props: ManageReferenceProjectProps) => {\n  const { projectID } = useParams<{ projectID: string }>()\n  const history = useHistory()\n\n  const [isEdit, setIsEdit] = useState(false)\n  const [isAdding, setIsAdding] = useState(false)\n  const [project, setProject] = useState<InputValues>(initialValues)\n  const { showError } = useSnackbar()\n  const {\n    mutate: updateProject,\n    isSuccess: isUpdatedSuccessfully,\n  } = useUpdateProject()\n  const { mutate: deleteProject } = useDeleteProject()\n  const {\n    mutate: addProject,\n    isSuccess: isCreatedSuccessfully,\n  } = useCreateProject()\n  const { data: fetchedProject, error, isLoading } = useProject(projectID, {\n    enabled: !!projectID,\n  })\n  useProjects()\n\n  const [isOpenSectionsModal, setIsOpenSectionsModal] = useState(false)\n  const sectionsQuery = useSections({\n    enabled: isOpenSectionsModal,\n  })\n\n  useEffect(() => {\n    if (props?.match?.path?.match('add')) {\n      setIsAdding(true)\n      setIsEdit(true)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (isCreatedSuccessfully || isUpdatedSuccessfully) {\n      history.push('/projects')\n    }\n  }, [isCreatedSuccessfully, isUpdatedSuccessfully, history])\n\n  useEffect(() => {\n    if (fetchedProject) {\n      const { sectionId, id, ...project } = fetchedProject\n      setProject({\n        _id: id,\n        sectionId,\n        ...project,\n      })\n    }\n  }, [fetchedProject])\n\n  function toggleEdit() {\n    setIsEdit(!isEdit)\n  }\n\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { value, id: name } = event.currentTarget\n\n    setProject({\n      ...project,\n      [name]: value,\n    })\n  }\n\n  function handleSave() {\n    const { _id, sectionName, ...queryData } = project\n    if (isAdding) {\n      addProject(queryData)\n      setIsAdding(false)\n    } else {\n      updateProject({ ...queryData, _id })\n    }\n  }\n\n  function handleDelete() {\n    if (!isAdding) deleteProject(project._id)\n\n    history.push('/projects')\n  }\n\n  function openSectionsModal() {\n    setIsOpenSectionsModal(true)\n  }\n  function closeSectionsModal() {\n    setIsOpenSectionsModal(false)\n  }\n\n  function handleSectionSelection(section: Section) {\n    closeSectionsModal()\n    setProject({\n      ...project,\n      sectionId: section.id,\n      sectionName: section.name,\n    })\n  }\n\n  const sectionColumns = [\n    { field: 'name', width: 200, headerName: 'section Name' },\n    {\n      field: 'startDate',\n      width: 200,\n      headerName: 'Start date',\n      sortable: true,\n      valueFormatter: (params: GridValueFormatterParams) =>\n        displayFormattedDate(params.value as number),\n    },\n    {\n      field: 'endDate',\n      width: 200,\n      headerName: 'End date',\n      sortable: true,\n      valueFormatter: (params: GridValueFormatterParams) =>\n        displayFormattedDate(params.value as number),\n    },\n  ]\n\n  if (error) showError((error as Error).message)\n\n  if (isLoading) return <LinearProgress />\n\n  return (\n    <DetailPage pageName={'Projects'} elementName={project?.projectName}>\n      <Box className={styles.container}>\n        <Box display=\"flex\" className={styles.container__header}>\n          <span>Manage project</span>\n          <div className={styles.container__header__button}>\n            <DeleteButton\n              confirmTitle=\"Are you sure you want to delete the project?\"\n              onConfirm={handleDelete}\n            />\n            {isEdit ? (\n              <UButton text=\"SAVE\" color=\"primary\" onClick={handleSave} />\n            ) : (\n              <UButton text=\"EDIT\" color=\"primary\" onClick={toggleEdit} />\n            )}\n          </div>\n        </Box>\n        <form className={`${styles.manageForm} ${styles.container__body}`}>\n          <EditableField\n            isEdit={isEdit}\n            fieldName={'Name:'}\n            fieldID={'projectName'}\n            fieldValue={project.projectName}\n            placeholder={project.projectName || 'example project name'}\n            onChange={handleInputChange}\n          />\n\n          <EditableField\n            isEdit={isEdit}\n            isAdding={isAdding}\n            fieldName={'Section name:'}\n            fieldID={'Section name'}\n            fieldValue={project.sectionName}\n            modalAction={openSectionsModal}\n          />\n\n          {isOpenSectionsModal && isEdit && (\n            <FindModal<Section>\n              onRowSelection={handleSectionSelection}\n              query={sectionsQuery}\n              queryKey=\"sections\"\n              columns={sectionColumns}\n              searchPlaceholder=\"Search by name\"\n              searchBy=\"name\"\n              name=\"Find section\"\n              open={isOpenSectionsModal}\n              handleClose={() => setIsOpenSectionsModal(false)}\n              handleOpen={() => setIsOpenSectionsModal(true)}\n            />\n          )}\n\n          <EditableField\n            isEdit={isEdit}\n            fieldName={'URL:'}\n            fieldID={'projectUrl'}\n            fieldValue={project.projectUrl}\n            placeholder={project.projectUrl || 'http://example.project.url'}\n            onChange={handleInputChange}\n          />\n\n          <EditableField\n            isEdit={isEdit}\n            fieldName={'Description:'}\n            fieldID={'description'}\n            fieldValue={project.description}\n            placeholder={project.description || 'Some example description'}\n            onChange={handleInputChange}\n            textArea={true}\n          />\n        </form>\n      </Box>\n    </DetailPage>\n  )\n}\n\nexport default ManageReferenceProject\n","import React, { useState } from 'react'\nimport { Backdrop, Fade, Modal, MuiThemeProvider } from '@material-ui/core'\n\nimport ReusableTable from '../ReusableTable'\nimport SearchInput from '../SearchInput'\n\nimport styles from './FindProject.module.css'\nimport { mainTheme } from '../../theme/customMaterialTheme'\nimport { useProjects } from '../../hooks'\n\nexport interface FindSectionProps {\n  selectedProjectId?: string\n  isOpen: boolean\n  handleClose: any\n  onSectionSelection: any\n}\n\nconst FindProject: React.FC<FindSectionProps> = (props) => {\n  const { data: projects, ...restData } = useProjects()\n  const [searchedName, setSearchedName] = useState('')\n\n  const handleRowClick = (params: any) => {\n    props.onSectionSelection(params.row)\n  }\n\n  const onSearch = (name: string) => {\n    setSearchedName(name)\n  }\n\n  const columns = [\n    { field: 'projectName', width: 200, headerName: 'Project Name' },\n    { field: 'sectionName', width: 200, headerName: 'section Name' },\n    { field: 'startDate', width: 130, headerName: 'Start date' },\n    { field: 'endDate', width: 130, headerName: 'End date' },\n  ]\n  const displayedProjects =\n    projects &&\n    projects.filter(\n      (p) =>\n        p.projectName.toLowerCase().includes(searchedName.toLowerCase()) ||\n        p.sectionName.toLowerCase().includes(searchedName.toLowerCase()),\n    )\n  return (\n    <MuiThemeProvider theme={mainTheme}>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={styles.modal}\n        open={props.isOpen}\n        onClose={props.handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.isOpen}>\n          <div className={styles.container}>\n            <div className={styles.container__header}>\n              <span>Select project</span>\n            </div>\n\n            <div className={styles.container__body}>\n              <div className={styles.container__body__search}>\n                <SearchInput onSubmit={onSearch} placeholder=\"Search by name\" />\n              </div>\n              <div className={styles.container__body__table}>\n                <ReusableTable\n                  name=\"Projects\"\n                  columns={columns}\n                  onRowClick={handleRowClick}\n                  data={displayedProjects}\n                  {...restData}\n                />\n              </div>\n            </div>\n          </div>\n        </Fade>\n      </Modal>\n    </MuiThemeProvider>\n  )\n}\n\nexport default FindProject\n","import React from 'react'\nimport styles from './NameValuePair.module.css'\n\nexport interface NameValuePairProps {\n  name: string\n}\n\nconst NameValuePair: React.FC<NameValuePairProps> = ({ name, children }) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.name}>{name}</div>\n      <div className={styles.value}>{children}</div>\n    </div>\n  )\n}\n\nexport default NameValuePair\n","import { createSlice } from '@reduxjs/toolkit'\nimport { RootState } from '../app/store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\n\ninterface InitialState {\n  isEditMode: boolean\n}\n\nconst initialState: InitialState = {\n  isEditMode: false,\n}\n\nexport const EditingSlice = createSlice({\n  name: 'teamProject',\n  initialState,\n  reducers: {\n    switchEditMode: (state) => {\n      state.isEditMode = !state.isEditMode\n    },\n  },\n})\n\nconst { switchEditMode } = EditingSlice.actions\nconst selectTeamProjects = (state: RootState) => state.editingInfo\n\nexport const useEditing = () => {\n  const dispatch = useDispatch()\n  const { isEditMode } = useSelector(selectTeamProjects)\n\n  useEffect(() => {\n    return () => {\n      if (isEditMode) dispatch(switchEditMode)\n    }\n  }, [dispatch, isEditMode])\n\n  return {\n    isEditMode,\n    switchEditMode: () => dispatch(switchEditMode()),\n  }\n}\nexport default EditingSlice.reducer\n","import React, { useState, useEffect } from 'react'\nimport styles from './TeamProject.module.css'\nimport FindProject from '../../../components/FindProject'\nimport DeleteButton from '../../../components/DeleteButton'\nimport { useParams, useHistory } from 'react-router-dom'\nimport {\n  useTeamProject,\n  useDeleteTeamProject,\n  useUpdateTeamProject,\n} from '../../../hooks/useQuery/useTeamProjects'\nimport { TeamProjectDetails } from '../../../api/TeamProjects.api'\nimport UButton from '../../../components/UButton'\nimport NameValuePair from '../../../components/NameValuePair'\nimport ConfirmButton from '../../../components/ConfirmButton'\nimport { LinearProgress } from '@material-ui/core'\nimport { ProjectDto } from '../../../api/ReferenceProject.api'\nimport { useEditing } from '../../../Redux/EditingSlice'\nimport DetailPage from '../../../components/DetailPage'\n\nexport interface TeamProjectProps {}\n\nconst TeamProject: React.FC<TeamProjectProps> = () => {\n  const { teamProjectId } = useParams()\n  const [headerName, setHeaderName] = useState(teamProjectId)\n  return (\n    <DetailPage pageName={'Team Projects'} elementName={headerName}>\n      <TeamProjectContent\n        teamProjectId={teamProjectId}\n        setHeader={setHeaderName}\n      />\n    </DetailPage>\n  )\n}\n\nexport default TeamProject\n\nconst TeamProjectContent = ({\n  teamProjectId,\n  setHeader,\n}: {\n  teamProjectId: string\n  setHeader: Function\n}) => {\n  const { isLoading, isError, data } = useTeamProject(teamProjectId)\n  const { isEditMode } = useEditing()\n\n  useEffect(() => {\n    setHeader(data?.projectName ?? teamProjectId)\n  }, [data, setHeader, teamProjectId])\n\n  if (isLoading) return <LinearProgress />\n  if (isError || !data) return <div> Error...</div>\n\n  if (isEditMode) return <TeamProjectDetailsEdit {...data} />\n\n  return <TeamProjectDetailView {...data} />\n}\n\nconst TeamProjectDetailsEdit = (props: TeamProjectDetails) => {\n  const history = useHistory()\n  const { switchEditMode } = useEditing()\n\n  const deleteRequest = useDeleteTeamProject(switchEditMode)\n  const updateRequest = useUpdateTeamProject(switchEditMode)\n\n  const [projectName, setProjectName] = useState(props.projectName)\n  const [projectUrl, setProjectUrl] = useState(props.projectUrl)\n  const [description, setProjectDescription] = useState(props.description)\n  const [project, setProject] = useState(props?.parentProjectId)\n  const [isOpenSectionsModal, setIsOpenSectionsModal] = useState(false)\n\n  const closeSectionsModal = () => {\n    setIsOpenSectionsModal(false)\n  }\n  const openSectionsModal = () => {\n    setIsOpenSectionsModal(true)\n  }\n\n  const mentorName = `${props.teamId?.mentor.name ?? ''} ${\n    props.teamId?.mentor.surname ?? ''\n  }`\n\n  return (\n    <div className={styles.teamProjectContainer}>\n      <div className={styles.teamProjectHeader}>\n        <span className={styles.teamProjectHeaderName}>\n          Manage team project\n        </span>\n\n        <ConfirmButton\n          text={'Cancel'}\n          confirmTitle=\"Implemented changes will be abandoned\"\n          confirmContent=\"Are u sure?\"\n          onConfirm={switchEditMode}\n        />\n        <DeleteButton\n          confirmTitle=\"Do you really want to delete this project?\"\n          onConfirm={() => {\n            deleteRequest(props._id)\n            history.goBack()\n          }}\n        />\n        <UButton\n          text={'Save'}\n          onClick={() => {\n            updateRequest({\n              _id: props._id,\n              teamId: props.teamId?._id,\n              projectName,\n              projectUrl,\n              description,\n              parentProjectId: project?._id,\n            })\n          }}\n        />\n      </div>\n      <div className={styles.teamProjectDetailsContainer}>\n        <NameValuePair name={'Name:'}>\n          <input\n            className={styles.input}\n            value={projectName}\n            onChange={(e) => setProjectName(e.target.value)}\n          />\n        </NameValuePair>\n        <NameValuePair name={'Reference project:'}>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <p>{project?.projectName ?? ''}</p>\n            <UButton\n              text={'change project/section'}\n              onClick={openSectionsModal}\n            />\n          </div>\n        </NameValuePair>\n        <NameValuePair name={'Team mentor:'}>\n          <p>{mentorName}</p>\n        </NameValuePair>\n        <NameValuePair name={'Section name:'}>\n          <p>{project?.sectionId?.name ?? ''}</p>\n        </NameValuePair>\n        <NameValuePair name={'Project URL:'}>\n          <input\n            className={styles.input}\n            value={projectUrl}\n            onChange={(e) => setProjectUrl(e.target.value)}\n          ></input>\n        </NameValuePair>\n        <NameValuePair name={'Description:'}>\n          <textarea\n            className={styles.textarea}\n            value={description}\n            onChange={(e) => setProjectDescription(e.target.value)}\n          />\n        </NameValuePair>\n      </div>\n\n      <FindProject\n        selectedProjectId={project?._id}\n        onSectionSelection={async (row: ProjectDto) => {\n          if (!project) return\n          setProject({\n            ...project,\n            _id: row.id,\n            projectName: row.projectName,\n            sectionId: {\n              ...project.sectionId,\n              id: row.sectionId,\n              name: row.sectionName,\n            },\n          })\n          closeSectionsModal()\n        }}\n        isOpen={isOpenSectionsModal}\n        handleClose={closeSectionsModal}\n      />\n    </div>\n  )\n}\n\nconst TeamProjectDetailView = (props: TeamProjectDetails) => {\n  const { switchEditMode } = useEditing()\n\n  return (\n    <div className={styles.teamProjectContainer}>\n      <div className={styles.teamProjectHeader}>\n        <span className={styles.teamProjectHeaderName}>\n          Manage team project\n        </span>\n        <UButton text={'Edit'} onClick={switchEditMode} />\n      </div>\n\n      <div className={styles.teamProjectDetailsContainer}>\n        <NameValuePair name={'Name:'}>\n          <p>{props?.projectName}</p>\n        </NameValuePair>\n        <NameValuePair name={'Reference project:'}>\n          <p>{props?.parentProjectId?.projectName}</p>\n        </NameValuePair>\n        <NameValuePair name={'Team mentor:'}>\n          <p>\n            {props?.teamId?.mentor?.name} {props?.teamId?.mentor?.surname}\n          </p>\n        </NameValuePair>\n        <NameValuePair name={'Section name:'}>\n          <p>{props?.parentProjectId?.sectionId?.name}</p>\n        </NameValuePair>\n        <NameValuePair name={'Project URL:'}>\n          <p>{props?.projectUrl}</p>\n        </NameValuePair>\n        <NameValuePair name={'Description:'}>\n          <p>{props?.description}</p>\n        </NameValuePair>\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, CssBaseline, Typography, Container } from '@material-ui/core'\nimport StyledTextField from '../../../components/StyledTextField'\nimport HeaderRegistration from '../../../components/HeaderRegistration'\nimport useSnackbar from '../../../hooks/useSnackbar'\nimport SuccessfulResetPasswordInfo from './SuccessfulResetPasswordInfo'\nimport useStyles from './ResetPasswordStyles'\nimport { api } from '../../../api'\n\nexport interface ResetPasswordRequestProps {}\n\nexport default function ResetPasswordRequest() {\n  const { showError } = useSnackbar()\n  const classes = useStyles()\n  const [email, setEmail] = useState('')\n  const [beenSent, setBeenSent] = useState(false)\n\n  const handleSubmit = async () => {\n    try {\n      await api.post('users/requestpasswordreset', { email })\n      setBeenSent(true)\n    } catch (error) {\n      showError('Incorrect email!')\n      console.log(error)\n    }\n  }\n\n  if (beenSent)\n    return (\n      <SuccessfulResetPasswordInfo\n        title={'Email with reset link has been sent!'}\n      />\n    )\n  return (\n    <div>\n      <HeaderRegistration />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Reset Password\n          </Typography>\n          <div className={classes.form}>\n            <StyledTextField\n              margin=\"normal\"\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              data-testid=\"rp-email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              data-testid=\"rp-button\"\n              onClick={handleSubmit}\n            >\n              Send\n            </Button>\n          </div>\n        </div>\n      </Container>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useCookies } from 'react-cookie'\nimport styles from './MainView.module.css'\nimport Header from '../../../components/Header'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport PrivateRoute from '../../../components/PrivateRoute'\nimport HomePage from '../HomePage'\n\nimport CourseCreate from '../../Admin/CourseCreate'\nimport Course from '../../Admin/Course'\nimport CourseList from '../../Admin/CourseList'\nimport LogIn from '../LogIn'\nimport { Registration } from '../Registration'\nimport ManageTeam from '../../Admin/ManageTeam'\nimport { getUserFromLocalStorage } from '../../../app/utils'\nimport ManageSheets from '../../Admin/ManageSheets'\nimport ManageSheet from '../../Admin/ManageSheet'\nimport TeamProjects from '../../Admin/TeamProjects'\nimport ManageTeams from '../../Admin/ManageTeams'\nimport ManageUsers from '../../Admin/ManageUsers'\nimport UserGrades from '../../Participant/UserGrades'\nimport ManageUser from '../../Admin/ManageUser'\nimport ResetPasswordFromLink from '../ResetPassword/ResetPasswordFromLink'\nimport ManageSections from '../../Admin/ManageSections'\nimport SectionView from '../../Admin/SectionView'\nimport MyProfileView from '../MyProfile'\nimport { UserType as Role } from '../../../models/User.model'\nimport ReferenceProjects from '../../Admin/ReferenceProjects'\nimport ManageReferenceProject from '../../Admin/ManageReferenceProject'\nimport TeamProject from '../../Admin/TeamProject'\nimport ResetPasswordRequest from '../ResetPassword'\nimport { api } from '../../../api'\nimport { useDidUpdateEffect, useUserMe } from '../../../hooks'\nimport { useQueryClient } from 'react-query'\n\ninterface LoggedInViewProps {\n  onLogout?: Function\n}\n\ninterface LoggedOutViewProps {\n  onLogin?: Function\n}\n\nconst MainView: React.FC = () => {\n  const userData = getUserFromLocalStorage()\n  const userID = userData.userId ?? ''\n\n  const [isLogged, setIsLogged] = useState(Boolean(userData.userType))\n  const queryClient = useQueryClient()\n\n  useUserMe({\n    enabled: !!userID,\n  })\n\n  // eslint-disable-next-line\n  const [cookies, setCookie, removeCookie] = useCookies(['token'])\n\n  useDidUpdateEffect(() => {\n    if (isLogged) queryClient.refetchQueries(['user', 'me'])\n    else queryClient.removeQueries(['user', 'me'])\n  }, [isLogged])\n\n  const handleLogout = async () => {\n    await api.get('logout')\n    removeCookie('token')\n    setIsLogged(false)\n  }\n\n  const MainContent = () => {\n    if (!isLogged) return <LoggedOut onLogin={() => setIsLogged(true)} />\n    //@ts-ignore\n    switch (parseInt(userData.userType)) {\n      case Role.Admin:\n        return <Admin onLogout={handleLogout} />\n      case Role.Mentor:\n        return <Mentor onLogout={handleLogout} />\n      default:\n        return <Participant onLogout={handleLogout} />\n    }\n  }\n\n  return (\n    <div className={styles.mainContainer}>\n      <MainContent />\n    </div>\n  )\n}\n\nfunction LoggedOut(props: LoggedOutViewProps) {\n  return (\n    <div className={styles.mainContainer}>\n      <Switch>\n        <Route path=\"/login\">\n          <LogIn onLogin={props.onLogin} />\n        </Route>\n        <Route path=\"/registration\">\n          <Registration />\n        </Route>\n        <Route path=\"/resetpassword\">\n          <ResetPasswordRequest />\n        </Route>\n        <Route path=\"/passwordReset\">\n          <ResetPasswordFromLink />\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/login\" />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nfunction Admin(props: LoggedInViewProps) {\n  return (\n    <div className={styles.mainContainer}>\n      <Header onLogout={props.onLogout} />\n      <Switch>\n        <PrivateRoute path=\"/users/:userID\" component={ManageUser} />\n        <PrivateRoute path=\"/users\">\n          <ManageUsers />\n        </PrivateRoute>\n        <PrivateRoute path=\"/courses/:id\" component={Course}></PrivateRoute>\n        <PrivateRoute exact path=\"/coursecreate\">\n          <CourseCreate />\n        </PrivateRoute>\n        <PrivateRoute path=\"/courses\">\n          <CourseList />\n        </PrivateRoute>\n        <PrivateRoute path=\"/sections/:id/edit\">\n          <SectionView />\n        </PrivateRoute>\n        <PrivateRoute path=\"/sections/create\">\n          <SectionView />\n        </PrivateRoute>\n        <PrivateRoute path=\"/sections\">\n          <ManageSections />\n        </PrivateRoute>\n        <PrivateRoute\n          path=\"/gradesheets/:sheetId\"\n          component={ManageSheet}\n        ></PrivateRoute>\n        <PrivateRoute path=\"/gradesheets\">\n          <ManageSheets />\n        </PrivateRoute>\n\n        <PrivateRoute exact path=\"/projects\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/projects/add\" component={ManageReferenceProject} />\n        <PrivateRoute\n          path=\"/projects/:projectID\"\n          component={ManageReferenceProject}\n        />\n        <PrivateRoute path=\"/teamprojects/:teamProjectId\">\n          <TeamProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/teamprojects\">\n          <TeamProjects />\n        </PrivateRoute>\n\n        <PrivateRoute\n          path=\"/teams/:teamId\"\n          component={ManageTeam}\n        ></PrivateRoute>\n        <PrivateRoute path=\"/teams\">\n          <ManageTeams />\n        </PrivateRoute>\n        <PrivateRoute path=\"/myprofile\">\n          <MyProfile />\n        </PrivateRoute>\n        <PrivateRoute path=\"/home\">\n          <HomePage />\n        </PrivateRoute>\n        <Route exact path=\"/\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nfunction Mentor(props: LoggedInViewProps) {\n  return (\n    <div className={styles.mainContainer}>\n      <Header onLogout={props.onLogout} />\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <HomePage />\n        </PrivateRoute>\n        <PrivateRoute path=\"/team\">\n          <MyTeam />\n        </PrivateRoute>\n        <PrivateRoute path=\"/gradesheets\">\n          <ManageSheets />\n        </PrivateRoute>\n        <PrivateRoute path=\"/myprofile\">\n          <MyProfile />\n        </PrivateRoute>\n        <Route exact path=\"/\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nfunction Participant(props: LoggedInViewProps) {\n  return (\n    <div className={styles.mainContainer}>\n      <Header onLogout={props.onLogout} />\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <HomePage />\n        </PrivateRoute>\n        <PrivateRoute path=\"/grades\">\n          <UserGrades />\n        </PrivateRoute>\n        <PrivateRoute path=\"/team\">\n          <MyTeam />\n        </PrivateRoute>\n        <PrivateRoute path=\"/myprofile\">\n          <MyProfile />\n        </PrivateRoute>\n        <Route exact path=\"/\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\nfunction Projects() {\n  return <ReferenceProjects />\n}\n\nfunction MyTeam() {\n  return <h2>My team</h2>\n}\nfunction MyProfile() {\n  return <MyProfileView />\n}\n\nexport default MainView\n","import React from 'react'\nimport './App.css'\nimport MainView from './pages/Common/MainView'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Snackbar from './components/Snackbar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <MainView />\n      </Router>\n      <Snackbar />\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport editingReducer from '../Redux/EditingSlice'\nimport reusableTableReducer from '../components/ReusableTable/ReusableTableSlice'\nimport courseDetails from '../pages/Admin/Course/CourseDetailsSlice'\nimport courseList from '../pages/Admin/CourseList/CourseListSlice'\nimport SnackbarReducer from '../components/Snackbar/SnackbarSlice'\nimport menuReducer from '../components/Menu/MenuSlice'\n\nexport const store = configureStore({\n  reducer: {\n    editingInfo: editingReducer,\n    tables: reusableTableReducer,\n    courseDetails,\n    courseList,\n    snackbarDetails: SnackbarReducer,\n    menuReducer,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme/customMaterialTheme'\nimport { QueryClientProvider } from 'react-query'\nimport { ReactQueryDevtools } from 'react-query/devtools'\nimport queryClient from './QueryClient'\nimport { CookiesProvider } from 'react-cookie'\n\nReactDOM.render(\n  <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <CookiesProvider>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </CookiesProvider>\n      <ReactQueryDevtools />\n    </QueryClientProvider>\n  </Provider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"manageSections\":\"SectionView_manageSections__HWv1M\",\"select\":\"SectionView_select__n90rV\",\"container\":\"SectionView_container__2gEs5\",\"mainHeader\":\"SectionView_mainHeader__3m3Bk\",\"manageContainer\":\"SectionView_manageContainer__7hoX7\",\"buttonContainer\":\"SectionView_buttonContainer__1ISBv\",\"deleteButton\":\"SectionView_deleteButton__1lw2W\",\"editButton\":\"SectionView_editButton__1HASR\",\"saveButton\":\"SectionView_saveButton__3We_z\",\"manageHeader\":\"SectionView_manageHeader__3xWrT\",\"manageDescription\":\"SectionView_manageDescription__gwPKh\",\"manageSectionInfo\":\"SectionView_manageSectionInfo__1LdaT\",\"section_title\":\"SectionView_section_title__30tbe\",\"course_title\":\"SectionView_course_title__1aCMR\",\"manageSectionMaterial\":\"SectionView_manageSectionMaterial__3vvdl\",\"manageSectionDates\":\"SectionView_manageSectionDates__yFzfF\",\"sectionDatesItem\":\"SectionView_sectionDatesItem__19Qoz\",\"manageSectionRefPro\":\"SectionView_manageSectionRefPro__YApl3\",\"textFieldSectionName\":\"SectionView_textFieldSectionName__zkyER\",\"textFieldDescription\":\"SectionView_textFieldDescription__1X2ox\",\"textFieldDate\":\"SectionView_textFieldDate__3pVyg\",\"textFieldDateContainerOnEdit\":\"SectionView_textFieldDateContainerOnEdit__5svbS\",\"textFieldCourse\":\"SectionView_textFieldCourse__1jew5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ManageGrades_error__IyW0I\",\"loading\":\"ManageGrades_loading__27TmE\",\"container\":\"ManageGrades_container__3O2l7\",\"container__header\":\"ManageGrades_container__header__2RftB\",\"gradeContainer\":\"ManageGrades_gradeContainer__2HXs5\",\"gradeContainer__header\":\"ManageGrades_gradeContainer__header__cW6DQ\",\"gradeContainer__body\":\"ManageGrades_gradeContainer__body__2Hkm-\",\"gradeContainer__body__row\":\"ManageGrades_gradeContainer__body__row__2WE0k\",\"gradeContainer__body__row__key\":\"ManageGrades_gradeContainer__body__row__key__2ep-D\",\"gradeContainer__body__row__value\":\"ManageGrades_gradeContainer__body__row__value__HXz-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamId\":\"ManageTeam_teamId__vmQBQ\",\"manageTeams\":\"ManageTeam_manageTeams__2UZBH\",\"container\":\"ManageTeam_container__2zITW\",\"mainHeader\":\"ManageTeam_mainHeader__2gUg4\",\"teamInfo\":\"ManageTeam_teamInfo__2vLmz\",\"teamInfoRow\":\"ManageTeam_teamInfoRow__1THtG\",\"manageContainer\":\"ManageTeam_manageContainer__2ZKF6\",\"manageHeader\":\"ManageTeam_manageHeader__2NLpL\",\"buttons\":\"ManageTeam_buttons__Ns5wz\",\"table\":\"ManageTeam_table__1qbig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"UserGrades_error__2LXJ8\",\"loading\":\"UserGrades_loading__24tes\",\"breadcrumbs\":\"UserGrades_breadcrumbs__Udczw\",\"container\":\"UserGrades_container__1Ghof\",\"container__header\":\"UserGrades_container__header__3npxe\",\"container__body\":\"UserGrades_container__body__2ZYXR\",\"table__percentage\":\"UserGrades_table__percentage__3nkKv\",\"table__points\":\"UserGrades_table__points__1okvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamProjectContainer\":\"TeamProject_teamProjectContainer__3oCx5\",\"teamProjectHeader\":\"TeamProject_teamProjectHeader__3vITb\",\"teamProjectHeaderName\":\"TeamProject_teamProjectHeaderName__1STtU\",\"teamProjectDetailsContainer\":\"TeamProject_teamProjectDetailsContainer__2Kzu2\",\"attributeValuesContainer\":\"TeamProject_attributeValuesContainer__5Ijik\",\"input\":\"TeamProject_input__3tMpq\",\"textarea\":\"TeamProject_textarea__3bI2R\"};","export * from './Course.model'\nexport * from './Grade.model'\nexport * from './Project.model'\nexport * from './TeamProject.model'\nexport * from './Team.model'\nexport * from './User.model'\nexport * from './Section.model'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ListItemLink_ListItem__33uxF\",\"ListItemSelected\":\"ListItemLink_ListItemSelected__1aKLn\",\"ListItemText\":\"ListItemLink_ListItemText__1Xrdw\",\"ListItemTextSmall\":\"ListItemLink_ListItemTextSmall__2Xcyb\",\"ListItemIcon\":\"ListItemLink_ListItemIcon__2lCXq\",\"ListItemInsideSelected\":\"ListItemLink_ListItemInsideSelected__3bItW\",\"ListItemSmall\":\"ListItemLink_ListItemSmall__1ciyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"manageSheets\":\"ManageSheets_manageSheets__iYaei\",\"container\":\"ManageSheets_container__10CBB\",\"mainHeader\":\"ManageSheets_mainHeader__1iJWA\",\"searchInput\":\"ManageSheets_searchInput__2dQH-\",\"manageContainer\":\"ManageSheets_manageContainer__bhIjS\",\"buttons\":\"ManageSheets_buttons__1XWXj\",\"selectSortBy\":\"ManageSheets_selectSortBy__1Q9hG\",\"manageHeader\":\"ManageSheets_manageHeader__2rUD4\",\"table\":\"ManageSheets_table__3rFsh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"manageTeams\":\"ManageTeams_manageTeams__r04Xd\",\"container\":\"ManageTeams_container__2QxNT\",\"mainHeader\":\"ManageTeams_mainHeader__rFH_X\",\"searchInput\":\"ManageTeams_searchInput__TNxI5\",\"manageContainer\":\"ManageTeams_manageContainer__1s9On\",\"buttons\":\"ManageTeams_buttons__1FWoC\",\"selectSortBy\":\"ManageTeams_selectSortBy__2QbxS\",\"manageHeader\":\"ManageTeams_manageHeader__1ttmJ\",\"table\":\"ManageTeams_table__3QGBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"manageSections\":\"ManageSections_manageSections__aO2uM\",\"container\":\"ManageSections_container__26VoX\",\"mainHeader\":\"ManageSections_mainHeader__fypHT\",\"searchInput\":\"ManageSections_searchInput__3J5Sx\",\"manageContainer\":\"ManageSections_manageContainer__6DrUH\",\"addButton\":\"ManageSections_addButton__wAV2t\",\"selectSortBy\":\"ManageSections_selectSortBy__28jR8\",\"manageHeader\":\"ManageSections_manageHeader__1LyDh\",\"table\":\"ManageSections_table__1DoZu\"};"],"sourceRoot":""}